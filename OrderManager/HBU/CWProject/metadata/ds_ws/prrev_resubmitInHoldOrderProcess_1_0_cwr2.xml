<?xml version="1.0" encoding="UTF-8" ?>
<process__revision filenameHash="6b0def1fc9ba6aee2b4769865e1207b2" versionHash="eccbc87e4b5ce2fe28308fd9f2a7baf3" name="ds_ws.resubmitInHoldOrderProcess_1_0_cwr2">
  <activity name="start" type="seqActivity">
    <guid>{04d21682-bac9-0d73-6532-e4de12eb698f}</guid>
    <label>Start</label>
    <schedule type="sched">
      <instance>Daily</instance>
      <time>02:00:00</time>
    </schedule>
    <x>35.682617</x>
    <y>30.0</y>
    <childList>
      <child name="resubmitInHoldOrderProcedure" type="scriptActivity">
        <guid>{0f4463b8-5329-af7e-d91b-365d817c0721}</guid>
        <label>Re-submit &quot;In Hold&quot; Order Procedure</label>
        <x>30.0</x>
        <y>122.0</y>
        <methodList>
          <method name="cwOnProcActBefore" type="action">
            <category>before</category>
            <guid>{03231efe-4a9f-b622-a0e7-7c12f1157094}</guid>
            <system>true</system>
            <script><![CDATA[
              var debug = "[PROCESS:" + process.id + "] ";
              debugPrintln("[" + ds_ws.common_currentDateAsStringDDMMYYYYHH24MISS() + "]" + debug + "RE-SUBMIT 'IN HOLD' ORDER PROCEDURE...");

                    var good = 0;
                    var bad = 0;
                    var failure_response = 0;
                    var failed_communication = 0;
                    var generic_error = 0;

                    // Procedure to re-submit all the 'In Hold' order that failed:
                    // - retrieving all the records from the STC_ORDER_MESSAGE table where:
                    //      a. In Hold = true;
                    //      b. Internal Order Status is "Granite Call FAILURE" or "Granite Communication FAILED"
                    var orderMessages = ds_ws.searchAllOrderMessageForResubmitInHoldOrder();
                    // - analyzing the content of the extraction
                    if (orderMessages != null && orderMessages.length > 0) {
              debugPrintln("[" + ds_ws.common_currentDateAsStringDDMMYYYYHH24MISS() + "]" + debug + "RETRIEVED # " + orderMessages.length + " RECORDS FROM THE STC_ORDER_MESSAGE TABLE...");
                          for (var z = 0; z < orderMessages.length; z++) {
                                try {
                                      var orderMessage = orderMessages[z];
                                      var order = Order.getOrderById(orderMessage.orderId);

              // --------------------------------------------------------------------------------------------------
                                      // -----------------------------------------------------
                                      // USING THIS BECAUSE OF EXPEDITER BUG [TR # 406109]:
                                      // - the request is pushed forward vs. Granite through JMS
                                      // -----------------------------------------------------
                                      var inputJMS = new DataStructure("ds_jms:orderMessage_el");
                                      // - components "ServiceParameter"
                                      if (order.serviceParametersList != null) {
                                            for (var j = 0; j < order.serviceParametersList.count; j++) {
                                                  inputJMS.serviceParameters[j].creationDate = order.serviceParametersList[j].serviceParameters.creationDate;
                                                  inputJMS.serviceParameters[j].oldServiceNumber = ds_ws.common_replaceSpecialCharacter(order.serviceParametersList[j].serviceParameters.oldServiceNumber);
                                                  inputJMS.serviceParameters[j].serviceDate = order.serviceParametersList[j].serviceParameters.serviceDate;
                                                  inputJMS.serviceParameters[j].serviceDescription = ds_ws.common_replaceSpecialCharacter(order.serviceParametersList[j].serviceParameters.serviceDescription);
                                                  inputJMS.serviceParameters[j].serviceNumber = ds_ws.common_replaceSpecialCharacter(order.serviceParametersList[j].serviceParameters.serviceNumber);
                                                  inputJMS.serviceParameters[j].serviceType = ds_ws.common_replaceSpecialCharacter(order.serviceParametersList[j].serviceParameters.serviceType);
                                                  // - components "NameValue"
                                                  if (order.serviceParametersList[j].nameValueList  != null) {
                                                        for (var k = 0; k < order.serviceParametersList[j].nameValueList.count; k++) {
                                                              inputJMS.serviceParameters[j].nameValue[k].name = ds_ws.common_replaceSpecialCharacter(order.serviceParametersList[j].nameValueList[k].nameValue.name);
                                                              inputJMS.serviceParameters[j].nameValue[k].value = ds_ws.common_replaceSpecialCharacter(order.serviceParametersList[j].nameValueList[k].nameValue.value);
                                                        }
                                                  }
                                            }
                                      }
                                      // - main leaves of the order
                                      inputJMS.accountNumber               = order.orderMessage.accountNumber;
                                      inputJMS.alternativeSolution         = order.orderMessage.alternativeSolution;
                                      inputJMS.bandwidth                   = order.orderMessage.bandwidth;
                                      inputJMS.cctType                     = order.orderMessage.cctType;
                                      inputJMS.circuitNumber               = order.orderMessage.circuitNumber;
                                      inputJMS.createdBy                   = order.orderMessage.createdBy;
                                      inputJMS.creationDate                = order.orderMessage.creationDate;
                                      inputJMS.customerIDNumber            = order.orderMessage.customerIDNumber;
                                      inputJMS.fictBillingNumber           = order.orderMessage.fictBillingNumber;
                                      inputJMS.icmsSONumber                = order.orderMessage.icmsSONumber;
                                      inputJMS.locationAAccessCircuit      = order.orderMessage.locationAAccessCircuit;
                                      inputJMS.locationAAccessType         = order.orderMessage.locationAAccessType;
                                      inputJMS.locationACCLICode           = order.orderMessage.locationACCLICode;
                                      inputJMS.locationACity               = order.orderMessage.locationACity;
                                      inputJMS.locationAContactAddress     = order.orderMessage.locationAContactAddress;
                                      inputJMS.locationAContactEmail       = order.orderMessage.locationAContactEmail;
                                      inputJMS.locationAContactName        = order.orderMessage.locationAContactName;
                                      inputJMS.locationAContactTel         = order.orderMessage.locationAContactTel;
                                      inputJMS.locationAExchangeSwitchCode = order.orderMessage.locationAExchangeSwitchCode;
                                      inputJMS.locationAInterface          = order.orderMessage.locationAInterface;
                                      inputJMS.locationAJVCode             = order.orderMessage.locationAJVCode;
                                      inputJMS.locationAPlateID            = order.orderMessage.locationAPlateID;
                                      inputJMS.locationARemarks            = order.orderMessage.locationARemarks;
                                      inputJMS.locationBAccessCircuit      = order.orderMessage.locationBAccessCircuit;
                                      inputJMS.locationBAccessType         = order.orderMessage.locationBAccessType;
                                      inputJMS.locationBCCLICode           = order.orderMessage.locationBCCLICode;
                                      inputJMS.locationBCity               = order.orderMessage.locationBCity;
                                      inputJMS.locationBContactAddress     = order.orderMessage.locationBContactAddress;
                                      inputJMS.locationBContactEmail       = order.orderMessage.locationBContactEmail;
                                      inputJMS.locationBContactName        = order.orderMessage.locationBContactName;
                                      inputJMS.locationBContactTel         = order.orderMessage.locationBContactTel;
                                      inputJMS.locationBExchangeSwitchCode = order.orderMessage.locationBExchangeSwitchCode;
                                      inputJMS.locationBInterface          = order.orderMessage.locationBInterface;
                                      inputJMS.locationBJVCode             = order.orderMessage.locationBJVCode;
                                      inputJMS.locationBPlateID            = order.orderMessage.locationBPlateID;
                                      inputJMS.locationBRemarks            = order.orderMessage.locationBRemarks;
                                      inputJMS.oldCircuitNumber            = order.orderMessage.oldCircuitNumber;
                                      inputJMS.orderNumber                 = order.orderMessage.orderNumber;
                                      inputJMS.orderStatus                 = order.orderMessage.orderStatus;
                                      inputJMS.orderType                   = order.orderMessage.orderType;
                                      inputJMS.priority                    = order.orderMessage.priority;
                                      inputJMS.projectId                   = order.orderMessage.projectId;
                                      inputJMS.referenceTelNumber          = order.orderMessage.referenceTelNumber;
                                      inputJMS.remarks                     = order.orderMessage.remarks;
                                      inputJMS.serviceDate                 = order.orderMessage.serviceDate;
                                      inputJMS.serviceDescription          = order.orderMessage.serviceDescription;
                                      inputJMS.serviceType                 = order.orderMessage.serviceType;
                                      inputJMS.wires                       = order.orderMessage.wires;
                                      inputJMS.customerName                = order.orderMessage.customerName;
                                      inputJMS.customerType                = order.orderMessage.customerType;
                                      inputJMS.customerContact             = order.orderMessage.customerContact;
                                      inputJMS.plateID                     = order.orderMessage.plateID;
                                      inputJMS.oldPlateId                  = order.orderMessage.oldPlateId;
                                      inputJMS.tbPortNumber                = order.orderMessage.tbPortNumber;
                                      inputJMS.unitNumber                  = order.orderMessage.unitNumber;
                                      inputJMS.oldUnitNumber               = order.orderMessage.oldUnitNumber;
                                      inputJMS.businessUnit                = order.orderMessage.businessUnit;
                                      inputJMS.customerIDType              = order.orderMessage.customerIDType;
                                      inputJMS.customerNumber              = order.orderMessage.customerNumber;
                                      inputJMS.reservationNumber           = order.orderMessage.reservationNumber;
                                      inputJMS.reservationExpiry           = order.orderMessage.reservationExpiry;

                                      var result = ifGranite_jms.invokeGraniteIF_SubmitOrder(inputJMS);
                                      var outputJMS = result != null ? result[0] : null;

                                      if (outputJMS != null) {
                                            if (outputJMS.failure != null) {
                                                  if (outputJMS.failure.status == "SUCCESS") {
              debugPrintln("[" + ds_ws.common_currentDateAsStringDDMMYYYYHH24MISS() + "]" + "<RE-SUBMIT 'IN HOLD' ORDER> WITH 'ORDER #': '" + inputJMS.orderNumber + "', 'ORDER STATUS': '" + inputJMS.orderStatus + "' WORKED CORRECTLY!");
                                                        Global.logDebug("<RE-SUBMIT 'IN HOLD' ORDER> WITH 'ORDER #': '" + inputJMS.orderNumber + "', 'ORDER STATUS': '" + inputJMS.orderStatus + "' WORKED CORRECTLY!");
                                                        order.orderMessage.internalOrderStatus = "Granite Call SUCCESSFUL";
                                                        order.save();
                                                        good++;
              // --> NB. FIRST CASE: SUCCESS!!!
                                                  }
                                                  else{
              debugPrintln("[" + ds_ws.common_currentDateAsStringDDMMYYYYHH24MISS() + "]" + "<RE-SUBMIT 'IN HOLD' ORDER> WITH 'ORDER #': '" + inputJMS.orderNumber + "' NOT ARCHIVED... GRANITE CALL FAILURE [" + outputJMS.failure.errorDescription + "]...");
                                                        Global.logDebug("<RE-SUBMIT 'IN HOLD' ORDER> WITH 'ORDER #': '" + inputJMS.orderNumber +
                                                                                "' NOT ACCEPTED... GRANITE CALL FAILURE [" + outputJMS.failure.errorDescription + "]...");
                                                        order.orderMessage.internalOrderStatus = "Granite Call FAILURE";
                                                        order.save();
                                                        bad++;
                                                        failure_response++;
              // --> NB. SECOND CASE: FAILURE FROM GRANITE!!!
                                                  }
                                            }
                                      }
                                      else{
              debugPrintln("[" + ds_ws.common_currentDateAsStringDDMMYYYYHH24MISS() + "]" + "<RE-SUBMIT 'IN HOLD' ORDER> WITH 'ORDER #': '" + inputJMS.orderNumber + "' NOT ACCEPTED... GRANITE COMMUNICATION FAILED...");
                                            Global.logDebug("<RE-SUBMIT 'IN HOLD' ORDER> WITH 'ORDER #': '" + inputJMS.orderNumber + "' NOT ACCEPTED... GRANITE COMMUNICATION FAILED...");
                                            order.orderMessage.internalOrderStatus = "Granite Communication FAILED";
                                            order.save();
                                            bad++;
                                            failed_communication++;
              // --> NB. THIRD CASE: FAILURE ON COMMUNICATION WITH GRANITE!!!
                                      }
              //---------------------------------------------------------------------------------------------------
                                }
                                catch(exc) {
              debugPrintln("[" + ds_ws.common_currentDateAsStringDDMMYYYYHH24MISS() + "]" + debug + " [ERROR] 'IN HOLD' ORDER <" + j + "> NOT MANAGED FOR ORDER #: " + inputJMS.orderNumber + " REASON '" + exc.message + "'...");
                                      generic_error++;
                                }
                          }
                    }
                    else{
              debugPrintln("[" + ds_ws.common_currentDateAsStringDDMMYYYYHH24MISS() + "]" + debug + "RETRIEVED NO RECORDS FROM THE STC_ORDER_MESSAGE TABLE...");
                    }

                    var msg = "[INFORMATION] RE-SUBMIT 'IN HOLD' ORDER PROCESS COMPLETED AT '" + ds_ws.common_currentDateAsStringDDMMYYYYHH24MISS() + "'" +
                                  "\n 'IN HOLD' ORDERS RETRIEVED TO BE RE-SUBMITTED # '" + (orderMessages != null ? orderMessages.length : "0") + "';" +
                                  "\n  - ORDERS ACCEPTED BY GRANITE # '" + good + "';" +
                                  "\n  - ORDERS NOT ACCEPTED BY GRANITE # '" + bad + "';" +
                                "\n     - BEACAUSE OF FAILURE RESPONSE # '" + failure_response + "';" +
                                  "\n     - BEACAUSE OF COMMUNICATION EXCEPTION # '" + failed_communication + "';" +
                                  "\n  - ORDERS NOT ACCEPTED BECAUSE OF GENERIC EXCEPTION # '" + generic_error + "';";
              debugPrintln("[" + ds_ws.common_currentDateAsStringDDMMYYYYHH24MISS() + "]" + debug + msg);
                    Global.logDebug(msg);
            ]]></script>
          </method>
        </methodList>
      </child>
      <child name="resubmitInHoldOrderProcedure_HOME" type="scriptActivity">
        <guid>{03f9265b-aadd-0eb1-1d42-70fd77ab010f}</guid>
        <label>Re-submit &quot;In Hold&quot; Order Procedure [HOME]</label>
        <x>30.0</x>
        <y>261.8047</y>
        <methodList>
          <method name="cwOnProcActBefore" type="action">
            <category>before</category>
            <guid>{03231efe-4a9f-b622-a0e7-7c12f1157094}</guid>
            <system>true</system>
            <script><![CDATA[
              var debug = "[PROCESS:" + process.id + "] ";
              debugPrintln("[" + ds_ws.common_currentDateAsStringDDMMYYYYHH24MISS() + "]" + debug + "RE-SUBMIT 'IN HOLD' ORDER PROCEDURE HOME...");

                    var good = 0;
                    var bad = 0;
                    var failure_response = 0;
                    var generic_error = 0;

                    // Procedure to re-submit all the 'In Hold' order that failed:
                    // - retrieving all the records from the STC_ORDER_MESSAGE table where:
                    //      a. In Hold = true;
                    //      b. Internal Order Status is "Order Rejected By Granite"
                    var orderMessages = ds_ws.searchAllOrderMessageHomeForResubmitInHoldOrder();
                    // - analyzing the content of the extraction
                    if (orderMessages != null && orderMessages.length > 0) {
              debugPrintln("[" + ds_ws.common_currentDateAsStringDDMMYYYYHH24MISS() + "]" + debug + "RETRIEVED # " + orderMessages.length + " RECORDS FROM THE STC_ORDER_MESSAGE_HOME TABLE...");
                          for (var z = 0; z < orderMessages.length; z++) {
                                try {
                                      var orderMessage = orderMessages[z];
                                      var order = Order.getOrderById(orderMessage.orderId);

                                      var pid = Process.startProcess("processSTC:mainSTCProcess", order.id);
              debugPrintln("[" + ds_ws.common_currentDateAsStringDDMMYYYYHH24MISS() + "]" + debug + "Started Process with pid " + pid);

                                      Global.commitTransaction("ORDER");

                                      var countSleeping = 0;

                                      var processCompleted = false;
                                      while(!processCompleted) {
                                            // sleeps 5 seconds and checks the status of the process ...
              //debugPrintln("[" + ds_ws.common_currentDateAsStringDDMMYYYYHH24MISS() + "]" + debug + "Sleeping before checking the status of Process " + pid);
                                            Global.sleep(5000);

                                            processCompleted = processSTC.checkIfProcessIsCompleted(pid);
                                            countSleeping++;
                                      }

                                      // reload the order because modified by the process
                                      var cworderId = order.id;
                                      order = Order.getOrderById(cworderId);

                                      if (order.orderACK.Status == "SUCCESS") {
              debugPrintln("[" + ds_ws.common_currentDateAsStringDDMMYYYYHH24MISS() + "]" + "<RE-SUBMIT 'IN HOLD' ORDER HOME> WITH 'ORDER #': '" + order.orderMessage.orderNumber + "', 'ORDER STATUS': '" + order.orderMessage.orderStatus + "' WORKED CORRECTLY!");
                                            Global.logDebug("<RE-SUBMIT 'IN HOLD' ORDER HOME> WITH 'ORDER #': '" + order.orderMessage.orderNumber + "', 'ORDER STATUS': '" + order.orderMessage.orderStatus + "' WORKED CORRECTLY!");
                                            order.orderMessage.internalOrderStatus = "Granite Call SUCCESSFUL";
                                            order.save();
                                            good++;
                                      }
                                      else {
              debugPrintln("[" + ds_ws.common_currentDateAsStringDDMMYYYYHH24MISS() + "]" + "<RE-SUBMIT 'IN HOLD' ORDER HOME> WITH 'ORDER #': '" + order.orderMessage.orderNumber + "' NOT ARCHIVED... Order Rejected By Granite [" + order.orderACK.ErrorDescription + "]...");
                                            Global.logDebug("<RE-SUBMIT 'IN HOLD' ORDER HOME> WITH 'ORDER #': '" + order.orderMessage.orderNumber + "' NOT ACCEPTED... Order Rejected By Granite [" + order.orderACK.ErrorDescription + "]...");
                                            order.orderMessage.internalOrderStatus = "Order Rejected By Granite";
                                            order.save();
                                            bad++;
                                            failure_response++;
                                      }
                                }
                                catch(exc) {
              debugPrintln("[" + ds_ws.common_currentDateAsStringDDMMYYYYHH24MISS() + "]" + debug + " [ERROR] 'IN HOLD' ORDER <" + j + "> NOT MANAGED FOR ORDER #: " + order.orderMessage.orderNumber + " REASON '" + exc.message + "'...");
                                      generic_error++;
                                }
                          } // end for on order on hold
                    }
                    else{
              debugPrintln("[" + ds_ws.common_currentDateAsStringDDMMYYYYHH24MISS() + "]" + debug + "RETRIEVED NO RECORDS FROM THE STC_ORDER_MESSAGE_HOME TABLE...");
                    }

                    var msg = "[INFORMATION] RE-SUBMIT 'IN HOLD' ORDER HOME PROCESS COMPLETED AT '" + ds_ws.common_currentDateAsStringDDMMYYYYHH24MISS() + "'" +
                                  "\n 'IN HOLD' ORDERS HOME RETRIEVED TO BE RE-SUBMITTED # '" + (orderMessages != null ? orderMessages.length : "0") + "';" +
                                  "\n  - ORDERS ACCEPTED BY GRANITE # '" + good + "';" +
                                  "\n  - ORDERS NOT ACCEPTED BY GRANITE # '" + bad + "';" +
                                "\n     - BECAUSE OF FAILURE RESPONSE # '" + failure_response + "';" +
                                  "\n  - ORDERS NOT ACCEPTED BECAUSE OF GENERIC EXCEPTION # '" + generic_error + "';";
              debugPrintln("[" + ds_ws.common_currentDateAsStringDDMMYYYYHH24MISS() + "]" + debug + msg);
                    Global.logDebug(msg);
            ]]></script>
          </method>
        </methodList>
      </child>
      <child name="end" type="completeActivity">
        <guid>{07fae1e2-a155-13c9-b2a6-6394a1f437a8}</guid>
        <label>End</label>
        <x>41.682617</x>
        <y>418.31055</y>
        <methodList>
          <method name="cwOnProcActBefore" type="action">
            <category>before</category>
            <guid>{08733f33-d9c0-d6ac-1101-406bd2d92201}</guid>
            <system>true</system>
            <script><![CDATA[
              var debug = "[PROCESS:" + process.id + "] ";
              debugPrintln("[" + ds_ws.common_currentDateAsStringDDMMYYYYHH24MISS() + "]" + debug + "END...");
            ]]></script>
          </method>
        </methodList>
      </child>
    </childList>
    <methodList>
      <method name="cwOnProcActBefore" type="action">
        <category>before</category>
        <guid>{016b90b3-77f3-31bc-ef5f-32d5693ce574}</guid>
        <system>true</system>
        <script><![CDATA[
          var debug = "[PROCESS:" + process.id + "] ";
          debugPrintln("[" + ds_ws.common_currentDateAsStringDDMMYYYYHH24MISS() + "]" + debug + "START...");
        ]]></script>
      </method>
    </methodList>
  </activity>
  <label>Re-submit &quot;In Hold&quot; Order Process v. 1.0</label>
  <metaVersion>3</metaVersion>
  <priority>8</priority>
  <process>proc_ds_ws.resubmitInHoldOrderProcess_1_0</process>
  <revision>2</revision>
  <type>Global</type>
</process__revision>