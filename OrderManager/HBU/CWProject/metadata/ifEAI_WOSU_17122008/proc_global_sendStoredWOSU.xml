<?xml version="1.0" encoding="UTF-8" ?>
<process filenameHash="8cf15fc6553467b17b1a0835e3eebd03" versionHash="eccbc87e4b5ce2fe28308fd9f2a7baf3" name="ifEAI_WOSU_17122008.global_sendStoredWOSU">
  <activity name="start" type="seqActivity">
    <guid>{0772fd0a-552d-b190-bee4-6baca228d386}</guid>
    <label>Start</label>
    <schedule type="sched">
      <duration type="dur">
        <length>P0Y0M0DT0H3M0S</length>
      </duration>
    </schedule>
    <x>50.0</x>
    <y>199.0</y>
    <childList>
      <child name="anotherRecordToBeSent" type="switchActivity">
        <guid>{0f6628cc-aed8-4b3f-9336-59423394d361}</guid>
        <label>Exist Another Record Must Be Send?</label>
        <x>233.0</x>
        <y>175.0</y>
        <childList>
          <child name="no" type="caseActivity">
            <guid>{00927501-809b-ab36-1508-506e296078fe}</guid>
            <label>No</label>
            <x>239.0</x>
            <y>40.0</y>
          </child>
          <child name="yes" type="caseActivity">
            <guid>{080255e6-ea81-8814-2f72-68e86a30f40a}</guid>
            <label>Yes</label>
            <x>0.0</x>
            <y>0.0</y>
            <childList>
              <child name="startManagingEvent" type="seqActivity">
                <guid>{0435724e-1ac1-eac8-9e68-81b0e9c18075}</guid>
                <label>Start Managing Event</label>
                <x>433.00003</x>
                <y>194.0</y>
                <childList>
                  <child name="sendEventToEAI" type="scriptActivity">
                    <guid>{0a4ed576-3ecf-868e-4db1-11b5aea54ce0}</guid>
                    <label>Send Event To EAI</label>
                    <x>430.00003</x>
                    <y>349.0</y>
                    <methodList>
                      <method name="cwOnProcActBefore" type="action">
                        <category>before</category>
                        <guid>{09bb57de-238d-868d-8eae-13def69a30db}</guid>
                        <system>true</system>
                        <script><![CDATA[
                          var debug      = " - WOSU Global Process [Send Event To EAI] - ";
                          var resultType = "OK";

                          var receivedEvent = ds_ws.readStoredEventData(this.process.processDocument.eventDocId, "ds_jms:workOrderStatusUpdate_el");
                          if(receivedEvent != null) {
                                var inputSOAP = new DataStructure("ifEAI_WOSU_17122008:WorkOrderStatusUpdate");
                                var outputSOAP = null;

                                // - mapping the input JMS message vs. input SOAP message
                                inputSOAP.WorkOrderStatusUpdate.BusinessUnit = receivedEvent.businessUnit;
                                inputSOAP.WorkOrderStatusUpdate.CCTType = "";                                                // TO BE MAPPED....
                                inputSOAP.WorkOrderStatusUpdate.CircuitStatus = receivedEvent.circuitStatus;
                                inputSOAP.WorkOrderStatusUpdate.DeptOf.ArrayOfstringItem[0] = receivedEvent.deptOf;
                                inputSOAP.WorkOrderStatusUpdate.DeptOfWorkOrder = receivedEvent.deptOf;
                                inputSOAP.WorkOrderStatusUpdate.ICMSTaskID = "";
                                inputSOAP.WorkOrderStatusUpdate.OrderType = "";

                                var orderMessage = null;

                                if (receivedEvent.businessUnit == "Home") {
                                      inputSOAP.WorkOrderStatusUpdate.ICMSTaskID = receivedEvent.icmsSONumber;
                                      inputSOAP.WorkOrderStatusUpdate.OrderType = receivedEvent.orderType;
                                }
                                else{
                                      orderMessage = ds_ws.searchOrderMessageByOrderNumber(receivedEvent.orderNumber);

                                      if (orderMessage != null) {
                          debugPrintln("[" + ds_ws.common_currentDateAsStringDDMMYYYYHH24MISS() + "]" + debug + "ORDER MESSAGE FOUND IN THE DB...");
                                                  var order = Order.getOrderById(orderMessage.orderId);
                                                  if (order != null) {
                                                        inputSOAP.WorkOrderStatusUpdate.ICMSTaskID = order.orderMessage.icmsSONumber;
                                                        inputSOAP.WorkOrderStatusUpdate.OrderType = order.orderMessage.orderType;
                                                  }
                                            }
                                      }

                                      inputSOAP.WorkOrderStatusUpdate.OrderNumber = receivedEvent.orderNumber;
                                      inputSOAP.WorkOrderStatusUpdate.TaskActualCompletion.ArrayOfstringItem[0] = receivedEvent.taskActualCompletion;
                                      inputSOAP.WorkOrderStatusUpdate.TaskActualStart.ArrayOfstringItem[0] = receivedEvent.taskActualStart;
                                      inputSOAP.WorkOrderStatusUpdate.TaskDescription.ArrayOfstringItem[0] = receivedEvent.taskDescription;
                                      inputSOAP.WorkOrderStatusUpdate.TaskJeopardyStatus.ArrayOfstringItem[0] = receivedEvent.taskJeopardyStatus;
                                      inputSOAP.WorkOrderStatusUpdate.TaskLastModifiedBy.ArrayOfstringItem[0] = receivedEvent.taskLastModifiedBy;
                                      inputSOAP.WorkOrderStatusUpdate.TaskLastModifiedTimestamp.ArrayOfstringItem[0] = receivedEvent.taskLastModifiedTimestamp;
                                      inputSOAP.WorkOrderStatusUpdate.TaskNumber.ArrayOfstringItem[0] = receivedEvent.taskNumber;
                                      inputSOAP.WorkOrderStatusUpdate.TaskPriority.ArrayOfstringItem[0] = receivedEvent.taskPriority;
                                      inputSOAP.WorkOrderStatusUpdate.TaskRemarks.ArrayOfstringItem[0] = receivedEvent.taskRemarks;
                                      inputSOAP.WorkOrderStatusUpdate.TaskStatusCode.ArrayOfstringItem[0] = receivedEvent.taskStatusCode;
                                      inputSOAP.WorkOrderStatusUpdate.WorkOrder = receivedEvent.workOrder;
                                      inputSOAP.WorkOrderStatusUpdate.WorkOrderCircuitPathCompletionStatus = receivedEvent.workOrderCircuitPathCompletionStatus;
                                      inputSOAP.WorkOrderStatusUpdate.WorkOrderDescription = receivedEvent.workOrderDescription;
                                      inputSOAP.WorkOrderStatusUpdate.WorkOrderLastModifiedBy = receivedEvent.workOrderLastModifiedBy;
                                      inputSOAP.WorkOrderStatusUpdate.WorkOrderLastModifiedTimestamp = receivedEvent.workOrderLastModifiedTimestamp;
                                      inputSOAP.WorkOrderStatusUpdate.WorkOrderName = receivedEvent.workOrderName;
                                      inputSOAP.WorkOrderStatusUpdate.WorkOrderRemarks = receivedEvent.workOrderRemarks;
                                      inputSOAP.WorkOrderStatusUpdate.WorkOrderStatus = receivedEvent.workOrderStatus;
                                      inputSOAP.WorkOrderStatusUpdate.WorkOrderTotalTimeMinutes = receivedEvent.workOrderTotalTime;
                                      // Modified on 09.02.2008: management of 4 more attributes for WOSU message to EAI
                                      inputSOAP.WorkOrderStatusUpdate.TaskServiceNumber = receivedEvent.taskServiceNumber;
                                      inputSOAP.WorkOrderStatusUpdate.TaskServiceStatus = receivedEvent.taskServiceStatus;
                                      inputSOAP.WorkOrderStatusUpdate.TaskServiceType = receivedEvent.taskServiceType;
                                      // 20.02.2013 - Removed OrderRowItemID from DataStructure according with the mail from Rao (19.02.2013)
                                      // inputSOAP.WorkOrderStatusUpdate.OrderRowItemID = receivedEvent.orderRowItemID;
                                      // Modified on 01.31.2013: management of 1 more attribute for WOSU message to EAI
                                      inputSOAP.WorkOrderStatusUpdate.TaskName = receivedEvent.taskName;

                                      // looking for circuitId into the "parameters" array (a <name, value> pair array); the name is "SIP Circuit ID"
                                      inputSOAP.WorkOrderStatusUpdate.CircuitID = ifEAI_WOSU_17122008.getCircuitIdFromEvent(receivedEvent);
                                      inputSOAP.WorkOrderStatusUpdate.PlateID = ifEAI_WOSU_17122008.getPlateIDFromEvent(receivedEvent);
                                      inputSOAP.WorkOrderStatusUpdate.WorkOrderStage = ifEAI_WOSU_17122008.getWorkOrderStageFromEvent(receivedEvent);

                                      /********
                                            Fix for SMR 1472 - copying all incoming NV pair into outgoing message, except for PlateID and WorkOrderStage

                                          //loading parameters array
                                      var parm = 0;
                                      if(ifEAI_WOSU_17122008.getServiceNumberFromEvent(receivedEvent) != null) {
                                          inputSOAP.WorkOrderStatusUpdate.parameters[parm].name = ifEAI_WOSU_17122008.getElementNameForServiceNumber();
                                          inputSOAP.WorkOrderStatusUpdate.parameters[parm].value = ifEAI_WOSU_17122008.getServiceNumberFromEvent(receivedEvent);
                                          parm++;
                                      }
                                      if(ifEAI_WOSU_17122008.getServiceStatusFromEvent(receivedEvent) != null) {
                                          inputSOAP.WorkOrderStatusUpdate.parameters[parm].name = ifEAI_WOSU_17122008.getElementNameForServiceStatus();
                                          inputSOAP.WorkOrderStatusUpdate.parameters[parm].value = ifEAI_WOSU_17122008.getServiceStatusFromEvent(receivedEvent);
                                          parm++;
                                      }
                                      if(ifEAI_WOSU_17122008.getServiceTypeFromEvent(receivedEvent) != null) {
                                          inputSOAP.WorkOrderStatusUpdate.parameters[parm].name = ifEAI_WOSU_17122008.getElementNameForServiceType();
                                          inputSOAP.WorkOrderStatusUpdate.parameters[parm].value = ifEAI_WOSU_17122008.getServiceTypeFromEvent(receivedEvent);
                                          parm++;
                                      }

                                      *******************/

                                      if(receivedEvent.parameters != null) {
                                          var parm = 0;
                                          for(var i=0; i<receivedEvent.parameters.length; i++) {
                                              var nameValuePair = receivedEvent.parameters[i];

                                              if(nameValuePair.name != ifEAI_WOSU_17122008.getElementNameForWorkOrderStage() &&
                                                 nameValuePair.name != ifEAI_WOSU_17122008.getElementNameForPlateID()) {
                                                  if(nameValuePair.value != null) {
                                                      // maintain the same old approach: if the value is null, NV pair is not forwarded
                                                      inputSOAP.WorkOrderStatusUpdate.parameters[parm].name = nameValuePair.name;
                                                      inputSOAP.WorkOrderStatusUpdate.parameters[parm].value = nameValuePair.value;
                                                      parm++;
                                                  }
                                              }
                                              else {
                                                 // skip this record according to the requirements
                                              }
                                          }
                                      }


                                      try {
                          debugPrintln("[" + ds_ws.common_currentDateAsStringDDMMYYYYHH24MISS() + "]" + debug + "INVOKING INTERFACE...");
                                            // Modified on 11.08.2008:
                                            // - the Circuit Number is updated with the value generated on XNG (for FTTH service)
                                            outputSOAP = ifEAI_WOSU_17122008.invokeEAIIF_WorkOrderStatusUpdate(inputSOAP,
                                                                                                                                                 receivedEvent.circuitNumber,
                                                                                                                                                 true,
                                                                                                                                                 receivedEvent.parentOrderNumber,
                                                                                                                                                 receivedEvent.orderRowItemID);

                                            if(outputSOAP != null && outputSOAP.length == 1) {
                          debugPrintln("[" + ds_ws.common_currentDateAsStringDDMMYYYYHH24MISS() + "][" + this.process.id + "]" + debug + "RESULT: " + outputSOAP[0].toXML() + "...");
                                                  resultType = "OK";
                                            }
                                            else {
                                                  if(outputSOAP == null) {
                          debugPrintln("[" + ds_ws.common_currentDateAsStringDDMMYYYYHH24MISS() + "][" + this.process.id + "]" + debug + "outputSoap is null....");
                                                        resultType = "NOT_SUCCESS_EAI";
                                                  }
                                                  else {
                          debugPrintln("[" + ds_ws.common_currentDateAsStringDDMMYYYYHH24MISS() + "][" + this.process.id + "]" + debug + "Received " + outputSOAP.length + " items from EAI");
                                                        for(var i=0; i<outputSOAP.length; i++) {
                          debugPrintln("[" + ds_ws.common_currentDateAsStringDDMMYYYYHH24MISS() + "][" + this.process.id + "]" + debug + "Received[" + i + "]: " + outputSOAP[i].toXML());
                                                        }
                                                        resultType = "OK";

                                                        // ignoring the result of the invocation ...
                                                        // resultType = "NOT_SUCCESS_EAI";
                                                  }
                                            }
                                      }
                                      catch (exc){
                          debugPrintln("[" + ds_ws.common_currentDateAsStringDDMMYYYYHH24MISS() + "][" + this.process.id + "]" + debug + "EXCEPTION: " + exc.message);

                                            if(exc.message.indexOf("XE0023") >= 0) {
                          debugPrintln("[" + ds_ws.common_currentDateAsStringDDMMYYYYHH24MISS() + "][" + this.process.id + "]" + debug + "I/F getDelay = " + Global.getInterfaceDelay(this.process.processDocument.interfaceName));
                                                  resultType = "NOT_AVAILABLE_EXPD";
                                            }
                                            else {
                                                  resultType = "NOT_AVAILABLE_EAI";
                                            }
                                      }
                                }

                          debugPrintln("[" + ds_ws.common_currentDateAsStringDDMMYYYYHH24MISS() + "][" + this.process.id + "]" + debug + "resultInvoke: " + resultType + "...");


                                if(resultType == "OK") {
                                      ds_ws.deleteStoredEvent(this.process.processDocument.eventDocId);

                                      if(receivedEvent.businessUnit == "Home") {
                                            var parentOrderNumber = receivedEvent.parentOrderNumber;
                                            var childOrderNumber = receivedEvent.orderNumber;
                                            var isAtheebOrder = false;

                                            var orderMessage = ds_ws.searchOrderMessageHomeByOrderNumber(receivedEvent.orderNumber);
                                            if(orderMessage != null) {
                                                  if(parentOrderNumber == null && orderMessage.parentOrderNumber != null) {
                                                        // - replacing the Order Number
                                                        parentOrderNumber = orderMessage.parentOrderNumber;
                                                  }

                                                  isAtheebOrder = (orderMessage.orderDomain.toUpperCase() == 'IWBU');
                          debugPrintln("[" + ds_ws.common_currentDateAsStringDDMMYYYYHH24MISS() + "][" + this.process.id + "]" + debug + "isAtheebOrder(" + childOrderNumber + ") = " + isAtheebOrder);
                                            }

                                            if(parentOrderNumber != null) {
                                                  if(isAtheebOrder) {
                                                        var configParameterArchiveForAtheebOrder = Global.getConfigVariable("ARCHIVE_FOR_ATHEEB_ORDER", "NO");
                                                        if(configParameterArchiveForAtheebOrder == "YES") {
                                                              ds_ws.insertInOrderArchivable(childOrderNumber, parentOrderNumber);
                                                        }
                                                        else {
                          debugPrintln("[" + ds_ws.common_currentDateAsStringDDMMYYYYHH24MISS() + "][" + this.process.id + "]" + debug + "Skipping Atheeb order <" + childOrderNumber + "," + parentOrderNumber + "> from archiving ...");
                                                        }
                                                  }
                                                  else {
                                                        ds_ws.insertInOrderArchivable(childOrderNumber, parentOrderNumber);
                                                  }
                                            }
                                      }

                                }
                                else {
                                      ds_ws.updateLastSentDateInStoredEvent(this.process.processDocument.eventDocId);
                                }

                                this.process.processDocument.resultType = resultType;
                        ]]></script>
                      </method>
                    </methodList>
                  </child>
                  <child name="wait" type="scriptActivity">
                    <guid>{0d261c63-9d71-01fc-2c99-32ba18ff9c30}</guid>
                    <label>Wait</label>
                    <schedule type="sched">
                      <duration type="dur">
                        <methodList>
                          <method name="cwOnDuration" type="action">
                            <guid>{0617146a-37b3-47ef-30cd-b60dbe8e5a1a}</guid>
                            <system>true</system>
                            <script>return ds_ws.computeDelayForEAIGlobalProcesses(this.processDocument, this.id);</script>
                          </method>
                        </methodList>
                      </duration>
                    </schedule>
                    <x>338.00003</x>
                    <y>360.0</y>
                    <methodList>
                      <method name="cwOnProcActBefore" type="action">
                        <category>before</category>
                        <guid>{00a30b1c-2ddf-64e0-766e-99035efbd966}</guid>
                        <system>true</system>
                        <script>return;</script>
                      </method>
                    </methodList>
                  </child>
                  <child name="repeat" type="repeatActivity">
                    <element>proc_ifEAI_WOSU_17122008.global_sendStoredWOSU/seqActivity_start/switchActivity_anotherRecordToBeSent</element>
                    <guid>{0e4aacaa-6df9-6282-9ebc-c1a8a7845192}</guid>
                    <label>Repeat</label>
                    <x>236.00003</x>
                    <y>360.0</y>
                  </child>
                </childList>
              </child>
            </childList>
            <methodList>
              <method name="cwOnProcActCond" type="action">
                <category>cond</category>
                <guid>{0cf76870-7a39-a667-698e-82465ea8a9e1}</guid>
                <system>true</system>
                <script><![CDATA[
                  var found = false;
                  var result = ds_ws.searchFirstStoredGraniteEventByType(this.process.processDocument.eventType);
                  if(result != null) {
                        this.process.processDocument.eventDocId = result.cwDocId;
                        found = true;

                  debugPrintln("[" + ds_ws.common_currentDateAsStringDDMMYYYYHH24MISS() + "][" + this.process.id + "] - WOSU Global Process - Found new event with id " + this.process.processDocument.eventDocId);

                        }

                        return (found);
                ]]></script>
              </method>
            </methodList>
          </child>
        </childList>
      </child>
      <child name="end" type="completeActivity">
        <guid>{03e23338-d3f0-3a8f-c8e0-4a68b3ef1e42}</guid>
        <label>End</label>
        <x>443.0</x>
        <y>40.0</y>
        <methodList>
          <method name="cwOnProcActBefore" type="action">
            <category>before</category>
            <guid>{0a3afea2-98c2-da7a-376f-a2316a106b41}</guid>
            <system>true</system>
            <script><![CDATA[
              debugPrintln("[" + ds_ws.common_currentDateAsStringDDMMYYYYHH24MISS() + "][" + this.process.id + "] End Global for WOSU...");
            ]]></script>
          </method>
        </methodList>
      </child>
    </childList>
    <methodList>
      <method name="cwOnProcActBefore" type="action">
        <category>before</category>
        <guid>{0b56050e-4305-33c6-ae5c-0abf762650df}</guid>
        <system>true</system>
        <script><![CDATA[
          debugPrintln("[" + ds_ws.common_currentDateAsStringDDMMYYYYHH24MISS() + "][" + this.process.id + "] Start Global for WOSU...");


                this.process.processDocument.eventType  = "WOSU";
                this.process.processDocument.interfaceName = "ifEAI_WOSU_17122008:WOSU";
                this.process.processDocument.eventDocId = null;
                this.process.processDocument.resultType = null;
        ]]></script>
      </method>
    </methodList>
  </activity>
  <curRevision>true</curRevision>
  <document>doc_ds_ws.eaiGlobalProcessDocument</document>
  <guid>{064191e2-3c57-6679-7e2b-c52f7ffbaaae}</guid>
  <highlight>10</highlight>
  <label>Global - Send Stored WOSU Events</label>
  <metaVersion>3</metaVersion>
  <priority>8</priority>
  <type>Global</type>
</process>