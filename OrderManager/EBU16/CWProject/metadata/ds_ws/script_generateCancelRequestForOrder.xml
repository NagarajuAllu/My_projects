<?xml version="1.0" encoding="UTF-8" ?>
<script name="ds_ws.generateCancelRequestForOrder">
  <label>Generate Cancel Request For Order</label>
  <metaVersion>25</metaVersion>
  <parameterList>
    <parameter name="bundleOrderToCancel" type="rifp">
      <type>nmeta_com.conceptwave.system.Object</type>
    </parameter>
    <parameter name="newRemarks" type="rifp">
      <type>dtype_com.conceptwave.system.String</type>
    </parameter>
  </parameterList>
  <script><![CDATA[
    var resultArray = null;

    var debugString = "generateCancelRequestForOrder - OrderNumber: " + bundleOrderToCancel.orderHeader.orderNumber;

    var cancelOrder = bundleOrderToCancel.copyOrder(false);
    cancelOrder.orderHeader.remarks = newRemarks + "\n\n" + (cancelOrder.orderHeader.remarks != null ? cancelOrder.orderHeader.remarks : "");
    cancelOrder.orderHeader.orderStatus = "Cancel";
    cancelOrder.orderHeader.completionDate = null;

    if(cancelOrder.orderHeaderParameters != null) {
        for(var z=0; z<cancelOrder.orderHeaderParameters.length; z++) {
            cancelOrder.orderHeaderParameters[z].orderHeaderParameter.parentElementId = cancelOrder.orderHeader.id;
        }
    }

    for(var i=0; i<cancelOrder.bundles.length; i++) {
        var bundleContainer = cancelOrder.bundles[i];
        bundleContainer.bundle = updateLineItemForCancel_(bundleContainer.bundle, bundleOrderToCancel.bundles[i].bundle);

        if(bundleContainer.bundleParameters != null) {
            for(var z=0; z<bundleContainer.bundleParameters.length; z++) {
                bundleContainer.bundleParameters[z].bundleParameter.parentElementId = bundleContainer.bundle.id;
            }
        }

        if(bundleContainer.bundleBlockParameters != null) {
            for(var z=0; z<bundleContainer.bundleBlockParameters.length; z++) {
                bundleContainer.bundleBlockParameters[z].bundleBlockParameter.parentElementId = bundleContainer.bundle.id;
            }
        }


        if(bundleContainer.circuits != null) {
            for(var j=0; j<bundleContainer.circuits.length; j++) {
                var circuitContainer = bundleContainer.circuits[j];
                circuitContainer.circuit = updateLineItemForCancel_(circuitContainer.circuit, bundleOrderToCancel.bundles[i].circuits[j].circuit);

                if(circuitContainer.circuitParameters != null) {
                    for(var z=0; z<circuitContainer.circuitParameters.length; z++) {
                        circuitContainer.circuitParameters[z].circuitParameter.parentElementId = circuitContainer.circuit.id;
                    }
                }

                if(circuitContainer.circuitBlockParameters != null) {
                    for(var z=0; z<circuitContainer.circuitBlockParameters.length; z++) {
                        circuitContainer.circuitBlockParameters[z].circuitBlockParameter.parentElementId = circuitContainer.circuit.id;
                    }
                }


                if(circuitContainer.services != null) {
                    for(var k=0; k<circuitContainer.services.length; k++) {
                        var serviceContainer = circuitContainer.services[k];
                        serviceContainer.service = updateLineItemForCancel_(serviceContainer.service, bundleOrderToCancel.bundles[i].circuits[j].services[k].service);

                        if(serviceContainer.serviceParameters != null) {
                            for(var z=0; z<serviceContainer.serviceParameters.length; z++) {
                                serviceContainer.serviceParameters[z].serviceParameter.parentElementId = serviceContainer.service.id;
                            }
                        }

                        if(serviceContainer.serviceBlockParameters != null) {
                            for(var z=0; z<serviceContainer.serviceBlockParameters.length; z++) {
                                serviceContainer.serviceBlockParameters[z].serviceBlockParameter.parentElementId = serviceContainer.service.id;
                            }
                        }


                        if(serviceContainer.subServices != null) {
                            for(var l=0; l<serviceContainer.subServices.length; l++) {
                                var subServiceContainer = serviceContainer.subServices[l];
                                subServiceContainer.subService = updateLineItemForCancel_(subServiceContainer.subService, bundleOrderToCancel.bundles[i].circuits[j].subServices[l].subService);

                                if(subServiceContainer.subServiceParameters != null) {
                                    for(var z=0; z<subServiceContainer.subServiceParameters.length; z++) {
                                        subServiceContainer.subServiceParameters[z].subServiceParameter.parentElementId = subServiceContainer.subService.id;
                                    }
                                }

                                if(subServiceContainer.subServiceBlockParameters != null) {
                                    for(var z=0; z<subServiceContainer.subServiceBlockParameters.length; z++) {
                                        subServiceContainer.subServiceBlockParameters[z].subServiceBlockParameter.parentElementId = subServiceContainer.subService.id;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    return cancelOrder;


    function updateLineItemForCancel_(lineItem, originalLineItem) {
        lineItem.action = "C";
        if((bundleOrderToCancel.orderHeader.orderType == "C" || bundleOrderToCancel.orderHeader.orderType == "T") &&
           lineItem.elementTypeInOrderTree == "C" &&
           processSTC.isLineItemCompleted(originalLineItem.lineItemStatus)) {
            // the lineItem is a circuit, linked to a C or a T and it's completed. Changing the action to "N";
            lineItem.action = originalLineItem.action;
        }
        lineItem.completionDate = null;
        lineItem.isSubmit = false;
        lineItem.isCancel = true;
        lineItem.lineItemStatus = "Hold";
        if(lineItem.elementTypeInOrderTree == "B") {
            lineItem.provisioningFlag = "PROVISIONING";
        }
        lineItem.requestedActionIsA = false;
        lineItem.workOrderNumber = null;

        return lineItem;
    }
  ]]></script>
</script>