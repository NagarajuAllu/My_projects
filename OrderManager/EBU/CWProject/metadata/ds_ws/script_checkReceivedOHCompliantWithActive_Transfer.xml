<?xml version="1.0" encoding="UTF-8" ?>
<script filenameHash="231edf484279eea85b9c79c6ddc9354f" versionHash="a87ff679a2f3e71d9181a67b7542122c" name="ds_ws.checkReceivedOHCompliantWithActive_Transfer">
  <label>Check If Received OrderHeader Is Compliant With Active For Transfer</label>
  <metaVersion>4</metaVersion>
  <parameterList>
    <parameter name="receivedOrder" type="rifp">
      <type>nmeta_com.conceptwave.system.Object</type>
    </parameter>
    <parameter name="activeOrder" type="rifp">
      <type>nmeta_com.conceptwave.system.Object</type>
    </parameter>
    <parameter name="failureArray" type="rifp">
      <type>nmeta_com.conceptwave.system.Object</type>
    </parameter>
    <parameter name="bundleIdentifier" type="rifp">
      <type>dtype_com.conceptwave.system.String</type>
    </parameter>
    <parameter name="isOrderMigrated" type="rifp">
      <type>dtype_com.conceptwave.system.Boolean</type>
    </parameter>
  </parameterList>
  <script><![CDATA[
    var validationErrors = null;

    if(receivedOrder.orderHeader != null && activeOrder.orderHeader != null) {

        // all orderHeader attributes except:
        // - the ones created by CW
        // - orderNumber
        // - orderType
        // - orderStatus
        // - creationDate
        // - createdBy
        // - createdByName
        // - createdByContactName
        // - serviceDate
        // - remarks
        // - accountNumber ==> OF COURSE!!! it's the only one that can change in Transfer orders
        // 2015-07-13 (mail from Waleed): also customerIdNumber can change!
        // 2015-07-13 (mail from Waleed): also icmsSalesOrderNumber can change!
        var headerAttributesToCheck = ["customerType", "customerIDType", "customerContact", "customerContactName", "customerName", "customerNumber",
            "priority", "referenceTelNumber", "customerSegmentation", "feasibilityFor", "reservation", "reservationNumber",  "businessUnit"];

        // MR 2015/1019: probably i made a mistake when implemented the skip for migratedOrder; but due it's already in prod, I didn't changed it
        var headerAttributesToCheck = ["customerNumber", "priority"];

        for(var i=0; i<headerAttributesToCheck.length; i++) {
            var attributeToCheck = headerAttributesToCheck[i];
            if(!isOrderMigrated || notIn_(attributeToCheck, headerAttributesToCheck)) {
                compareValues_(receivedOrder.orderHeader[attributeToCheck], activeOrder.orderHeader[attributeToCheck], attributeToCheck, "Attribute");
            }
        }

        // nv check; it loops in existing NV pair and verifies if it exists also in received one
        validationErrors = ds_ws.compareReceivedOHParametersWithExistingOne(activeOrder, receivedOrder, validationErrors, activeOrder.orderHeader.orderNumber);

        // completed check - checking if there are validation errors
        if(validationErrors != null) {
            failureArray = ds_ws.addValidationErrorsToFailureArrayForSub_UpdInWD(validationErrors, receivedOrder.orderHeader.orderNumber, failureArray, true);
        }
    }
    else {
        validationErrors = ["AE0058", Global.translateText("AE0058", null, [(receivedOrder.orderHeader != null ? "Received" : "Active"), receivedOrder.orderHeader.orderNumber])];
        failureArray = ds_ws.addValidationErrorsToFailureArrayForSub_UpdInWD(validationErrors, receivedOrder.orderHeader.orderNumber, failureArray, true);
    }

    return failureArray;


    function notIn_(attributeName, attributesToSkipArray) {
        var exist = false;
        for(var i=0; i<attributesToSkipArray.length && !exist; i++) {
            exist = (attributesToSkipArray[i] == attributeName);
        }
        return (!exist);
    }

    function compareValues_(receivedAttribute, activeAttribute, attributeName, category) {
        var debugMsg = "checkReceivedOHCompliantWithActiveTranser (" + activeOrder.orderHeader.orderNumber + ")";
        if(receivedAttribute == null) {
            if(activeAttribute != null) {
                validationErrors = ds_ws.appendToValidationErrors("AE0055", Global.translateText("AE0055", null, [category, attributeName, "\"ACTIVE\""]), validationErrors, debugMsg);
            }
        }
        else {
            if(activeAttribute == null) {
                validationErrors = ds_ws.appendToValidationErrors("AE0057", Global.translateText("AE0057", null, [category, attributeName, "\"ACTIVE\""]), validationErrors, debugMsg);
            }
            else {
                if(attributeName == 'creationDate' || attributeName == 'serviceDate') {
                    var receivedDate = new Date(receivedAttribute.getFullYear(), receivedAttribute.getMonth(), receivedAttribute.getDate());
                    var activeDate = new Date(activeAttribute.getFullYear(), activeAttribute.getMonth(), activeAttribute.getDate());

                    if(receivedDate.getTime() != activeDate.getTime()) {
                        validationErrors = ds_ws.appendToValidationErrors("AE0056", Global.translateText("AE0056", null, [category, attributeName, receivedDate, activeDate, "\"ACTIVE\""]), validationErrors, debugMsg);
                    }
                }
                else {
                    if(! receivedAttribute.toString().equals(activeAttribute.toString())) {
                        validationErrors = ds_ws.appendToValidationErrors("AE0056", Global.translateText("AE0056", null, [category, attributeName, receivedAttribute, activeAttribute, "\"ACTIVE\""]), validationErrors, debugMsg);
                    }
                }
            }
        }
    }
  ]]></script>
</script>