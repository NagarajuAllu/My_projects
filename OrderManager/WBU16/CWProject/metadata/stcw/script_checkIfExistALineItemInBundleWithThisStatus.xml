<?xml version="1.0" encoding="UTF-8" ?>
<script name="stcw.checkIfExistALineItemInBundleWithThisStatus">
  <label>Check If Exist A LineItem In Bundle With This Status</label>
  <metaVersion>25</metaVersion>
  <parameterList>
    <parameter name="lineItemExpectedStatus" type="rifp">
      <type>dtype_com.conceptwave.system.String</type>
    </parameter>
    <parameter name="lineItemParent" type="rifp">
      <type>nmeta_com.conceptwave.system.Object</type>
    </parameter>
    <parameter name="hasToBeProvisionable" type="rifp">
      <type>dtype_com.conceptwave.system.Boolean</type>
    </parameter>
  </parameterList>
  <script><![CDATA[
    var found = false;
    var orchestrationRecordForChildLineItems = stcw.findRecordsInOrchTabByOrderId_ParentId(lineItemParent.orderId, lineItemParent.id);
    if(orchestrationRecordForChildLineItems != null && orchestrationRecordForChildLineItems.length > 0) {
        for(var i=0; i<orchestrationRecordForChildLineItems.length && !found; i++) {
            var orchestrationRecord = orchestrationRecordForChildLineItems[i];
            var lineItem = Document.readDoc("stcw.lineItemDocument", orchestrationRecordForChildLineItems[i].cwDocId);
            if(hasToBeProvisionable) {
                if(orchestrationRecord.provisionable) {
                    found = (lineItem.lineItemStatus.toUpperCase() == lineItemExpectedStatus.toUpperCase());
                }
            }
            else {
                found = (lineItem.lineItemStatus.toUpperCase() == lineItemExpectedStatus.toUpperCase());
            }


            if(!found) {
                // loop for children of the record
                found = stcw.checkIfExistALineItemInBundleWithThisStatus(lineItemExpectedStatus, lineItem, hasToBeProvisionable);
            }
        }
    }

    debugPrintln(stcc.getSysdateForLog() + " checkIfExistALineItemInBundleWithThisStatus([" + lineItemExpectedStatus + "]," + lineItemParent + "): " + found);

    return found;
  ]]></script>
</script>