<?xml version="1.0" encoding="UTF-8" ?>
<script name="stcw.updateBundleAndOrderHeaderStatus">
  <label>Update Bundle And OrderHeader Status</label>
  <metaVersion>4</metaVersion>
  <parameterList>
    <parameter name="bundleOrder" type="rifp">
      <type>order_stcw.wholesaleBundleOrderSTC</type>
    </parameter>
    <parameter name="lineItem" type="rifp">
      <type>nmeta_com.conceptwave.system.Object</type>
    </parameter>
  </parameterList>
  <script><![CDATA[
    debugPrintln(stcc.getSysdateForLog() + "[updateBundleAndOrderHeaderStatus] invoking on order " + bundleOrder.id + ";" + lineItem.toXML());

    var elementStatusInUpperCase = lineItem.lineItemStatus.toUpperCase();
    var bundleLineItem = bundleOrder.parentLineItems[0].parentLineItem;
    var bundleCompletionDate = null;

    var orderHeaderNewStatus = null;
    var bundleNewStatus = null;

    var existCompleted = (stcw.checkIfExistALineItemInBundleWithThisStatus("COMPLETED", bundleLineItem, true) || stcw.checkIfExistALineItemInBundleWithThisStatus("CANCELLED", bundleLineItem, true));
    var existOnHold = stcw.checkIfExistALineItemInBundleWithThisStatus("ON-HOLD", bundleLineItem, true);
    var existProcessKO = stcw.checkIfExistProcessKOInOrchestrationTable(bundleOrder.id);

    var isVAS = lineItem.isVAS;
    var containsVAS = (lineItem.elementTypeInOrderTree == "B" && bundleLineItem.parentOrderItem.services != null);

    if(elementStatusInUpperCase == "IN-PROCESS" || elementStatusInUpperCase == "READY") {
        if(existCompleted) {
            if(existOnHold) {
                orderHeaderNewStatus = "ON-HOLD-PC";
                if(lineItem.elementTypeInOrderTree != 'B' && !isVAS) {
                    bundleNewStatus = "ON-HOLD-PC";
                }
            }
            else {
                orderHeaderNewStatus = "IN-PROGRESS";
                if(lineItem.elementTypeInOrderTree != 'B' && !isVAS) {
                    bundleNewStatus = "IN-PROGRESS";
                }
            }
        }
        else {
            if(existOnHold) {
                orderHeaderNewStatus = "ON-HOLD";
                if(lineItem.elementTypeInOrderTree != 'B' && !isVAS) {
                    bundleNewStatus = "ON-HOLD";
                }
            }
            else {
                orderHeaderNewStatus = "ORDERED";
                if(lineItem.elementTypeInOrderTree != 'B' && !isVAS) {
                    bundleNewStatus = "ORDERED";
                }
            }
        }
    }
    else if(elementStatusInUpperCase == "FAILED" && (!lineItem.alreadySentToGranite)) {
        orderHeaderNewStatus = "FAILED_SUBMIT";
        if(lineItem.elementTypeInOrderTree != 'B' && !isVAS) {
            bundleNewStatus = "FAILED_SUBMIT";
        }
    }
    else if(elementStatusInUpperCase == "ON-HOLD") {
        if(lineItem.elementTypeInOrderTree != 'B' && !isVAS) {
            if(existCompleted) {
                bundleNewStatus = "ON-HOLD-PC";
            }
            else {
                bundleNewStatus = "ON-HOLD";
            }
        }
    }
    else if(elementStatusInUpperCase == "COMPLETED") {
        if(lineItem.elementTypeInOrderTree != 'B') {
            if(!isVAS) {
                if(stcw.checkThatAllLineItemsInBundleHaveOneOfTheseStatus(["COMPLETED", "CANCELLED"], bundleLineItem, bundleOrder, true)) {
                    bundleNewStatus = "COMPLETED";
                    bundleCompletionDate = new Date();
                }
                else {
                    if(existOnHold) {
                        bundleNewStatus = "ON-HOLD-PC";
                    }
                    else {
                        bundleNewStatus = "IN-PROGRESS";
                    }
                }
            }
            else {
                // do nothing
            }
        }
        else {
            bundleNewStatus = "COMPLETED";
            bundleCompletionDate = new Date();
        }
    }
    else if(elementStatusInUpperCase == "CANCELLED") {
        if(lineItem.elementTypeInOrderTree != 'B') {
            if(!isVAS) {
                if(stcw.checkThatAllLineItemsInBundleHaveOneOfTheseStatus(["CANCELLED"], bundleLineItem, bundleOrder, false)) {
                    bundleNewStatus = "CANCELLED";
                    bundleCompletionDate = new Date();
                }
                else {
                    if(stcw.checkThatAllLineItemsInBundleHaveOneOfTheseStatus(["COMPLETED", "CANCELLED"], bundleLineItem, bundleOrder, true)) {
                        bundleNewStatus = "COMPLETED";
                        bundleCompletionDate = new Date();
                    }
                    else{
                        bundleNewStatus = "IN-PROGRESS";
                    }
                }
            }
            else {
                // do nothing
            }
        }
        else {
            bundleNewStatus = "CANCELLED";
            bundleCompletionDate = new Date();
        }
    }

    if(bundleNewStatus == null && lineItem.elementTypeInOrderTree != 'B' && !isVAS) {
        // checking if the previous status was "Hold"
        if(bundleLineItem.lineItemStatus.toUpperCase() == "ON-HOLD" || bundleLineItem.lineItemStatus.toUpperCase() == "ON-HOLD-PC") {
            if(existOnHold) {
                if(existCompleted) {
                    bundleNewStatus = "ON-HOLD-PC";
                }
                else {
                    bundleNewStatus = "ON-HOLD";
                }
            }
            else {
                if(existCompleted) {
                    bundleNewStatus = "IN-PROGRESS";
                }
                else {
                    bundleNewStatus = "ORDERED";
                }
            }
        }
    }

    // checking if there are components in KO
    if(existProcessKO && bundleNewStatus != "FAILED" && bundleNewStatus != "FAILED_SUBMIT") {
    debugPrintln(stcc.getSysdateForLog() + "[updateBundleAndOrderHeaderStatus] on <" + bundleOrder.orderHeader.orderNumber + "," + lineItem.lineItemIdentifier + ">; found process in KO for order " + bundleOrder.id + " and bundleNewStatus not FAILED (" + bundleNewStatus + ")");

        if(lineItem.elementTypeInOrderTree == 'B' && elementStatusInUpperCase == "FAILED") {
    debugPrintln(stcc.getSysdateForLog() + "[updateBundleAndOrderHeaderStatus] on <" + bundleOrder.orderHeader.orderNumber + "," + lineItem.lineItemIdentifier + ">; lineItemIsBundle and already 'FAILED'");
            bundleNewStatus = elementStatusInUpperCase;
        }
        else {
            if(!isVAS) {
                bundleNewStatus = "FAILED_SUBMIT";
            }
            else {
                // do nothing
            }
        }
        orderHeaderNewStatus = "FAILED_SUBMIT";
    }

    // finally update bundle status!
    if(bundleNewStatus != null) {
        bundleLineItem.lineItemStatus = bundleNewStatus;
        if(bundleCompletionDate != null && bundleLineItem.completionDate == null) {
            bundleLineItem.completionDate = bundleCompletionDate;
        }

    debugPrintln(stcc.getSysdateForLog() + "[updateBundleAndOrderHeaderStatus] on <" + bundleOrder.orderHeader.orderNumber + "," + lineItem.lineItemIdentifier + ">; bundleLineItem.lineItemStatus = " + bundleNewStatus);
        bundleLineItem.save();
    }
    else {
    debugPrintln(stcc.getSysdateForLog() + "[updateBundleAndOrderHeaderStatus] on <" + bundleOrder.orderHeader.orderNumber + "," + lineItem.lineItemIdentifier + ">; bundleLineItem.lineItemStatus not changed!");
    }

    var orderCompletionDate = null;
    if(elementStatusInUpperCase == "COMPLETED") {
        if(stcw.checkThatAllLineItemsInOrderHaveOneOfTheseStatus(["COMPLETED", "CANCELLED"], bundleOrder, true)) {
            if(isVAS && lineItem.action == "D" && bundleOrder.orderHeader.orderType == "O") {
                // do nothing
            }
            else {
                orderHeaderNewStatus = "COMPLETED";
                orderCompletionDate = new Date();
            }
        }
        else{
            var existBundleOnHold = stcw.checkIfExistABundleWithThisStatus("ON-HOLD", bundleOrder, true);
            var existBundleOnHoldPC = stcw.checkIfExistABundleWithThisStatus("ON-HOLD-PC", bundleOrder, true);
            if(existBundleOnHold || existBundleOnHoldPC) {
                orderHeaderNewStatus = "ON-HOLD-PC";
            }
            else {
                orderHeaderNewStatus = "IN-PROGRESS";
            }
        }
    }
    else if(elementStatusInUpperCase == "CANCELLED") {
        if(stcw.checkThatAllLineItemsInOrderHaveOneOfTheseStatus(["CANCELLED"], bundleOrder, false)) {
            orderHeaderNewStatus = "CANCELLED";
            orderCompletionDate = new Date();
        }
        else{
            if(stcw.checkThatAllLineItemsInOrderHaveOneOfTheseStatus(["COMPLETED", "CANCELLED"], bundleOrder, true)) {
                orderHeaderNewStatus = "COMPLETED";
                orderCompletionDate = new Date();
            }
            else {
                orderHeaderNewStatus = "IN-PROGRESS";
            }
        }
    }
    else if(elementStatusInUpperCase == "ON-HOLD") {
         if(existCompleted) {
            orderHeaderNewStatus = "ON-HOLD-PC";
        }
        else {
            orderHeaderNewStatus = "ON-HOLD";
        }
    }

    if(orderHeaderNewStatus == null) {
        if(bundleOrder.orderHeader.orderStatus.toUpperCase() == "ON-HOLD" || bundleOrder.orderHeader.orderStatus.toUpperCase() == "ON-HOLD-PC") {
            var existBundleOnHold = stcw.checkIfExistABundleWithThisStatus("ON-HOLD", bundleOrder, true);
            var existBundleOnHoldPC = stcw.checkIfExistABundleWithThisStatus("ON-HOLD-PC", bundleOrder, true);
            var existCompleted = stcw.checkIfExistABundleWithThisStatus("COMPLETED", bundleOrder, true);
            if(existBundleOnHold || existBundleOnHoldPC) {
                if(existCompleted) {
                    orderHeaderNewStatus = "ON-HOLD-PC";
                }
                else {
                    orderHeaderNewStatus = "ON-HOLD";
                }
            }
            else {
                if(existCompleted) {
                    orderHeaderNewStatus = "IN-PROGRESS";
                }
                else {
                    orderHeaderNewStatus = "ORDERED";
                }
            }
        }
    }

    // checking if there are components in KO
    if(existProcessKO && orderHeaderNewStatus != "FAILED_SUBMIT") {
    debugPrintln(stcc.getSysdateForLog() + "[updateBundleAndOrderHeaderStatus] on <" + bundleOrder.orderHeader.orderNumber + "," + lineItem.lineItemIdentifier + ">; found process in KO for order " + bundleOrder.id + " and orderHeaderNewStatus not FAILED_SUBMIT");
        orderHeaderNewStatus = "FAILED_SUBMIT";
    }


    // finally update header status
    if(orderHeaderNewStatus != null) {
        bundleOrder.orderHeader.orderStatus = orderHeaderNewStatus;
        if(orderCompletionDate != null) {
            bundleOrder.orderHeader.completionDate = orderCompletionDate;
        }
    debugPrintln(stcc.getSysdateForLog() + "[updateBundleAndOrderHeaderStatus] on <" + bundleOrder.orderHeader.orderNumber + "," + lineItem.lineItemIdentifier + ">; bundleOrder.orderHeader.orderStatus = " + orderHeaderNewStatus);

        bundleOrder.save();
    }
    else {
    debugPrintln(stcc.getSysdateForLog() + "[updateBundleAndOrderHeaderStatus] on <" + bundleOrder.orderHeader.orderNumber + "," + lineItem.lineItemIdentifier + ">; bundleOrder.orderHeader.orderStatus not changed!");
    }
  ]]></script>
</script>