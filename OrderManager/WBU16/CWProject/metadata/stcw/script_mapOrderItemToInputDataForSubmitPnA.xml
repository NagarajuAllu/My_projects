<?xml version="1.0" encoding="UTF-8" ?>
<script name="stcw.mapOrderItemToInputDataForSubmitPnA">
  <label>Map OrderItem To InputData For SubmitPnA</label>
  <metaVersion>25</metaVersion>
  <parameterList>
    <parameter name="bundleOrder" type="rifp">
      <type>nmeta_com.conceptwave.system.Object</type>
    </parameter>
    <parameter name="orderItem" type="rifp">
      <type>doc_stcw.lineItemDocument</type>
    </parameter>
  </parameterList>
  <script><![CDATA[
    var inputDS = new DataStructure("pnaSubmitPnAOrderWS.submitPnAOrder_el");
    stcw.fillHeaderForOrderACK_WOSU(inputDS.submitPnAOrderRequest.header, "submitPnAOrder", "EOC");
    inputDS.submitPnAOrderRequest.header.operationType = "Create";
    inputDS.submitPnAOrderRequest.header.domainId = "GSM";

    fillRequestHeader_(stcw.getMappingFromCOMToLTEData("P_A", "ALL", null, "RH"));

    var p_aOperation = null;
    switch(bundleOrder.orderHeader.orderType) {
        case "I":
            if(orderItem.isSubmit) {
                p_aOperation = "INSTALL";
            }
            else {
                p_aOperation = "DISCONNECT";
            }
            break;
        case "C":
            if(orderItem.changeRequestType == "CHANGE_SIM") {
                p_aOperation = "CHANGE_SIM";
            }
            else {
                p_aOperation = "CHANGE_PRFL";
            }
            if(!orderItem.isSubmit) {
                p_aOperation = p_aOperation + "_R";
            }
            break;
        case "D":
            if(orderItem.isSubmit) {
                p_aOperation = "SUSPEND";
            }
            else {
                p_aOperation = "RESUME";
            }
            break;
        case "E":
            if(orderItem.isSubmit) {
                p_aOperation = "RESUME";
            }
            else {
                p_aOperation = "SUSPEND";
            }
            break;
        case "O":
            if(orderItem.isSubmit) {
                p_aOperation = "DISCONNECT";
            }
            else {
                p_aOperation = "INSTALL";
            }
            break;
        default:
            p_aOperation = null;
    }

    if(p_aOperation == null) {
        return inputDS;
    }

    var mappingRules = stcw.getMappingFromCOMToLTEData("P_A", p_aOperation, null, "NV");
    if(mappingRules != null) {
        for(var i=0; i<mappingRules.length; i++) {
            var mapping = mappingRules[i];

            var parameter = new DataStructure("pnaSubmitPnAOrderWS.serviceParamItem");
            parameter.name = mapping.ifName;

            if(mapping.defaultValue != null) {
                parameter.value = mappingRules[i].defaultValue;
            }
            else {
                if(mapping.comElement == "OH") {
                    parameter.value = bundleOrder.orderHeader[mapping.comName];
                }
                else if(mapping.comElement == "LI") {
                    parameter.value = orderItem[mapping.comName];
                }
                else if (mapping.comElement == "NV") {
                    parameter.value = getNVPairValueByName_(mapping.comName);
                }
            }
            inputDS.submitPnAOrderRequest.body.serviceParamList.serviceParamItem[i] = parameter;
        }
    }

    return inputDS;


    function fillRequestHeader_(mappingForRequestHeader) {
        if(mappingForRequestHeader != null) {
            for(var i=0; i<mappingForRequestHeader.length; i++) {
                var mapping = mappingForRequestHeader[i];

                if(mapping.defaultValue != null) {
                    inputDS.submitPnAOrderRequest.body[mapping.ifName] = mapping.defaultValue;
                }
                else {
                    if(mapping.comElement == "OH") {
                        inputDS.submitPnAOrderRequest.body[mapping.ifName] = bundleOrder.orderHeader[mapping.comName];
                    }
                    else if(mapping.comElement == "LI") {
                        inputDS.submitPnAOrderRequest.body[mapping.ifName] = orderItem[mapping.comName];
                    }
                    else if (mapping.comElement == "NV") {
                        inputDS.submitPnAOrderRequest.body[mapping.ifName] = getNVPairValueByName_(mapping.comName);
                    }
                }
            }
        }
    }

    function getNVPairValueByName_(nvPairName) {
        var nvPairValue = null;
        var allNVPairsWithName = stcw.getAllNameValuesByParentElementIdAndNameAndVASFlag(orderItem.id, false, nvPairName);
        if(allNVPairsWithName != null && allNVPairsWithName.length > 0) {
            nvPairValue = allNVPairsWithName[0].value;
        }

        return nvPairValue;
    }
  ]]></script>
</script>