<?xml version="1.0" encoding="UTF-8" ?>
<process name="stcw.handleGraniteWorkOrderStatusUpdatesForFTTH">
  <activity name="start" type="seqActivity">
    <label>Start</label>
    <x>123.87244</x>
    <y>79.0</y>
    <childList>
      <child name="receiveGraniteWOSU" type="opActivity">
        <element>iface_stcw.xngServicesNotificationToProcesses/oper_workOrderStatusUpdateNotification</element>
        <label>Work Order Status Update Notification</label>
        <participant>part_stcw.xngServicesNotificationToProcessesParticipant</participant>
        <x>312.19568</x>
        <y>58.0</y>
        <methodList>
          <method name="cwOnProcActAfter" type="action">
            <category>script</category>
            <system>true</system>
            <script><![CDATA[
              debugPrintln(stcc.getSysdateForLog() + "[" + this.process.id + "] - receivedWOSU = " + this.activityData.toXML());

              var receivedWOSUNotification = this.activityData;
              this.process.processDocument.latestWOSUId = this.activityData.wosuId;

              // reading WOSU from DB
              var receivedWOSU = stcw.readGraniteWOSUFromDB(this.activityData.wosuId);

              var serviceContainer = this.process.processOrder.parentLineItems[0].services;

              //////
              // identify if the WOSU refers to a single lineItem or to the entire order
              /////
              this.process.processDocument.lineItemIdReferredByWOSU = null;
              if(receivedWOSU.orderRowItemId != null) {
                  for(var i=0; i<serviceContainer.length; i++) {
                      if(serviceContainer[i].serviceLineItem.orderRowItemId == receivedWOSU.orderRowItemId) {
                          this.process.processDocument.lineItemIdReferredByWOSU = serviceContainer[i].serviceLineItem.id;
                      }
                  }
              }
              else {
                  this.process.processDocument.lineItemIdReferredByWOSU = null;
              }

              var orderChangeRequestType = null;
              var bundleOrder = this.process.processOrder;
              if(bundleOrder.orderHeader.orderType == "C" || (bundleOrder.orderHeader.orderType == "F" && bundleOrder.orderHeader.feasibilityFor == "CHANGE")) {
                  for(var i=0; i<serviceContainer.length; i++) {
                      if(serviceContainer[i].serviceLineItem.action != "N") {
                          orderChangeRequestType = serviceContainer[i].serviceLineItem.changeRequestType;
                      }
                  }
              }


              if(orderChangeRequestType == "CHANGE_ONT") {
                  var ontGIServiceType = stcw.getGraniteServiceTypeForSOMInternalName("ONT");
                  for(var i=0; i<serviceContainer.length; i++) {
                      if(serviceContainer[i].serviceLineItem.serviceType == ontGIServiceType) {
                          this.process.processDocument.lineItemIdReferredByWOSU = serviceContainer[i].serviceLineItem.id;
                      }
                  }
              }


              //////
              // updating the info for all not provisionable services with action = "N" according to the WOSU received
              //////
              if(stcw.isLineItemCompleted(receivedWOSU.workOrderStatus)) {

                  // in case of completion, the WOSU should be propagated to all the lineitems, so resetting the entry in the process document
                  this.process.processDocument.lineItemIdReferredByWOSU = null;

                  // updating all not provisionable lineItems
                  for(var i=0; i<serviceContainer.length; i++) {
                      if((!stcw.isServiceProvisionable(serviceContainer[i].serviceLineItem.id) && (serviceContainer[i].serviceLineItem.action == "N")) ||
                          (stcw.isServiceProvisionable(serviceContainer[i].serviceLineItem.id) && (orderChangeRequestType == "CHANGE_ONT") && (serviceContainer[i].serviceLineItem.action != "N"))) {
                          serviceContainer[i].serviceLineItem.lineItemStatus = receivedWOSU.workOrderStatus;

                          if(serviceContainer[i].serviceLineItem.isCancel) {
                              serviceContainer[i].serviceLineItem.lineItemStatus = "CANCELLED";
                              serviceContainer[i].serviceLineItem.completionDate = new Date();
                          }
                          else {
                              if(this.process.processOrder.orderHeader.orderType == "F") {
                                  if(receivedWOSU.feasibilityStatus != null) {
                                      serviceContainer[i].serviceLineItem.lineItemStatus = receivedWOSU.feasibilityStatus;

                                      if(stcw.checkIfLineItemIsFeasibleForQuote(serviceContainer[i].serviceLineItem.lineItemStatus.toUpperCase(), "F")) {
                                          serviceContainer[i].serviceLineItem.completionDate = new Date();
                                      }
                                  }
                                  else {
                                      // 2019/03/03 - as requested by Raj, in case the feasibilityStatus is missing as Completion,
                                      // EOC will consider it as "NOT FEASIBLE".
                                      // Previously the approach was to consider it as "FEASIBLE"
                                      serviceContainer[i].serviceLineItem.lineItemStatus = "NOT FEASIBLE";
                                      // serviceContainer[i].serviceLineItem.completionDate = new Date();
                                  }
                                  serviceContainer[i].serviceLineItem.reservationDays = receivedWOSU.reservationDays;
                              }
                              else {
                                  serviceContainer[i].serviceLineItem.completionDate = new Date();
                              }
                          }

                          if(receivedWOSU.nvPairs != null && receivedWOSU.nvPairs.length > 0) {
                              for(var n=0; n<receivedWOSU.nvPairs.length; n++) {
                                  var paramName = receivedWOSU.nvPairs[n].name;
                                  var paramValue = receivedWOSU.nvPairs[n].value;

                                  if(paramName == "CANCELPONR_KEY" && paramValue != null) {
                                      serviceContainer[i].serviceLineItem.isPONRCancelSet = (paramValue == "SetCancelPONR");
                                  }

                                  if(paramName == "REVISEPONR_KEY" && paramValue != null) {
                                      serviceContainer[i].serviceLineItem.isPONRReviseSet = (paramValue == "SetRevisePONR");
                                  }
                              }
                          }
                          serviceContainer[i].serviceLineItem.save();
              debugPrintln(stcc.getSysdateForLog() + "[" + this.process.id + "] - receivedWOSU; updated lineItem not provisionable: " + serviceContainer[i].serviceLineItem.lineItemIdentifier);
                      }
                  }
              }
            ]]></script>
          </method>
        </methodList>
      </child>
      <child name="relatedToSingleLI" type="switchActivity">
        <label>Is Related To Single LineItem?</label>
        <x>316.87244</x>
        <y>220.0</y>
        <childList>
          <child name="yes" type="caseActivity">
            <label>Yes</label>
            <x>123.87244</x>
            <y>279.0</y>
            <childList>
              <child name="startSingleLI" type="seqActivity">
                <label>Start Single LineItem</label>
                <x>438.87244</x>
                <y>244.0</y>
                <childList>
                  <child name="updateLineItemForWOSU" type="scriptActivity">
                    <label>Update LineItem For WOSU</label>
                    <x>547.87244</x>
                    <y>226.0</y>
                    <methodList>
                      <method name="cwOnProcActBefore" type="action">
                        <category>before</category>
                        <system>true</system>
                        <script><![CDATA[
                          debugPrintln(stcc.getSysdateForLog() + "[" + this.process.id + "] - updating data for singleLineItem : " + this.process.processDocument.lineItemIdReferredByWOSU);

                          // reading WOSU from DB
                          var receivedWOSU = stcw.readGraniteWOSUFromDB(this.process.processDocument.latestWOSUId);

                          debugPrintln(stcc.getSysdateForLog() + "[" + this.process.id + "] - WOSU received = " + receivedWOSU.toXML());

                          var referredLineItem = Document.readDoc("stcw.lineItemDocument", this.process.processDocument.lineItemIdReferredByWOSU);

                          // update status of the element
                          referredLineItem.lineItemStatus = receivedWOSU.workOrderStatus;
                          referredLineItem.remarks = receivedWOSU.workOrderRemarks;

                          if(receivedWOSU.nvPairs != null && receivedWOSU.nvPairs.length > 0) {
                              for(var n=0; n<receivedWOSU.nvPairs.length; n++) {
                                  var paramName = receivedWOSU.nvPairs[n].name;
                                  var paramValue = receivedWOSU.nvPairs[n].value;

                                  if(paramName == "CANCELPONR_KEY" && paramValue != null) {
                                      referredLineItem.isPONRCancelSet = (paramValue == "SetCancelPONR");
                                  }

                                  if(paramName == "REVISEPONR_KEY" && paramValue != null) {
                                      referredLineItem.isPONRReviseSet = (paramValue == "SetRevisePONR");
                                  }
                              }
                          }
                          referredLineItem.save();

                          if(stcw.isLineItemCompleted(receivedWOSU.workOrderStatus)) {
                              if(referredLineItem.isCancel) {
                                  referredLineItem.lineItemStatus = "CANCELLED";
                                  referredLineItem.completionDate = new Date();
                              }
                              else {
                                  if(this.process.processOrder.orderHeader.orderType == "F") {
                                      if(receivedWOSU.feasibilityStatus != null) {
                                          referredLineItem.lineItemStatus = receivedWOSU.feasibilityStatus;

                                          if(stcw.checkIfLineItemIsFeasibleForQuote(referredLineItem.lineItemStatus.toUpperCase(), "F")) {
                                              referredLineItem.completionDate = new Date();
                                          }
                                      }
                                      else {
                                          // 2019/03/03 - as requested by Raj, in case the feasibilityStatus is missing as Completion,
                                          // EOC will consider it as "NOT FEASIBLE".
                                          // Previously the approach was to consider it as "FEASIBLE"
                                          referredLineItem.lineItemStatus = "NOT FEASIBLE";
                                          // referredLineItem.completionDate = new Date();
                                      }
                                      referredLineItem.reservationDays = receivedWOSU.reservationDays;
                                  }
                                  else {
                                      referredLineItem.completionDate = new Date();
                                  }
                              }

                              if(receivedWOSU.nvPairs != null && receivedWOSU.nvPairs.length > 0) {
                                  for(var n=0; n<receivedWOSU.nvPairs.length; n++) {
                                      var paramName = receivedWOSU.nvPairs[n].name;
                                      var paramValue = receivedWOSU.nvPairs[n].value;

                                      if(paramName == "CANCELPONR_KEY" && paramValue != null) {
                                          referredLineItem.isPONRCancelSet = (paramValue == "SetCancelPONR");
                                      }

                                      if(paramName == "REVISEPONR_KEY" && paramValue != null) {
                                          referredLineItem.isPONRReviseSet = (paramValue == "SetRevisePONR");
                                      }
                                  }
                              }
                              referredLineItem.save();
                          }


                          // update the status of the orderHeader and parentLineItem
                          if(this.process.processOrder.orderHeader.orderType == "F") {
                              stcw.updateBundleAndOrderHeaderStatusForFeasibility(this.process.processOrder, referredLineItem);
                          }
                          else {
                              stcw.updateBundleAndOrderHeaderStatus(this.process.processOrder, referredLineItem);
                          }
                        ]]></script>
                      </method>
                    </methodList>
                  </child>
                  <child name="sendWOSUToCOM" type="spawnActivity">
                    <element>proc_stcw.sendWOSUForFTTHToCOM</element>
                    <label>Send WOSU To COM</label>
                    <schedule type="sched">
                      <duration type="dur">
                        <methodList>
                          <method name="cwOnDuration" type="action">
                            <system>true</system>
                            <script><![CDATA[
                              var orderStatus = this.processOrder.orderHeader.orderStatus.toUpperCase();

                              var sleepTime = 0;

                              if(orderStatus == "COMPLETED" || orderStatus == "CANCELLED") {
                                 sleepTime = 30;
                              }

                              debugPrintln(stcc.getSysdateForLog() + "[" + this.id + "] - Sleeping Time for WOSU when orderStatus = '" + orderStatus + "' = " + sleepTime);

                              return sleepTime;
                            ]]></script>
                          </method>
                        </methodList>
                      </duration>
                    </schedule>
                    <x>707.87244</x>
                    <y>228.0</y>
                    <methodList>
                      <method name="cwOnProcActBefore" type="action">
                        <category>before</category>
                        <system>true</system>
                        <script><![CDATA[
                          var childProcessDocument = this.activityData;
                          childProcessDocument.latestWOSUId = this.process.processDocument.latestWOSUId;
                          childProcessDocument.lineItemId = this.process.processDocument.lineItemIdReferredByWOSU;
                        ]]></script>
                      </method>
                    </methodList>
                  </child>
                  <child name="waitOnComUpdateprocesses" type="joinActivity">
                    <element>proc_stcw.sendWOSUForFTTHToCOM</element>
                    <label>Wait On COM Update processes</label>
                    <x>707.87244</x>
                    <y>397.0</y>
                  </child>
                </childList>
              </child>
            </childList>
            <methodList>
              <method name="cwOnProcActCond" type="action">
                <category>cond</category>
                <system>true</system>
                <script><![CDATA[
                  if(this.process.processDocument.lineItemIdReferredByWOSU != null) {
                      debugPrintln(stcc.getSysdateForLog() + "[" + this.process.id + "] - received WOSU refer to single lineItem: " + this.process.processDocument.lineItemIdReferredByWOSU);
                  }
                  else {
                      debugPrintln(stcc.getSysdateForLog() + "[" + this.process.id + "] - received WOSU refer to entire order... ");
                  }

                  return (this.process.processDocument.lineItemIdReferredByWOSU != null);
                ]]></script>
              </method>
            </methodList>
          </child>
          <child name="no" type="caseActivity">
            <label>No</label>
            <x>123.87244</x>
            <y>279.0</y>
            <childList>
              <child name="dispatchWOSUToAllElements" type="subflowActivity">
                <element>proc_stcw.ftthDispatchWOSUToEntireOrder</element>
                <label>Dispatch WOSU To All Elements</label>
                <x>315.87244</x>
                <y>393.0</y>
              </child>
            </childList>
          </child>
        </childList>
      </child>
      <child name="moreUpdatesExpected" type="switchActivity">
        <label>More Updates Expected ?</label>
        <x>324.87244</x>
        <y>539.0</y>
        <childList>
          <child name="yes" type="caseActivity">
            <label>Yes</label>
            <x>0.0</x>
            <y>0.0</y>
            <childList>
              <child name="repeat" type="repeatActivity">
                <element>proc_stcw.handleGraniteWorkOrderStatusUpdatesForFTTH/seqActivity_start</element>
                <label>Repeat</label>
                <x>125.87244</x>
                <y>553.0</y>
              </child>
            </childList>
            <methodList>
              <method name="cwOnProcActCond" type="action">
                <category>cond</category>
                <system>true</system>
                <script><![CDATA[
                  // checking lineItemStatus
                  var isLineItemCompleted = stcw.isLineItemCompleted(this.process.processOrderItem.lineItemStatus);

                  if(! isLineItemCompleted) {
                      if(stcw.checkIfLineItemIsNotFeasibleForQuote(this.process.processOrderItem.lineItemStatus.toUpperCase(), this.process.processOrder.orderHeader.orderType) ||
                         stcw.checkIfLineItemIsFeasibleForQuote(this.process.processOrderItem.lineItemStatus.toUpperCase(), this.process.processOrder.orderHeader.orderType)) {
                          isLineItemCompleted = true;
                      }
                      else {
                          // checking dummy WOSU
                          var supportDummyWOSU = Global.getConfigVariable("DUMMY_WOSU_FOR_FAILED_ORDER", "FALSE");
                          if(supportDummyWOSU == "TRUE") {
                              // to know if WD is managing dummy WOSU, it checks if the status = 'FAILED' and also if
                              // the lineItem has been accepted or not by Granite: if a dummy WOSU, the provisioning process is KO
                              isLineItemCompleted = (this.process.processOrderItem.lineItemStatus == "FAILED" &&
                                                     stcw.checkIfExistProcessKOInOrchestrationTblForLineItem(this.process.processOrder.id, this.process.processOrderItem.id));
                          }
                      }
                  }

                  return (! isLineItemCompleted);
                ]]></script>
              </method>
            </methodList>
          </child>
          <child name="no" type="caseActivity">
            <label>No</label>
            <x>469.87244</x>
            <y>556.0</y>
          </child>
        </childList>
      </child>
      <child name="xngServicesNotificationToProcessesParticipant" type="participantActivity">
        <label>XNG Services Notification To Processes Participant</label>
        <participant>part_stcw.xngServicesNotificationToProcessesParticipant</participant>
        <x>530.0</x>
        <y>39.0</y>
      </child>
    </childList>
  </activity>
  <curRevision>true</curRevision>
  <label>FTTH - Handle Granite WorkOrderStatusUpdates</label>
  <metaVersion>25</metaVersion>
  <priority>8</priority>
  <subflowReferenceList>
    <subflowReference type="sref">
      <revision>1</revision>
      <subflow>proc_stcw.ftthDispatchWOSUToEntireOrder</subflow>
    </subflowReference>
  </subflowReferenceList>
  <type>Sub-flow</type>
</process>