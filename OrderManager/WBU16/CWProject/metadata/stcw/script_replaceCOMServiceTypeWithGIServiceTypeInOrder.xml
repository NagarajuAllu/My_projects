<?xml version="1.0" encoding="UTF-8" ?>
<script name="stcw.replaceCOMServiceTypeWithGIServiceTypeInOrder">
  <label>Replace COM ServiceType With GI ServiceType in Order</label>
  <metaVersion>25</metaVersion>
  <parameterList>
    <parameter name="bundleOrder" type="rifp">
      <type>order_stcw.wholesaleBundleOrderSTC</type>
    </parameter>
    <parameter name="isSubmit" type="rifp">
      <type>dtype_com.conceptwave.system.Boolean</type>
    </parameter>
    <parameter name="failureArray" type="rifp">
      <type>nmeta_com.conceptwave.system.Object</type>
    </parameter>
  </parameterList>
  <script><![CDATA[
    if(bundleOrder != null) {
        for(var i=0; i<bundleOrder.parentLineItems.length; i++) {
            var parentLineItemContainer = bundleOrder.parentLineItems[i];
            // convert and validate serviceType from COM to GI
            replaceServiceTypeInLineItem_(parentLineItemContainer.parentLineItem);

            if(parentLineItemContainer.services != null) {
                for (var j=0; j<parentLineItemContainer.services.length; j++) {
                    var serviceLineItemContainer = parentLineItemContainer.services[j];
                    // convert and validate serviceType from COM to GI
                    replaceServiceTypeInLineItem_(serviceLineItemContainer.serviceLineItem);

                    if(serviceLineItemContainer.subServices != null) {
                        for (var k=0; k<serviceLineItemContainer.subServices.length; k++) {
                            var subServiceLineItemContainer = serviceLineItemContainer.subServices[k];
                            // convert and validate serviceType from COM to GI
                            replaceServiceTypeInLineItem_(subServiceLineItemContainer.subServiceLineItem);

                            if(subServiceLineItemContainer.subSubServices != null) {
                                for (var m=0; m<subServiceLineItemContainer.subSubServices.length; m++) {
                                    var subSubServiceLineItemContainer =subServiceLineItemContainer.subSubServices[m];
                                    // convert and validate serviceType from COM to GI
                                    replaceServiceTypeInLineItem_(subSubServiceLineItemContainer.subSubServiceLineItem);
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    return failureArray;


    function replaceServiceTypeInLineItem_(lineItem) {
        var comServiceType = lineItem.serviceType;

        if(comServiceType != null) {
            // convert and validate serviceType from COM to GI
            var giServiceType = stcw.convertCOMServiceTypeToGraniteOne(comServiceType);
            if(giServiceType == null) {
                var validationError = ["AE0141", Global.translateText("AE0141", null, [comServiceType, lineItem.lineItemIdentifier])];
                failureArray = stcw.addValidationErrorsToFailureArrayForSub_UpdInWD(validationError, lineItem.lineItemIdentifier, failureArray, isSubmit);
            }
            else {
                lineItem.serviceType = giServiceType;
            }
        }
    }
  ]]></script>
</script>