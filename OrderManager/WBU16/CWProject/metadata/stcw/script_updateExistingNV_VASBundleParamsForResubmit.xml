<?xml version="1.0" encoding="UTF-8" ?>
<script name="stcw.updateExistingNV_VASBundleParamsForResubmit">
  <label>Update Existing NV Pair and VAS Parameters For ParentLineItem For Resubmit</label>
  <metaVersion>4</metaVersion>
  <parameterList>
    <parameter name="existingLineItemContainer" type="rifp">
      <type>nmeta_com.conceptwave.system.Object</type>
    </parameter>
    <parameter name="receivedLineItemContainer" type="rifp">
      <type>nmeta_com.conceptwave.system.Object</type>
    </parameter>
    <parameter name="validationErrors" type="rifp">
      <type>nmeta_com.conceptwave.system.Object</type>
    </parameter>
    <parameter name="lineItemIdentifier" type="rifp">
      <type>dtype_com.conceptwave.system.String</type>
    </parameter>
    <parameter name="existingOrder" type="rifp">
      <type>order_stcw.wholesaleBundleOrderSTC</type>
    </parameter>
  </parameterList>
  <script><![CDATA[
    // nv check; it loops in existing NV pair and verifies if it exists also in received one
    if(receivedLineItemContainer.parentLineItemNameValueParameters != null) {
        for(var i=0; i<receivedLineItemContainer.parentLineItemNameValueParameters.length; i++) {
            var receivedNVName = receivedLineItemContainer.parentLineItemNameValueParameters[i].parentLineItemNameValueParameter.name;
            var found = false;

            if(existingLineItemContainer.parentLineItemNameValueParameters != null) {
                for(var j=0; j<existingLineItemContainer.parentLineItemNameValueParameters.length && !found; j++) {
                    if(receivedNVName == existingLineItemContainer.parentLineItemNameValueParameters[j].parentLineItemNameValueParameter.name) {
                        // found; comparing the values
                        found = true;
                        existingLineItemContainer.parentLineItemNameValueParameters[j].parentLineItemNameValueParameter.value = receivedLineItemContainer.parentLineItemNameValueParameters[i].parentLineItemNameValueParameter.value;
                        existingLineItemContainer.parentLineItemNameValueParameters[j].parentLineItemNameValueParameter.nvAction = receivedLineItemContainer.parentLineItemNameValueParameters[i].parentLineItemNameValueParameter.nvAction;
                    }
                }
            }

            if(!found) {
                var position = (existingLineItemContainer.parentLineItemNameValueParameters != null ? existingLineItemContainer.parentLineItemNameValueParameters.length : 0);
                var containerItemPath = (existingLineItemContainer.parentLineItemNameValueParameters != null ? existingLineItemContainer.parentLineItemNameValueParameters.orderDataPath : (existingLineItemContainer.orderDataPath + ".parentLineItemNameValueParameters"));
                var nvDoc = existingOrder.createOrderItemByPath(containerItemPath + "." + (position+1) + ".parentLineItemNameValueParameter");
                nvDoc.name = receivedLineItemContainer.parentLineItemNameValueParameters[i].parentLineItemNameValueParameter.name;
                nvDoc.value = receivedLineItemContainer.parentLineItemNameValueParameters[i].parentLineItemNameValueParameter.value;
                nvDoc.nvAction = receivedLineItemContainer.parentLineItemNameValueParameters[i].parentLineItemNameValueParameter.nvAction;
                nvDoc.parentElementId = existingLineItemContainer.parentLineItem.id;
            }
        }
    }

    // vas check; it loops in existing VAS pairs and verifies if it exists also in received one
    if(receivedLineItemContainer.parentLineItemVASNVParameters != null) {
        for(var i=0; i<receivedLineItemContainer.parentLineItemVASNVParameters.length; i++) {
            var receivedNVName = receivedLineItemContainer.parentLineItemVASNVParameters[i].parentLineItemVASNVParameter.name;
            var found = false;

            if(existingLineItemContainer.parentLineItemVASNVParameters != null) {
                for(var j=0; j<existingLineItemContainer.parentLineItemVASNVParameters.length && !found; j++) {
                    if(receivedNVName == existingLineItemContainer.parentLineItemVASNVParameters[j].parentLineItemVASNVParameter.name) {
                        // found; comparing the values
                        found = true;
                        existingLineItemContainer.parentLineItemVASNVParameters[j].parentLineItemVASNVParameter.value = receivedLineItemContainer.parentLineItemVASNVParameters[i].parentLineItemVASNVParameter.value;
                        existingLineItemContainer.parentLineItemVASNVParameters[j].parentLineItemVASNVParameter.nvAction = receivedLineItemContainer.parentLineItemVASNVParameters[i].parentLineItemVASNVParameter.nvAction;
                    }
                }
            }

            if(!found) {
                var position = (existingLineItemContainer.parentLineItemVASNVParameters != null ? existingLineItemContainer.parentLineItemVASNVParameters.length : 0);
                var containerItemPath = (existingLineItemContainer.parentLineItemVASNVParameters != null ? existingLineItemContainer.parentLineItemVASNVParameters.orderDataPath : (existingLineItemContainer.orderDataPath + ".parentLineItemVASNVParameters"));
                var vasDoc = existingOrder.createOrderItemByPath(containerItemPath + "." + (position+1) + ".parentLineItemVASNVParameter");
                vasDoc.name = receivedLineItemContainer.parentLineItemVASNVParameters[i].parentLineItemVASNVParameter.name;
                vasDoc.value = receivedLineItemContainer.parentLineItemVASNVParameters[i].parentLineItemVASNVParameter.value;
                vasDoc.nvAction = receivedLineItemContainer.parentLineItemVASNVParameters[i].parentLineItemVASNVParameter.nvAction;
                vasDoc.isVAS = "Y";
                vasDoc.parentElementId = existingLineItemContainer.parentLineItem.id;
            }
        }
    }

    return validationErrors;
  ]]></script>
</script>