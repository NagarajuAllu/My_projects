<?xml version="1.0" encoding="UTF-8" ?>
<process name="stcw.mainSTCWOrchestrationProcess_3">
  <activity name="start" type="seqActivity">
    <label>Start</label>
    <x>75.0</x>
    <y>95.0</y>
    <childList>
      <child name="setProcessIdInOrchestrationTable" type="scriptActivity">
        <label>Set ProcessId In Orchestration Table</label>
        <x>234.0</x>
        <y>70.0</y>
        <methodList>
          <method name="cwOnProcActBefore" type="action">
            <category>before</category>
            <system>true</system>
            <script><![CDATA[
              var recordInOrchestrationTable = stcw.getRecordInOrchestrationTableByLineItemId(this.process.processOrderItem.id);
              recordInOrchestrationTable.orchestrationProcessId = this.process.id;
              recordInOrchestrationTable.save();

              // removing ordernumber from orders under management list
              stcw.removeOrderToOrdersUnderManagement(this.process.processOrder.orderHeader.orderNumber);
            ]]></script>
          </method>
        </methodList>
      </child>
      <child name="checkIfRelatedToHome" type="switchActivity">
        <label>Is Related To Home?</label>
        <x>393.0</x>
        <y>83.0</y>
        <childList>
          <child name="yes" type="caseActivity">
            <label>Yes</label>
            <x>396.0</x>
            <y>181.0</y>
            <childList>
              <child name="startHomeProvisioning" type="seqActivity">
                <label>Start Home Provisioning</label>
                <x>399.0</x>
                <y>235.99998</y>
                <childList>
                  <child name="isThereAnyElementProvisionable" type="switchActivity">
                    <label>Is There Any Element Provisionable?</label>
                    <x>382.0</x>
                    <y>382.0</y>
                    <childList>
                      <child name="yes" type="caseActivity">
                        <label>Yes</label>
                        <x>399.0</x>
                        <y>436.0</y>
                        <childList>
                          <child name="start" type="seqActivity">
                            <label>Start</label>
                            <x>520.0</x>
                            <y>404.0</y>
                            <childList>
                              <child name="startOrchestrationProcessForHome" type="scriptActivity">
                                <label>Start Orchestration Process For Home</label>
                                <x>622.0</x>
                                <y>381.0</y>
                                <methodList>
                                  <method name="cwOnProcActBefore" type="action">
                                    <category>before</category>
                                    <system>true</system>
                                    <script><![CDATA[
                                      // identify HSI or VOIP in the order and start the orchestration process for it
                                      var order = this.process.processOrder;

                                      var serviceLineItems = order.parentLineItems[0].services;

                                      // this is the lineItem that will be used as reference for the provisioning
                                      var lineItemForProvisioning = null;

                                      // first candidate = HSI
                                      for(var i=0; i<serviceLineItems.length && lineItemForProvisioning == null; i++) {
                                          if(serviceLineItems[i].serviceLineItem.serviceType == "FTTH_HSI" && stcw.isServiceProvisionable(serviceLineItems[i].serviceLineItem.id)) {
                                              lineItemForProvisioning = serviceLineItems[i].serviceLineItem;
                                          }
                                      }

                                      if(lineItemForProvisioning == null) {
                                          // second candidate = VOIP
                                          for(var i=0; i<serviceLineItems.length && lineItemForProvisioning == null; i++) {
                                              if(serviceLineItems[i].serviceLineItem.serviceType == "FTTH_VOIP") {
                                                  lineItemForProvisioning = serviceLineItems[i].serviceLineItem;
                                              }
                                          }
                                      }


                                      var processId = Process.startProcess("stcw.ftthSTCWOrchestrationProcess", this.process.processOrder.id, lineItemForProvisioning.id);


                                      debugPrintln(stcc.getSysdateForLog() + "[" + this.process.id + "] - started ProcessForChildElement; elementId = " + lineItemForProvisioning.id + "; processId = " + processId);
                                    ]]></script>
                                  </method>
                                </methodList>
                              </child>
                              <child name="waitForOrchestrationProcessForHomeCompletion" type="syncActivity">
                                <element>signal_stcw.wakeUpParentInOrchestration</element>
                                <label>Wait For &quot;FTTH STCW Orchestration Process&quot; Completion</label>
                                <x>748.0</x>
                                <y>374.0</y>
                              </child>
                            </childList>
                          </child>
                        </childList>
                        <methodList>
                          <method name="cwOnProcActCond" type="action">
                            <category>cond</category>
                            <system>true</system>
                            <script><![CDATA[
                              // identify HSI or VOIP in the order and start the orchestration process for it
                              var order = this.process.processOrder;

                              var serviceLineItems = order.parentLineItems[0].services;

                              // this is the lineItem that will be used as reference for the provisioning
                              var lineItemForProvisioning = null;

                              // first candidate = HSI
                              for(var i=0; i<serviceLineItems.length && lineItemForProvisioning == null; i++) {
                                  if(serviceLineItems[i].serviceLineItem.serviceType == "FTTH_HSI" && stcw.isServiceProvisionable(serviceLineItems[i].serviceLineItem.id)) {
                                      lineItemForProvisioning = serviceLineItems[i].serviceLineItem;
                                  }
                              }

                              if(lineItemForProvisioning == null) {
                                  // second candidate = VOIP
                                  for(var i=0; i<serviceLineItems.length && lineItemForProvisioning == null; i++) {
                                      if(serviceLineItems[i].serviceLineItem.serviceType == "FTTH_VOIP") {
                                          lineItemForProvisioning = serviceLineItems[i].serviceLineItem;
                                      }
                                  }
                              }


                              debugPrintln(stcc.getSysdateForLog() + "[" + this.process.id + "] - exist lineItem for provisioning 'H' order? " + (lineItemForProvisioning != null));

                              return (lineItemForProvisioning != null);
                            ]]></script>
                          </method>
                        </methodList>
                      </child>
                      <child name="no" type="caseActivity">
                        <label>No</label>
                        <x>512.0</x>
                        <y>553.0</y>
                      </child>
                    </childList>
                  </child>
                </childList>
              </child>
            </childList>
            <methodList>
              <method name="cwOnProcActCond" type="action">
                <category>cond</category>
                <system>true</system>
                <script><![CDATA[
                  var order = this.process.processOrder;
                  var parentLineItemProvisioningBU = order.parentLineItems[0].parentLineItem.provisioningBU;

                  var isForHome = (parentLineItemProvisioningBU == "H");

                  debugPrintln(stcc.getSysdateForLog() + "[" + this.process.id + "] - isForHome: " + isForHome);

                  return isForHome;
                ]]></script>
              </method>
            </methodList>
          </child>
          <child name="no" type="caseActivity">
            <label>No</label>
            <x>575.0</x>
            <y>59.0</y>
            <childList>
              <child name="startNotHome" type="seqActivity">
                <label>Start Not Home</label>
                <x>514.0</x>
                <y>88.0</y>
                <childList>
                  <child name="isPermanentOrTempDisconnect" type="switchActivity">
                    <label>Is Permanent Disconnect Or Temporary Disconnect?</label>
                    <x>638.0</x>
                    <y>39.0</y>
                    <childList>
                      <child name="disconnect" type="caseActivity">
                        <label>Disconnect</label>
                        <x>422.0</x>
                        <y>106.0</y>
                        <childList>
                          <child name="startDisconnect" type="seqActivity">
                            <label>Start Disconnect</label>
                            <x>973.0</x>
                            <y>81.0</y>
                            <childList>
                              <child name="performProvisioningOfAllChildElements_Disconnect" type="subflowActivity">
                                <element>proc_stcw.performProvisioningOfAllChildElements_Delete</element>
                                <label>Perform Provisioning Of All Child Elements - Disconnect</label>
                                <x>972.0</x>
                                <y>202.0</y>
                                <methodList>
                                  <method name="cwOnProcActBefore" type="action">
                                    <category>before</category>
                                    <system>true</system>
                                    <script><![CDATA[this.process.processDocument.elementTypeInOrderTree = 'B';]]></script>
                                  </method>
                                </methodList>
                              </child>
                            </childList>
                          </child>
                        </childList>
                        <methodList>
                          <method name="cwOnProcActCond" type="action">
                            <category>cond</category>
                            <system>true</system>
                            <script><![CDATA[
                              var order = this.process.processOrder;
                              var orderType = order.orderHeader.orderType;
                              var isDisconnect = (orderType == "D" || orderType == "O");

                              debugPrintln(stcc.getSysdateForLog() + "[" + this.process.id + "] - isDisconnect: " + isDisconnect);

                              return isDisconnect;
                            ]]></script>
                          </method>
                        </methodList>
                      </child>
                      <child name="notDisconnect" type="caseActivity">
                        <label>Not Disconnect</label>
                        <x>422.0</x>
                        <y>106.0</y>
                        <childList>
                          <child name="startNormalProcessing" type="seqActivity">
                            <label>Start Normal Processing</label>
                            <x>649.0</x>
                            <y>233.0</y>
                            <childList>
                              <child name="performProvisioningOfAllChildElements_NoDisconnect" type="subflowActivity">
                                <element>proc_stcw.performProvisioningOfAllChildElements_NotDelete_2</element>
                                <label>Perform Provisioning Of All Child Elements - No Disconnect</label>
                                <x>816.0</x>
                                <y>196.0</y>
                                <methodList>
                                  <method name="cwOnProcActBefore" type="action">
                                    <category>before</category>
                                    <system>true</system>
                                    <script><![CDATA[this.process.processDocument.elementTypeInOrderTree = 'B';]]></script>
                                  </method>
                                </methodList>
                              </child>
                            </childList>
                          </child>
                        </childList>
                      </child>
                    </childList>
                  </child>
                </childList>
              </child>
            </childList>
          </child>
        </childList>
      </child>
      <child name="sendWOSUForOrderToEAI" type="scriptActivity">
        <label>Send WOSU For Order To EAI</label>
        <x>894.0</x>
        <y>385.0</y>
        <methodList>
          <method name="cwOnProcActBefore" type="action">
            <category>before</category>
            <system>true</system>
            <script><![CDATA[
              if(! stcw.checkIfExistProcessKOInOrchestrationTable(this.process.processOrder.id)) {
                  var bundleOrder = this.process.processOrder; //Order.getOrderById(this.process.processOrder.id);

                  if(bundleOrder.orderHeader.orderType == "F") {
                      stcw.updateBundleAndOrderHeaderStatusForFeasAtProcCompl(bundleOrder);

                      if(bundleOrder.orderHeader.orderStatus == "NOT_FEASIBLE") {
                          if(stcw.isLegacyService(bundleOrder.parentLineItems[0], true) &&
                             stcw.checkIfLineItemIsNotFeasibleForQuote(bundleOrder.parentLineItems[0].parentLineItem.lineItemStatus.toUpperCase(), "F")) {
                              // the order is not feasible and the parentLineItem is not feasible!
                              if(bundleOrder.parentLineItems[0].services != null) {
                                  // there are services but they are VAS, so generate the "NO-ACTION" WOSU
                                  for(var i=0; i<bundleOrder.parentLineItems[0].services.length; i++) {
                                      stcw.generateWOSUForVASForNotFeasibleParent(bundleOrder, bundleOrder.parentLineItems[0].services[i].serviceLineItem);
                                  }
                              }
                          }
                          else {
                              // do nothing
                          }
                      }
                      else {
                          // do nothing
                      }
                  }
                  else {
                      // updating provisioningFlag for all the bundles
                      var bundleOrder = this.process.processOrder;
                      for(var i=0; i<bundleOrder.parentLineItems.length; i++) {
                          var parentLineItem = bundleOrder.parentLineItems[i].parentLineItem;

                          var parentLineItemStatusUpperCase = parentLineItem.lineItemStatus.toUpperCase();
                          if(parentLineItemStatusUpperCase != "CANCELLED" && parentLineItemStatusUpperCase != "COMPLETED") {
                              if(stcw.checkThatAllLineItemsInBundleHaveOneOfTheseStatus(["CANCELLED"], parentLineItem, bundleOrder, false)) {
                                  parentLineItem.lineItemStatus = "CANCELLED";
                              }
                              else {
                                  parentLineItem.lineItemStatus = "COMPLETED";
                              }
                              parentLineItem.completionDate = new Date();
                          }

                          if(parentLineItem.isCancel || parentLineItem.lineItemStatus == "CANCELLED") {
                              parentLineItem.provisioningFlag = "CANCELLED";

                              // if it's an HBU order, it's an order and linked to reservation, cancel also the reservation
                              if(parentLineItem.provisioningBU == "H" && bundleOrder.orderHeader.orderType != "F") {
                                  var activeLineItems = stcw.getAllLineItemsByIdentifierAndProvisioningFlag(parentLineItem.lineItemIdentifier, "B", "ACTIVE");
                                  if(activeLineItems != null && activeLineItems.length > 0) {
                                      // get the ACTIVE order
                                      var activeOrder = Order.getOrderById(activeLineItems[0].orderId);
                                      if(activeOrder != null && activeOrder.orderHeader.orderType == "F") {
                                          // it's a FEASIBILITY: so it should be CANCELLED....
                                          activeLineItems[0].provisioningFlag = "CANCELLED";
                                          var newRemarks =  stcc.getSysdateInYYYYMMDD() + ": ProvisioniningFlag changed from ACTIVE to CANCELLED because the order '" + bundleOrder.orderHeader.orderNumber + "' linked to this 'F' order was CANCELLED";
                                          activeLineItems[0].remarks = (activeLineItems[0].remarks != null ?
                                                                        (newRemarks + "\n\n" + activeLineItems[0].remarks) :
                                                                        newRemarks);
                                          activeLineItems[0].save();

                                          // .... and its parent, if exist, should be make it ACTIVE!
                                          if(activeLineItems[0].previousActiveDocId != null) {
                                              var ancestorParentLineItem = Document.readDoc("stcw.lineItemDocument", activeLineItems[0].previousActiveDocId);
                                              if(ancestorParentLineItem != null) {
                                                  ancestorParentLineItem.provisioningFlag = "ACTIVE";
                                                  ancestorParentLineItem.save();
                                              }
                                          }
                                      }
                                  }
                              }
                          }
                          else {
                              var orderNumber = bundleOrder.orderHeader.orderNumber;
                              if((orderNumber.indexOf("_CANC_") >= 0) || (orderNumber.indexOf("_REVI_") >= 0)) {
                                  // do nothing because it's an old version of the order
                                  debugPrintln(stcc.getSysdateForLog() + "[" + this.process.id + "] - ProvisioningFlag not changed because orderNumber (" + orderNumber + ") contains '_CANC_' or _REVI_'");
                              }
                              else {
                                  var activeLineItems = stcw.getAllLineItemsByIdentifierAndProvisioningFlag(parentLineItem.lineItemIdentifier, "B", "ACTIVE");
                                  for(var j=0; j<activeLineItems.length; j++) {
                                      activeLineItems[j].provisioningFlag = "OLD";
                                      activeLineItems[j].save();

                                      // to maintain the sequence of the active version of the orders
                                      parentLineItem.previousActiveDocId = activeLineItems[j].id;
                                  }

                                  parentLineItem.provisioningFlag = "ACTIVE";
                              }
                          }
                          parentLineItem.save();
                      }

                      var orderStatusUpperCase = bundleOrder.orderHeader.orderStatus.toUpperCase();
                      if(orderStatusUpperCase != "CANCELLED" && orderStatusUpperCase != "COMPLETED") {
                          // it happens only if there is no lineItem sent to Granite and so no WOSU received
                          if(stcw.checkThatAllLineItemsInOrderHaveOneOfTheseStatus(["CANCELLED"], bundleOrder, false)) {
                              bundleOrder.orderHeader.orderStatus = "CANCELLED";
                          }
                          else {
                              bundleOrder.orderHeader.orderStatus = "COMPLETED";
                          }
                          bundleOrder.orderHeader.completionDate = new Date();
                      }
                      bundleOrder.save();
                  }

                  if(! stcw.checkIfExistProvisionProcessInOrchestrationTable(bundleOrder.id)) {
                      // sending "closing" WOSU to EAI
                      stcw.generateLastWOSUForOrder(bundleOrder);
                  }
              }
            ]]></script>
          </method>
        </methodList>
      </child>
      <child name="end" type="completeActivity">
        <label>End</label>
        <x>1023.0</x>
        <y>405.0</y>
        <methodList>
          <method name="cwOnProcActBefore" type="action">
            <category>before</category>
            <system>true</system>
            <script><![CDATA[debugPrintln(stcc.getSysdateForLog() + "[" + this.process.id + "] - End");]]></script>
          </method>
        </methodList>
      </child>
      <child name="stopProcess" type="onExceptionActivity">
        <element>excp_cwf.stop</element>
        <label>Stop Process</label>
        <x>73.0</x>
        <y>137.0</y>
        <childList>
          <child name="start" type="seqActivity">
            <label>Start</label>
            <x>75.0</x>
            <y>269.0</y>
            <childList>
              <child name="stopOrchestrationProcess" type="completeActivity">
                <label>Stop Orchestration Process</label>
                <x>224.0</x>
                <y>246.0</y>
                <methodList>
                  <method name="cwOnProcActBefore" type="action">
                    <category>before</category>
                    <system>true</system>
                    <script><![CDATA[
                      debugPrintln(stcc.getSysdateForLog() + "[" + this.process.id + "] - Received Stop for this Orchestration process");
                    ]]></script>
                  </method>
                </methodList>
              </child>
            </childList>
          </child>
        </childList>
      </child>
    </childList>
    <methodList>
      <method name="cwOnProcActBefore" type="action">
        <category>before</category>
        <system>true</system>
        <script><![CDATA[debugPrintln(stcc.getSysdateForLog() + "[" + this.process.id + "] - Start");]]></script>
      </method>
    </methodList>
  </activity>
  <curRevision>true</curRevision>
  <document>doc_stcw.stcwOrchestrationProcessDocument</document>
  <label>Main STCW Orchestration Process - 3</label>
  <metaVersion>25</metaVersion>
  <priority>8</priority>
  <subflowReferenceList>
    <subflowReference type="sref">
      <revision>1</revision>
      <subflow>proc_stcw.performProvisioningOfAllChildElements_NotDelete_2</subflow>
    </subflowReference>
    <subflowReference type="sref">
      <revision>1</revision>
      <subflow>proc_stcw.performProvisioningOfAllChildElements_Delete</subflow>
    </subflowReference>
  </subflowReferenceList>
  <type>User</type>
</process>