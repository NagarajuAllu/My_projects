<?xml version="1.0" encoding="UTF-8" ?>
<script name="stcw.performOrderValidationWithGraniteQuery">
  <label>Perform Order Validation With Granite Query</label>
  <metaVersion>25</metaVersion>
  <parameterList>
    <parameter name="bundleOrder" type="rifp">
      <type>order_stcw.wholesaleBundleOrderSTC</type>
    </parameter>
    <parameter name="isSubmit" type="rifp">
      <type>dtype_com.conceptwave.system.Boolean</type>
    </parameter>
    <parameter name="failureArray" type="rifp">
      <type>nmeta_com.conceptwave.system.Object</type>
    </parameter>
  </parameterList>
  <script><![CDATA[
    var mrLaptop = Global.getConfigVariable("MR_LAPTOP", "N");
    var isMRLaptop = false;
    if(mrLaptop != null && mrLaptop == "Y") {
        isMRLaptop = true;
    }

    if(isMRLaptop) {
        return failureArray;
    }

    var dummyValueForHBU = Global.getConfigVariable("DUMMY_VALUE_FOR_FTTH", "DUMMY");

    for(var i=0; i<bundleOrder.parentLineItems.length; i++) {
        var bundleContainer = bundleOrder.parentLineItems[i];

        if(stcw.isLegacyService(bundleContainer, true)) {
            checkValidationForLineItem_(bundleContainer.parentLineItem);

            if(bundleContainer.services != null) {
                for(var j=0; j<bundleContainer.services.length; j++) {
                    // they are VAS!
                    var serviceContainer = bundleContainer.services[j];
                    checkValidationForLineItem_(serviceContainer.serviceLineItem);
                }
            }
        }
        else {
            if(bundleContainer.services != null) {
                for(var j=0; j<bundleContainer.services.length; j++) {
                    var serviceContainer = bundleContainer.services[j];
                    checkValidationForLineItem_(serviceContainer.serviceLineItem);

                    if(serviceContainer.subServices != null) {
                        for(var l=0; l<serviceContainer.subServices.length; l++) {
                            var subServiceContainer = serviceContainer.subServices[l];
                            checkValidationForLineItem_(subServiceContainer.subServiceLineItem);

                            if(subServiceContainer.subSubServices != null) {
                                for(var m=0; m<subServiceContainer.subSubServices.length; m++) {
                                    var subSubServiceContainer = subServiceContainer.subSubServices[m];
                                    checkValidationForLineItem_(subSubServiceContainer.subSubServiceLineItem);
                                }
                            }
                        }
                    }
                }
            }
        }
    }


    return failureArray;


    function checkValidationForLineItem_(lineItem) {
        var validationErrors = null;

        if(lineItem.provisioningBU == "W") {
            validationErrors = checkSite_(lineItem.locationACCLICode, "A", validationErrors);
            validationErrors = checkSite_(lineItem.locationBCCLICode, "B", validationErrors);

            if(lineItem.bandwidth != null) {
                if(! granite.existBandwidth(lineItem.bandwidth)) {
                    validationErrors = stcw.appendToValidationErrors("AE0142", Global.translateText("AE0142", null, [lineItem.bandwidth]), validationErrors, "performOrderValidationWithGraniteQuery");
                }
            }
        }
        else if(lineItem.provisioningBU == "H" || lineItem.provisioningBU == "M") {
            if(lineItem.locationACCLICode != dummyValueForHBU) {
                validationErrors = checkSite_(lineItem.locationACCLICode, "A", validationErrors);
            }
            if(lineItem.locationBCCLICode != dummyValueForHBU) {
                validationErrors = checkSite_(lineItem.locationBCCLICode, "B", validationErrors);
            }
        }

        failureArray = stcw.addValidationErrorsToFailureArray(validationErrors, lineItem.lineItemIdentifier, failureArray, "VALIDATION ERROR IN GRANITE", (isSubmit ? "SUBMIT ORDER" : "UPDATE ORDER"), "EOC_XNG");
    }


    function checkSite_(siteName, siteSide, validationErrors) {
        if(siteName != null) {
            if(! granite.existSite(siteName)) {
                validationErrors = stcw.appendToValidationErrors("AE0143", Global.translateText("AE0143", null, [siteName, siteSide]), validationErrors, "performOrderValidationWithGraniteQuery");
            }
        }
        return validationErrors;
    }
  ]]></script>
</script>