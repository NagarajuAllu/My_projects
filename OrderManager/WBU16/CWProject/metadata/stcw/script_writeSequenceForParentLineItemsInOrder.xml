<?xml version="1.0" encoding="UTF-8" ?>
<script name="stcw.writeSequenceForParentLineItemsInOrder">
  <label>Write Sequence For ParentLineItems In Order</label>
  <metaVersion>25</metaVersion>
  <parameterList>
    <parameter name="bundleOrder" type="rifp">
      <type>order_stcw.wholesaleBundleOrderSTC</type>
    </parameter>
  </parameterList>
  <script><![CDATA[
    var sequence                = 1;
    var priority                = 1;
    var child_processed         = 0;
    var count_processed_in_loop = 0;
    var errorFound              = null;
    var exceptionFound          = null;
    var found_record_with_higher_priority = false;

    try {
        while(child_processed < bundleOrder.parentLineItems.length  && errorFound == null ) {
            count_processed_in_loop = 0;
            found_record_with_higher_priority = false;

            for(var i=0; i<bundleOrder.parentLineItems.length && errorFound == null; i++) {
                var isProvisionable = (!stcw.isLineItemCompleted(bundleOrder.parentLineItems[i].parentLineItem.lineItemStatus) &&
                                       stcw.isLegacyService(bundleOrder.parentLineItems[i], true) &&
                                       bundleOrder.parentLineItems[i].parentLineItem.action != 'N' &&
                                       stcw.getIsProvisionableByProductCode(bundleOrder.parentLineItems[i].parentLineItem.productCode));
                if(bundleOrder.parentLineItems[i].parentLineItem.priority == priority) {
                    // priority is good; checking if already processed
                    if(! stcw.existRecordInOrchestrationTable(bundleOrder.parentLineItems[i].parentLineItem.id)) {
                        // to be processed ==> add record to table
                        stcw.writeRecordForLineItemInOrchestrationTable(bundleOrder.orderHeader.orderNumber,
                                                                        bundleOrder.id,
                                                                        bundleOrder.id,
                                                                        sequence,
                                                                        isProvisionable,
                                                                        bundleOrder.parentLineItems[i].parentLineItem,
                                                                        'B');
                        child_processed++;
                        count_processed_in_loop++;
                        errorFound = stcw.writeSequenceForServicesInOrder(bundleOrder, bundleOrder.parentLineItems[i]);
                    }
                    else {
                        // already processed, so skipped
                    }
                }
                else {
                    // priority is different
                    if(!found_record_with_higher_priority) {
                        found_record_with_higher_priority = (bundleOrder.parentLineItems[i].parentLineItem.priority > priority);
                    }
                }
            } // end for

            if(count_processed_in_loop == 0) {
                // found no processable record in the for
                if(found_record_with_higher_priority) {
                    // but found a child with higher priority, so increase the priority
                    priority++
                }
                else {
                    errorFound = new DataStructure("wsws.Failure");
                    errorFound.ErrorCode = "AE0030";
                    errorFound.ErrorDescription = Global.translateText("AE0030", null, bundleOrder.orderHeader.orderNumber);
                    errorFound.ErrorTime = stcc.getSysdateInYYYYMMDD_HH24MMSS();
                    errorFound.ErrorType = "VALIDATION ERROR";
                    errorFound.FunctionName = "SUBMIT ORDER";
                    errorFound.ObjectId = bundleOrder.orderHeader.orderNumber;
                    errorFound.SystemName = "EOC";
                }
            }
            else {
                // increasing the sequence because a new loop has to start
                sequence++;
            }
        }  // end while
    }
    catch(exc) {
        errorFound = new DataStructure("wsws.Failure");
        errorFound.ErrorCode = exceptionFound;
        errorFound.ErrorDescription = exc.message;
        errorFound.ErrorTime = stcc.getSysdateInYYYYMMDD_HH24MMSS();
        errorFound.ErrorType = "VALIDATION ERROR";
        errorFound.FunctionName = "SUBMIT ORDER";
        errorFound.ObjectId = bundleOrder.orderHeader.orderNumber;
        errorFound.SystemName = "EOC";
    }
    return errorFound;
  ]]></script>
</script>