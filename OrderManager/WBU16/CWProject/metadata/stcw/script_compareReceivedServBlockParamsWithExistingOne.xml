<?xml version="1.0" encoding="UTF-8" ?>
<script name="stcw.compareReceivedServBlockParamsWithExistingOne">
  <label>Compare Received Service Block Parameters With Existing One</label>
  <metaVersion>25</metaVersion>
  <parameterList>
    <parameter name="existingLineItemContainer" type="rifp">
      <type>nmeta_com.conceptwave.system.Object</type>
    </parameter>
    <parameter name="receivedLineItemContainer" type="rifp">
      <type>nmeta_com.conceptwave.system.Object</type>
    </parameter>
    <parameter name="validationErrors" type="rifp">
      <type>nmeta_com.conceptwave.system.Object</type>
    </parameter>
    <parameter name="lineItemIdentifier" type="rifp">
      <type>dtype_com.conceptwave.system.String</type>
    </parameter>
  </parameterList>
  <script><![CDATA[
    var debugMsg = "compareReceivedServBlockParamsWithExistingOne (" + lineItemIdentifier + ")";

    // nv check; it loops in existing NV pair and verifies if it exists also in received one
    if(existingLineItemContainer.serviceLineItemBlockParameters != null) {
        var missingReceived = 0;
        for(var i=0; i<existingLineItemContainer.serviceLineItemBlockParameters.length; i++) {
            var existingNVName = existingLineItemContainer.serviceLineItemBlockParameters[i].serviceLineItemBlockParameter.name;
            var found = false;
            var foundWithError = false;
            var lastErrorFound = null;
            // search nv in received
            if(receivedLineItemContainer.serviceLineItemBlockParameters != null) {
                for(var j=0; j<receivedLineItemContainer.serviceLineItemBlockParameters.length && !found; j++) {
                    if(existingNVName == receivedLineItemContainer.serviceLineItemBlockParameters[j].serviceLineItemBlockParameter.name) {
                        // found; comparing the values
                        found = true;
                        var receivedValues = stcw.getBlockValuesAsString(receivedLineItemContainer.serviceLineItemBlockParameters[j].serviceLineItemBlockParameter.id, ";");
                        var existingValues = stcw.getBlockValuesAsString(existingLineItemContainer.serviceLineItemBlockParameters[i].serviceLineItemBlockParameter.id, ";");
                        var resultArray = compareValues_(receivedValues, existingValues, existingNVName, "BlockParameter");
                        if(resultArray != null) {
                            found = false;
                            foundWithError = true;
                            lastErrorFound = resultArray;
                        }
                        else {
                            foundWithError = false;
                            lastErrorFound = null;
                        }
                    }
                }
            }

            if(!found) {
                if(foundWithError) {
                    // found but it was wrong! adding error
                    validationErrors = stcw.appendToValidationErrors(lastErrorFound[0], lastErrorFound[1], validationErrors, debugMsg);
                }
                else {
                    // not found NV; adding error
                    validationErrors = stcw.appendToValidationErrors("AE0065", Global.translateText("AE0065", null, ["BlockParameter", existingNVName, "ServiceLineItem", lineItemIdentifier, "received", "existing"]), validationErrors);
                    missingReceived++;
                }
            }
        }

        if(receivedLineItemContainer.serviceLineItemBlockParameters != null) {
            if((receivedLineItemContainer.serviceLineItemBlockParameters.length + missingReceived) != existingLineItemContainer.serviceLineItemBlockParameters.length) {
                // it means that there are additional attributes in received that are not in existing! ERROR!
                validationErrors = stcw.appendToValidationErrors("AE0066", Global.translateText("AE0066", null, ["ServiceLineItem", lineItemIdentifier, "BlockParameters"]), validationErrors);
            }
        }
    }
    else {
        if(receivedLineItemContainer.serviceLineItemBlockParameters != null) {
            // it means that there are additional attributes in received that are not in existing! ERROR!
            validationErrors = stcw.appendToValidationErrors("AE0066", Global.translateText("AE0066", null, ["ServiceLineItem", lineItemIdentifier, "BlockParameters"]), validationErrors);
        }
    }

    return validationErrors;

    function compareValues_(receivedAttribute, existingAttribute, attributeName, category) {
        var resultArray = null;

        if(receivedAttribute == null) {
            if(existingAttribute != null) {
                resultArray = ["AE0055", Global.translateText("AE0055", null, [category, attributeName, "existing"])];
            }
        }
        else {
            if(existingAttribute == null) {
                resultArray = ["AE0057", Global.translateText("AE0057", null, [category, attributeName, "existing"])];
            }
            else {
                if(! receivedAttribute.toString().equals(existingAttribute.toString())) {
                    resultArray = ["AE0056", Global.translateText("AE0056", null, [category, attributeName, receivedAttribute, existingAttribute, "existing"])];
                }
            }
        }

        return resultArray;
    }
  ]]></script>
</script>