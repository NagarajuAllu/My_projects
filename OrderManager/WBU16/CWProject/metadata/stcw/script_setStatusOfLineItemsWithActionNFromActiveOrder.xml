<?xml version="1.0" encoding="UTF-8" ?>
<script name="stcw.setStatusOfLineItemsWithActionNFromActiveOrder">
  <label>Set Status Of LineItems With Action &apos;N&apos; From Active Order</label>
  <metaVersion>25</metaVersion>
  <parameterList>
    <parameter name="bundleContainer" type="rifp">
      <type>nmeta_com.conceptwave.system.Object</type>
    </parameter>
    <parameter name="activeBundleOrderId" type="rifp">
      <type>dtype_cwf.docId</type>
    </parameter>
    <parameter name="isQuote" type="rifp">
      <type>dtype_com.conceptwave.system.Boolean</type>
    </parameter>
  </parameterList>
  <script><![CDATA[
    if(bundleContainer != null && activeBundleOrderId != null) {
        if(bundleContainer.services != null) {
            for(var i=0; i<bundleContainer.services.length; i++) {
                var serviceContainer = bundleContainer.services[i];
                if(serviceContainer.serviceLineItem.action == 'N') {
                    // this is to bypass a lot of possible errors - the default value is set to "COMPLETED"
                    var finalStatus = (isQuote ? "FEASIBLE" : "COMPLETED");
                    var finalCompletionDate = new Date();
                    var orchestrationRecordForLineItemInActiveBundle = stcw.getRecordInOrchTabByItemIdentifier_OrdNum_CwOrdId(null, activeBundleOrderId, serviceContainer.serviceLineItem.lineItemIdentifier);
                    if(orchestrationRecordForLineItemInActiveBundle != null) {
                        var activeLineItem = Document.readDoc("stcw.lineItemDocument", orchestrationRecordForLineItemInActiveBundle.cwDocId);
                        if(activeLineItem != null) {
                            finalStatus = (isQuote ? "FEASIBLE" :
                                                     ((activeLineItem.lineItemStatus == "FEASIBLE") ? "COMPLETED" : activeLineItem.lineItemStatus));
                            finalCompletionDate = activeLineItem.completionDate;
                        }
                    }
                    serviceContainer.serviceLineItem.lineItemStatus = finalStatus;
                    serviceContainer.serviceLineItem.completionDate = finalCompletionDate;
                }

                if(serviceContainer.subServices != null) {
                    for(var j=0; j<serviceContainer.subServices.length; j++) {
                        var subServiceContainer = serviceContainer.subServices[j];
                        if(subServiceContainer.subServiceLineItem.action == 'N') {
                            // this is to bypass a lot of possible errors - the default value is set to "COMPLETED"
                            var finalStatus = (isQuote ? "FEASIBLE" : "COMPLETED");
                            var finalCompletionDate = new Date();
                            var orchestrationRecordForLineItemInActiveBundle = stcw.getRecordInOrchTabByItemIdentifier_OrdNum_CwOrdId(null, activeBundleOrderId, subServiceContainer.subServiceLineItem.lineItemIdentifier);
                            if(orchestrationRecordForLineItemInActiveBundle != null) {
                                var activeLineItem = Document.readDoc("stcw.lineItemDocument", orchestrationRecordForLineItemInActiveBundle.cwDocId);
                                if(activeLineItem != null) {
                                    finalStatus = (isQuote ? "FEASIBLE" :
                                                             ((activeLineItem.lineItemStatus == "FEASIBLE") ? "COMPLETED" : activeLineItem.lineItemStatus));
                                    // finalStatus = (isQuote ? "FEASIBLE" : activeLineItem.lineItemStatus);
                                    finalCompletionDate = activeLineItem.completionDate;
                                }
                            }
                            subServiceContainer.subServiceLineItem.lineItemStatus = finalStatus;
                            subServiceContainer.subServiceLineItem.completionDate = finalCompletionDate;
                        }

                        if(subServiceContainer.subSubServices != null) {
                            for(var k=0; k<subServiceContainer.subSubServices.length; k++) {
                                var subSubServiceContainer = subServiceContainer.subSubServices[k];
                                if(subSubServiceContainer.subSubServiceLineItem.action == 'N') {
                                    // this is to bypass a lot of possible errors - the default value is set to "COMPLETED"
                                    var finalStatus = (isQuote ? "FEASIBLE" : "COMPLETED");
                                    var finalCompletionDate = new Date();
                                    var orchestrationRecordForLineItemInActiveBundle = stcw.getRecordInOrchTabByItemIdentifier_OrdNum_CwOrdId(null, activeBundleOrderId, subSubServiceContainer.subSubServiceLineItem.lineItemIdentifier);
                                    if(orchestrationRecordForLineItemInActiveBundle != null) {
                                        var activeLineItem = Document.readDoc("stcw.lineItemDocument", orchestrationRecordForLineItemInActiveBundle.cwDocId);
                                        if(activeLineItem != null) {
                                            finalStatus = (isQuote ? "FEASIBLE" :
                                                                     ((activeLineItem.lineItemStatus == "FEASIBLE") ? "COMPLETED" : activeLineItem.lineItemStatus));
                                            // finalStatus = (isQuote ? "FEASIBLE" : activeLineItem.lineItemStatus);
                                            finalCompletionDate = activeLineItem.completionDate;
                                        }
                                    }
                                    subSubServiceContainer.subSubServiceLineItem.lineItemStatus = finalStatus;
                                    subSubServiceContainer.subSubServiceLineItem.completionDate = finalCompletionDate;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
  ]]></script>
</script>