<?xml version="1.0" encoding="UTF-8" ?>
<script name="stcw.updateLineItemActionForCancelFeasibility">
  <label>Update LineItemAction For Cancel Feasibility</label>
  <metaVersion>25</metaVersion>
  <parameterList>
    <parameter name="lineItem" type="rifp">
      <type>nmeta_com.conceptwave.system.Object</type>
    </parameter>
    <parameter name="existingLineItem" type="rifp">
      <type>nmeta_com.conceptwave.system.Object</type>
    </parameter>
    <parameter name="existingOrderWasKO" type="rifp">
      <type>dtype_com.conceptwave.system.Boolean</type>
    </parameter>
    <parameter name="isLegacy" type="rifp">
      <type>dtype_com.conceptwave.system.Boolean</type>
    </parameter>
    <parameter name="parentLineItemProductCode" type="rifp">
      <type>dtype_com.conceptwave.system.String</type>
    </parameter>
    <parameter name="validationErrors" type="rifp">
      <type>nmeta_com.conceptwave.system.Object</type>
    </parameter>
  </parameterList>
  <script><![CDATA[
    /*******
       NOTE:  Please refer to the following table :
    -------------+--------------------------+------------------------|
                 | Action: Cancel           | Action: Do Nothing     |
    -------------+----------+---------------+------------------------|
                 | Already  | Not           |                        |
                 | received | received      |                        |
                 | Cancel   | Cancel        |                        |
    -------------+----------+---------------+------------------------|
     Hold        | REJECT   |CANCELLED      | REJECT                 |
                 |          |               |                        |
                 |          |               |                        |
    -------------+--------------------------+------------------------|
     COMPLETED   |        REJECT            | Status: COMPLETED      |
                 |                          | Action: existing       |
                 |                          | NO PROVISIONING        |
    -------------+--------------------------+------------------------|
     CANCELLED   |        REJECT            | Status: CANCELLED      |
                 |                          | Action: existing       |
                 |                          | NO PROVISIONING        |
    -------------+--------------------------+------------------------|
     FAILED      | Status: CANCELLED        | REJECT                 |
                 | Action: C                |                        |
                 | NO PROVISIONING          |                        |
    -------------+--------------------------+------------------------|
     Submitted   | REJECT   |Status: Hold   | REJECT                 |
                 |          |Action: 'C'    |                        |
                 |          |send as Update |                        |
                 |          |PROVISIONING   |                        |
    -------------+---------------------------------------------------|
    **********/

    var existingLineItemStatus = existingLineItem.lineItemStatus;
    var existingLineItemAction = existingLineItem.action;
    // 2015-12-01: added sentAnytimeToGranite management
    var existingLineItemInGranite = (existingLineItem.alreadySentToGranite || lineItem.sentAnytimeToGranite);

    var receivedAction = lineItem.action;

    if(existingLineItemStatus == "Hold" || existingLineItemStatus == "Waiting for Granite Resp") {
        if(receivedAction == "C") {
            if(lineItem.alreadyReceivedCancel && !existingOrderWasKO) {
                validationErrors = stcw.appendToValidationErrors("AE0070", Global.translateText("AE0070", null, "CancelOrder For Feasibility"),
                                                                 validationErrors, "updateLineItemActionForCancelFeasibility (" + lineItem.lineItemIdentifier + ")");
            }
            else {
                if(isLegacy) {
                    if(existingLineItemInGranite) {
                        lineItem.action = receivedAction;
                        lineItem.lineItemStatus = "Hold";
                        lineItem.isSubmit = false;
                        lineItem.isCancel = true;
                    }
                    else {
                        // requested to cancel the provisioning for this element that has not yet started. Mark as cancelled
                        lineItem.action = "N";
                        lineItem.lineItemStatus = "CANCELLED";
                        lineItem.completionDate = new Date();
                    }
                }
                else {
                    if(lineItem.elementTypeInOrderTree == "B") {
                        lineItem.action = receivedAction;
                        lineItem.lineItemStatus = "Hold";
                        lineItem.isSubmit = false;
                        lineItem.isCancel = true;
                    }
                    else {
                        lineItem.action = receivedAction;
                        lineItem.lineItemStatus = "CANCELLED";
                        lineItem.isSubmit = false;
                        lineItem.isCancel = true;
                        lineItem.completionDate = new Date();
                    }
                }
            }
        }
        else {
            // just received; nothing happened in provisioning
            validationErrors = stcw.appendToValidationErrors("AE0157", Global.translateText("AE0157", null, ["CancelOrder For Feasibility", receivedAction, existingLineItemStatus]),
                                                             validationErrors, "updateLineItemActionForCancelFeasibility (" + lineItem.lineItemIdentifier + ")");
        }
    }
    else if(existingLineItemStatus.toUpperCase() == "COMPLETED" || stcw.checkIfLineItemIsFeasibleForQuote(existingLineItemStatus.toUpperCase(), "F")) {
        // element completed
        if(receivedAction == "C") {
            /***
            it's always possible to cancel a completed "F" order even if it's provisioned by CIM-W or CIM-E
            ***/
            if(lineItem.alreadyReceivedCancel) {
                // already received cancel and component completed
                validationErrors = stcw.appendToValidationErrors("AE0070", Global.translateText("AE0070", null, "CancelOrder For Feasibility"),
                                                                 validationErrors, "updateLineItemActionForCancelFeasibility (" + lineItem.lineItemIdentifier + ")");
            }
            else {
                if(lineItem.provisioningBU == "W") {
                    if(existingLineItem.action == "N" || existingLineItem.action == "D") {
                        // it means that in the previous request the action was "N" or "D", so this one has to be automatically cancelled
                        lineItem.action = "N";
                        lineItem.lineItemStatus = "CANCELLED";
                        lineItem.isSubmit = false;
                        lineItem.isCancel = true;
                    }
                    else {
                        // only in case the provisioningBU is EBU and the lineItem is completed, EOC has to send the disconnect to Granite
                        lineItem.action = "D";
                        lineItem.lineItemStatus = "Hold";
                        lineItem.workOrderNumber = null; // it reset the workOrderNumber so EOC has to generate a new one while sending it to Granite
                        lineItem.isSubmit = true;
                        lineItem.isCancel = true;  // maintains that we received a Cancel for this lineItem
                        lineItem.alreadySentToGranite = false;
                        lineItem.completionDate = null;
                        if(lineItem.provisioningFlag == "ACTIVE") {
                            // reset the provisioning flag
                            lineItem.provisioningFlag = "PROVISIONING";
                        }
                    }
                }
                else if(lineItem.provisioningBU == "E") {
                    // only in case the provisioningBU is EBU and the lineItem is completed, EOC has to send the disconnect to Granite
                    lineItem.action = "D";
                    lineItem.lineItemStatus = "Hold";
                    lineItem.workOrderNumber = null; // it reset the workOrderNumber so EOC has to generate a new one while sending it to Granite
                    lineItem.isSubmit = true;
                    lineItem.isCancel = true;  // maintains that we received a Cancel for this lineItem
                    lineItem.alreadySentToGranite = false;
                    lineItem.completionDate = null;
                    if(lineItem.provisioningFlag == "ACTIVE") {
                        // reset the provisioning flag
                        lineItem.provisioningFlag = "PROVISIONING";
                    }
                }
                else if(lineItem.provisioningBU == "H") {
                    // 2018-12-27: if it's managed by CIM-H, EOC has to send an updateOrder with:
                    //   orderType = "F"
                    //   orderStatus = Cancel
                    //   new WorkOrder number
                    //   old WorkOrder number as NV pair "Original WO Number"
                    var oldWONumber = lineItem.workOrderNumber;
                    lineItem.action = "C";
                    lineItem.lineItemStatus = "Hold";
                    if(oldWONumber != null) {
                        lineItem.previousWONumber = oldWONumber;
                        lineItem.workOrderNumber = oldWONumber + "#FC";
                    }
                    lineItem.isSubmit = false;
                    lineItem.isCancel = true;  // maintains that we received a Cancel for this lineItem
                    lineItem.alreadySentToGranite = false;
                    lineItem.completionDate = null;
                    if(lineItem.provisioningFlag == "ACTIVE") {
                        // reset the provisioning flag
                        lineItem.provisioningFlag = "PROVISIONING";
                    }
                }
                else {
                    // already received cancel and component completed
                    validationErrors = stcw.appendToValidationErrors("AE0070", Global.translateText("AE0070", null, "CancelOrder For Feasibility"),
                                                                     validationErrors, "updateLineItemActionForCancelFeasibility (" + lineItem.lineItemIdentifier + ")");
                }
            }
        }
        else {
            if(lineItem.provisioningBU == "W") {
                if(existingLineItem.action == "N" || existingLineItem.action == "D") {
                    // it means that in the previous request the action was "N" or "D", so this one has to be automatically cancelled
                    lineItem.action = "N";
                    lineItem.lineItemStatus = "CANCELLED";
                    lineItem.isSubmit = false;
                    lineItem.isCancel = true;
                }
                else {
                    lineItem.action = "N";
                    lineItem.lineItemStatus = "FEASIBLE";
                }
            }
            else if(lineItem.provisioningBU == "H") {
                if(existingLineItem.action == "N") {
                    // it means that in the previous request the action was "N", so this one has to be automatically cancelled
                    lineItem.action = "N";
                    lineItem.lineItemStatus = "CANCELLED";
                    lineItem.isSubmit = false;
                    lineItem.isCancel = true;
                }
                else {
                    lineItem.action = "N";
                    lineItem.lineItemStatus = "FEASIBLE";
                }
            }
            else {
                lineItem.action = "N";
                lineItem.lineItemStatus = "FEASIBLE";
            }
        }
    }
    else if(existingLineItemStatus.toUpperCase() == "CANCELLED") {
        // element cancelled
        if(receivedAction == "C") {
            validationErrors = stcw.appendToValidationErrors("AE0157", Global.translateText("AE0157", null, ["CancelOrder For Feasibility", receivedAction, existingLineItemStatus]),
                                                             validationErrors, "updateLineItemActionForCancelFeasibility (" + lineItem.lineItemIdentifier + ")");
        }
        else {
            lineItem.action = "N";
            lineItem.lineItemStatus = existingLineItemStatus;
        }
    }
    else if(stcw.checkIfLineItemIsNotFeasibleForQuote(existingLineItemStatus.toUpperCase(), "F")) {
        // element failed to be provisioned in Granite
        if(receivedAction == "C") {
            // request to cancel
            lineItem.action = "C";
            lineItem.lineItemStatus = "CANCELLED";
            lineItem.isSubmit = false;
            lineItem.isCancel = true;
            lineItem.alreadySentToGranite = false;
            lineItem.completionDate = new Date();
        }
        else {
            // receivedAction is N but the lineItem is the bundle - it means that it's going to cancel only few lineItems
            if(receivedAction == "N" && existingLineItem.elementTypeInOrderTree == "B") {
                lineItem.action = "C";
                lineItem.lineItemStatus = "Hold";
                lineItem.isSubmit = existingLineItem.isSubmit;
                lineItem.isCancel = existingLineItem.isCancel;
                lineItem.alreadySentToGranite = existingLineItem.alreadySentToGranite;
            }
            else {
                validationErrors = stcw.appendToValidationErrors("AE0157", Global.translateText("AE0157", null, ["CancelOrder For Feasibility", receivedAction, existingLineItemStatus]),
                                                                 validationErrors, "updateLineItemActionForCancelFeasibility (" + lineItem.lineItemIdentifier + ")");
            }
        }
    }
    else if(existingLineItemStatus.toUpperCase() == "FAILED") {
        // element failed to be pushed in Granite
        if(receivedAction == "C") {
            // request to cancel
            if(existingLineItemInGranite) {
                // lineItem exists in Granite; it has to be cancelled
                lineItem.action = "C";
                lineItem.lineItemStatus = "Hold";
                lineItem.isSubmit = false;
                lineItem.isCancel = true;
                lineItem.alreadySentToGranite = false;
            }
            else {
                lineItem.action = "C";
                lineItem.lineItemStatus = "CANCELLED";
                lineItem.isSubmit = false;
                lineItem.isCancel = true;
                lineItem.alreadySentToGranite = false;
                lineItem.completionDate = new Date();
            }
        }
        else {
            // receivedAction is N but the lineItem is the bundle - it means that it's going to cancel only few lineItems
            if(receivedAction == "N" && existingLineItem.elementTypeInOrderTree == "B") {
                lineItem.action = "C";
                lineItem.lineItemStatus = "Hold";
                lineItem.isSubmit = existingLineItem.isSubmit;
                lineItem.isCancel = existingLineItem.isCancel;
                lineItem.alreadySentToGranite = existingLineItem.alreadySentToGranite;
            }
            else {
                validationErrors = stcw.appendToValidationErrors("AE0157", Global.translateText("AE0157", null, ["CancelOrder For Feasibility", receivedAction, existingLineItemStatus]),
                                                                 validationErrors, "updateLineItemActionForCancelFeasibility (" + lineItem.lineItemIdentifier + ")");
            }
        }
    }
    else {
        // 2017/06/08 - Need to support Global cancellation
        // element already pushed into Granite
        // validationErrors = stcw.appendToValidationErrors("AE0157", Global.translateText("AE0157", null, ["CancelOrder For Feasibility", receivedAction, existingLineItemStatus]),
        //                                                  validationErrors, "updateLineItemActionForCancelFeasibility (" + lineItem.lineItemIdentifier + ")");
        if(receivedAction == "C") {
            if(lineItem.alreadyReceivedCancel && !existingOrderWasKO) {
                validationErrors = stcw.appendToValidationErrors("AE0070", Global.translateText("AE0070", null, "CancelOrder For Feasibility"),
                                                                 validationErrors, "updateLineItemActionForCancelFeasibility (" + lineItem.lineItemIdentifier + ")");
            }
            else {
                lineItem.action = "C";
                lineItem.lineItemStatus = "Hold";
                lineItem.isSubmit = false;
                lineItem.isCancel = true;
                lineItem.alreadySentToGranite = false;
            }
        }
        else {
            if(lineItem.provisioningBU == "H") {
                if(existingLineItem.receivedAction == "N") {
                    // looks like the previous instance of the component received action "N" so receiving now action "N" is valid.
                    lineItem.action = "C";
                    lineItem.lineItemStatus = "Hold";
                    lineItem.isSubmit = false;
                    lineItem.isCancel = true;
                    lineItem.alreadySentToGranite = false;
                }
                else {
                    validationErrors = stcw.appendToValidationErrors("AE0157", Global.translateText("AE0157", null, ["CancelOrder For Feasibility", receivedAction, existingLineItemStatus]),
                                                                     validationErrors, "updateLineItemActionForCancelFeasibility (" + lineItem.lineItemIdentifier + ")");
                }
            }
            else {
                validationErrors = stcw.appendToValidationErrors("AE0157", Global.translateText("AE0157", null, ["CancelOrder For Feasibility", receivedAction, existingLineItemStatus]),
                                                                 validationErrors, "updateLineItemActionForCancelFeasibility (" + lineItem.lineItemIdentifier + ")");
            }
        }
    }

    lineItem.alreadyReceivedCancel = (existingLineItem.alreadyReceivedCancel || receivedAction == "C");


    return validationErrors;
  ]]></script>
</script>