<?xml version="1.0" encoding="UTF-8" ?>
<script name="stcw.mapOrderItemToInputDataForActivate_NSM">
  <label>Map OrderItem To InputData For Activate in NSM</label>
  <metaVersion>25</metaVersion>
  <parameterList>
    <parameter name="bundleOrder" type="rifp">
      <type>nmeta_com.conceptwave.system.Object</type>
    </parameter>
    <parameter name="orderItem" type="rifp">
      <type>doc_stcw.lineItemDocument</type>
    </parameter>
  </parameterList>
  <script><![CDATA[
    var inputDS = new DataStructure("nsmUpdateSIMStatusWS.updateSIMStatus_el");

    stcw.fillHeaderForOrderACK_WOSU(inputDS.updateSIMStatusRequest.header, "Activate", "EOC");
    inputDS.updateSIMStatusRequest.header.domainId = "GSM";


    fillRequestHeader_(stcw.getMappingFromCOMToLTEData("NSM", "ACTIVATE", null, "RH"));

    var itemInDS = fillItem_(stcw.getMappingFromCOMToLTEData("NSM", "ACTIVATE", null, "LI"));
    if(itemInDS != null) {
        inputDS.updateSIMStatusRequest.body.requestData.numberSIMIpDetail.item[0] = itemInDS;
    }

    return inputDS;


    function fillRequestHeader_(mappingForRequestHeader) {
        if(mappingForRequestHeader != null) {
            for(var i=0; i<mappingForRequestHeader.length; i++) {
                var mapping = mappingForRequestHeader[i];

                if(mapping.defaultValue != null) {
                    inputDS.updateSIMStatusRequest.body.requestHeader[mapping.ifName] = mapping.defaultValue;
                }
                else {
                    if(mapping.comElement == "OH") {
                        inputDS.updateSIMStatusRequest.body.requestHeader[mapping.ifName] = bundleOrder.orderHeader[mapping.comName];
                    }
                    else if(mapping.comElement == "LI") {
                        inputDS.updateSIMStatusRequest.body.requestHeader[mapping.ifName] = orderItem[mapping.comName];
                    }
                    else if (mapping.comElement == "NV") {
                        inputDS.updateSIMStatusRequest.body.requestHeader[mapping.ifName] = getNVPairValueByName_(mapping.comName);
                    }
                }
            }
        }
    }



    function fillItem_(mappingForLineItem) {
        var item = new DataStructure("nsmUpdateSIMStatusWS.item3");
        if(mappingForLineItem != null) {
            for(var i=0; i<mappingForLineItem.length; i++) {
                var mapping = mappingForLineItem[i];

                if(mapping.defaultValue != null) {
                    item[mapping.ifName] = mapping.defaultValue;
                }
                else {
                    if(mapping.comElement == "OH") {
                        item[mapping.ifName] = bundleOrder.orderHeader[mapping.comName];
                    }
                    else if(mapping.comElement == "LI") {
                        item[mapping.ifName] = orderItem[mapping.comName];
                    }
                    else if (mapping.comElement == "NV") {
                        item[mapping.ifName] = getNVPairValueByName_(mapping.comName);
                    }
                }
            }
        }

        return item;
    }

    function getNVPairValueByName_(nvPairName) {
        var nvPairValue = null;
        var allNVPairsWithName = stcw.getAllNameValuesByParentElementIdAndNameAndVASFlag(orderItem.id, false, nvPairName);
        if(allNVPairsWithName != null && allNVPairsWithName.length > 0) {
            nvPairValue = allNVPairsWithName[0].value;
        }

        return nvPairValue;
    }
  ]]></script>
</script>