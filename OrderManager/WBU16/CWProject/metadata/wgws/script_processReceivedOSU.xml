<?xml version="1.0" encoding="UTF-8" ?>
<script name="wgws.processReceivedOSU">
  <label>Process Received OSU</label>
  <metaVersion>25</metaVersion>
  <parameterList>
    <parameter name="input" type="rifp">
      <type>nmeta_com.conceptwave.system.Object</type>
    </parameter>
    <parameter name="parentOrderNumber" type="rifp">
      <type>dtype_com.conceptwave.system.String</type>
    </parameter>
    <parameter name="workOrderNumber" type="rifp">
      <type>dtype_com.conceptwave.system.String</type>
    </parameter>
  </parameterList>
  <script><![CDATA[
    var debug = "[MANAGE GRANITE WOSU] ";

    var wosuUnifiedModel = stcw.convertWBUOSUToUnifiedModel(input, parentOrderNumber);

    var lineItem = stcw.getLineItemByCOMOrderNumberAndWONumber(parentOrderNumber, workOrderNumber);

    if(lineItem != null) {
        var orchestrationRecord = stcw.getRecordInOrchestrationTableByLineItemId(lineItem.id);
        if(orchestrationRecord != null) {
            var provisioningProcessId = orchestrationRecord.provisioningProcessId;
            if(provisioningProcessId != null) {

                var processInstance = Process.getProcessInfo(provisioningProcessId);
                if(processInstance != null) {
                    if(processInstance.processStatus == 8) {
                        // the process is in status 8, so STALE; resume it
                        debugPrintln(stcc.getSysdateForLog() + debug + "Resuming Stale process " + provisioningProcessId);
                        Process.resumeAllStaleProcesses(provisioningProcessId);
                    }
                }

                var wosuId = stcw.writeGraniteWOSUIntoDB(provisioningProcessId, wosuUnifiedModel);

                var wosuNotificationDS = new DataStructure("stcw.wosuNotificationDS");
                wosuNotificationDS.wosuId = wosuId;

                debugPrintln(stcc.getSysdateForLog() + debug + "Sending WOSU Notification for <" + parentOrderNumber + "," + workOrderNumber + "> to process " + provisioningProcessId + "; wosuId = " + wosuId);
                Process.sendMessageToProcess(provisioningProcessId, null, "stcw.xngServicesNotificationToProcesses/workOrderStatusUpdateNotification", wosuNotificationDS);
            }
            else {
                debugPrintln(stcc.getSysdateForLog() + debug + "WARNING - Unable to find Provisioning Process for received granite WOSU for <" + parentOrderNumber + "," + workOrderNumber + ">; starting standalone process");
                var wosuId = stcw.writeGraniteWOSUIntoDB(-1, wosuUnifiedModel);
                startProcessToManageVoiceOrderStatusUpdate_(input, wosuId);
            }
        }
        else {
            debugPrintln(stcc.getSysdateForLog() + debug + "WARNING - Unable to find process for <" + parentOrderNumber + "," + workOrderNumber + ">");
        }
    }
    else {
        debugPrintln(stcc.getSysdateForLog() + debug + "WARNING - Unable to find Provisioning Process for received granite WOSU for <" + parentOrderNumber + "," + workOrderNumber + ">; starting standalone process");
        var wosuId = stcw.writeGraniteWOSUIntoDB(-1, wosuUnifiedModel);
        startProcessToManageVoiceOrderStatusUpdate_(input, wosuId);
    }




    //
    //  startProcessToManageVoiceOrderStatusUpdate_
    //
    function startProcessToManageVoiceOrderStatusUpdate_ (input, wosuID) {
        var processDocument = new Document("stcw.STCW_PROCESS_DOCUMENT");
        processDocument.firstPassWOSU = "Y";
        processDocument.latestWOSUId = wosuID;

        var processId = Process.startProcess ("stcw.sendWOSUToCOM", processDocument);
    debugPrintln(stcc.getSysdateForLog() + " started sendWOSUToCOM <" + input.orderNumber + ">: processId = " + processId);
    }      // s t a r t P r o c e s s T  o M a n a g e V o i c e O r d e r S t a t u s U p d a t e _
  ]]></script>
</script>