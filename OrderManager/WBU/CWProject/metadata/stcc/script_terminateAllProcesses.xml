<?xml version="1.0" encoding="UTF-8" ?>
<script filenameHash="dae9edc1442dfe235494c049d1969f28" versionHash="eccbc87e4b5ce2fe28308fd9f2a7baf3" name="stcc.terminateAllProcesses">
  <guid>{056e80c5-f131-e875-eded-53560b4a592e}</guid>
  <label>Terminate All Processes</label>
  <metaVersion>3</metaVersion>
  <parameterList>
    <parameter name="orderId" type="rifp">
      <type>dtype_cwf_oe.OrderIdNonRef</type>
    </parameter>
    <parameter name="processTypeName" type="rifp">
      <type>dtype_com.conceptwave.system.String</type>
    </parameter>
    <parameter name="processId" type="rifp">
      <type>dtype_cwf_pm.PROCESS_ID</type>
    </parameter>
  </parameterList>
  <script><![CDATA[
    var debugHeader = "[" + processId + "] - terminateAllProcesses - ";

    debugPrintln(stcc.getSysdateForLog() + debugHeader + "Input(" + orderId + "," + processTypeName + "," + processId + ")");
    if (orderId == undefined || orderId == null)
          return (0);

    var processFinder = new Finder ("stcc:processFinder");
    processFinder.searchDocument.orderId         = orderId;
    processFinder.searchDocument.processTypeName = processTypeName;
    processFinder.searchDocument.PROCESS_ID      = processId;
    processFinder.search ();

    var processCount = 0;
    var processDocument;
    for (var i=0; i <  processFinder.list.size; i++) {
          processDocument = processFinder.list[i];
          debugPrintln(stcc.getSysdateForLog() + debugHeader + "terminating process " + processDocument.PROCESS_ID);
          Process.stopProcess (processDocument.PROCESS_ID);
          Process.terminateProcess (processDocument.PROCESS_ID);
          processCount++;
    }

    return (processCount);
  ]]></script>
</script>