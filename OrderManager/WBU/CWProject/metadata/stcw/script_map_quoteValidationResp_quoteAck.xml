<?xml version="1.0" encoding="UTF-8" ?>
<script filenameHash="9121ee7b37feedd66354ecad657d6ad5" versionHash="eccbc87e4b5ce2fe28308fd9f2a7baf3" name="stcw.map_quoteValidationResp_quoteAck">
  <guid>{007afaa2-c673-8207-6825-f48c918dbc96}</guid>
  <label>(map) map_quoteValidationResp_quoteAck</label>
  <metaVersion>3</metaVersion>
  <parameterList>
    <parameter name="output" type="rifp">
      <mandatory>true</mandatory>
      <type>nmeta_com.conceptwave.system.Object</type>
    </parameter>
    <parameter name="input" type="rifp">
      <mandatory>true</mandatory>
      <type>nmeta_com.conceptwave.system.Object</type>
    </parameter>
    <parameter name="parentQuoteNumber" type="rifp">
      <type>dtype_com.conceptwave.system.String</type>
    </parameter>
    <parameter name="lineItemId" type="rifp">
      <type>dtype_com.conceptwave.system.Integer</type>
    </parameter>
  </parameterList>
  <valueType>dtype_com.conceptwave.system.Boolean</valueType>
  <script><![CDATA[
    if (output == undefined || output == null || output.metadataType != "siquoAck:processRequest_el") {
          Global.logDebug ("map_quoteValidationResp_quoteAck - nonexistant/wrong output: " + output);
          return (false);
    }

    if (input == undefined || input == null || input.metadataType != "grws:validateQuoteResponse") {
          Global.logDebug ("map_quoteValidationResp_quoteAck - nonexistant/wrong input: " + input);
          return (false);
    }

    var outputRequest = output.Request;
    var inputResult   = input.result;

    outputRequest.QuoteNumber      = parentQuoteNumber;
    // outputRequest.OrderRowItemId   = lineItemId;
    outputRequest.LineItemNumber   = lineItemId;

    outputRequest.BusinessUnit     = inputResult.BusinessUnit;
    outputRequest.WorkOrderStatus  = inputResult.WorkOrderStatus;

    outputRequest.ErrorCode        = inputResult.Status.ErrorCode;
    outputRequest.ErrorDescription = stcc.limitStringLengthToCRMValue(inputResult.Status.ErrorDescription);
    outputRequest.ErrorStatus      = inputResult.Status.Status;
    outputRequest.ErrorType        = inputResult.Status.ErrorType;
    outputRequest.SourceErrorCode  = inputResult.Status.SourceErrorCode;

    return (true);
  ]]></script>
</script>