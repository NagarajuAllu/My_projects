<?xml version="1.0" encoding="UTF-8" ?>
<script filenameHash="dfaf7ed855757d6ccd3f3feb82c82547" versionHash="eccbc87e4b5ce2fe28308fd9f2a7baf3" name="ds_ws.computeDelayForEAIGlobalProcesses">
  <guid>{04b91ba5-6382-cdf5-f6cb-e406cb9a4cde}</guid>
  <highlight>10</highlight>
  <label>Compute Delay For EAI Global Processes</label>
  <metaVersion>3</metaVersion>
  <parameterList>
    <parameter name="processDocument" type="rifp">
      <type>nmeta_com.conceptwave.system.Object</type>
    </parameter>
    <parameter name="processId" type="rifp">
      <type>dtype_cwf_pm.PROCESS_ID</type>
    </parameter>
  </parameterList>
  <script><![CDATA[
    var sleepTime = 0;

    if(processDocument.resultType != null) {
          if(processDocument.resultType == "NOT_AVAILABLE_EAI") {
                sleepTime = normalizeDelay_(Global.getConfigVariable("NOT_AVAILABLE_EAI"));
          }
          else if(processDocument.resultType == "NOT_SUCCESS_EAI") {
                sleepTime = normalizeDelay_(Global.getConfigVariable("NOT_SUCCESS_EAI"));
          }
          else if(processDocument.resultType == "NOT_AVAILABLE_EXPD") {
                sleepTime = normalizeDelay_(Global.getConfigVariable("NOT_AVAILABLE_EXPD"));
                var iFSleepTime = normalizeDelay_(Global.getInterfaceDelay(processDocument.interfaceName));
                if(iFSleepTime > sleepTime) {
                      sleepTime = iFSleepTime;
                }
          }
    }

    debugPrintln("[" + ds_ws.common_currentDateAsStringDDMMYYYYHH24MISS() + "][" + processId + "]  - " + processDocument.eventType + " Global Process [Handle I/F Error] - Sleeping for " + sleepTime);

          return sleepTime;


          //
          //  normalizeDelay_
          //
          function normalizeDelay_ (delay) {

                if (delay == undefined || delay == null || delay <= 0) {
                      Global.logDebug ("unknown/invalid delay: " + delay + "; returning default = 60 sec.");
                      return (60);
                }

                return (delay);

          }            // n o r m a l i z e D e l a y _
  ]]></script>
</script>