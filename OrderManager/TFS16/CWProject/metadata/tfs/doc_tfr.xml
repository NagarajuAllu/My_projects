<?xml version="1.0" encoding="UTF-8" ?>
<document name="tfs.tfr">
  <audit>true</audit>
  <dbSchema>ORDER</dbSchema>
  <extends>doc_com.conceptwave.system.Document</extends>
  <generatedKey>true</generatedKey>
  <guid>{23a23e3e-d7ab-45fa-8375-713dfef85b32}</guid>
  <label>TFR</label>
  <metaVersion>21</metaVersion>
  <variableList>
    <variable name="tfrId" type="leaf">
      <column>TFR_ID</column>
      <key>1</key>
      <propertyElement type="elfld">
        <editable type="varPath">
          <variablePathList>
            <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
          </variablePathList>
        </editable>
        <label>TFR ID</label>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_cwf.cwDocId</valueType>
    </variable>
    <variable name="parentProcId" type="leaf">
      <column>PARENT_PROC_ID</column>
      <propertyElement type="elfld">
        <editable type="varPath">
          <variablePathList>
            <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
          </variablePathList>
        </editable>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_cwf.docId</valueType>
    </variable>
    <variable name="tfrNumber" type="leaf">
      <audit>true</audit>
      <column>TFR_NUMBER</column>
      <propertyElement type="elfld">
        <editable type="varPath">
          <variablePathList>
            <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
          </variablePathList>
        </editable>
        <label>TFR Number</label>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_common.string30</valueType>
    </variable>
    <variable name="tfrStatus" type="leaf">
      <audit>true</audit>
      <column>TFR_STATUS</column>
      <propertyElement type="elfld">
        <editable type="varPath">
          <variablePathList>
            <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
          </variablePathList>
        </editable>
        <label>Status</label>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_common.string100</valueType>
    </variable>
    <variable name="siteAName" type="leaf">
      <audit>true</audit>
      <column>SITE_A_NAME</column>
      <propertyElement type="elref">
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisableSiteANamePerm</variablePath>
          </variablePathList>
        </editable>
        <label>Site A Name</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatorySiteANamePerm</variablePath>
          </variablePathList>
        </optional>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_granite.siteReference</valueType>
    </variable>
    <variable name="siteAIF" type="leaf">
      <audit>true</audit>
      <column>SITE_A_IF</column>
      <propertyElement type="elref">
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisableSiteAIFPerm</variablePath>
          </variablePathList>
        </editable>
        <label>Site A Interface</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatorySiteAIFPerm</variablePath>
          </variablePathList>
        </optional>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_tfs.siteInterfacePickListReference</valueType>
    </variable>
    <variable name="siteAJVC" type="leaf">
      <audit>true</audit>
      <column>SITE_A_JVC</column>
      <propertyElement type="elref">
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisableSiteAJVCPerm</variablePath>
          </variablePathList>
        </editable>
        <label>Site A JV Code</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatorySiteAJVCPerm</variablePath>
          </variablePathList>
        </optional>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_common.string100</valueType>
    </variable>
    <variable name="siteAExchangeType" type="leaf">
      <audit>true</audit>
      <column>SITE_A_EXCHANGETYPE</column>
      <propertyElement type="elslct">
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisableSiteAExchangeTypePerm</variablePath>
          </variablePathList>
        </editable>
        <label>Site A Exchange Type</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatorySiteAExchangeTypePerm</variablePath>
          </variablePathList>
        </optional>
        <sorted>false</sorted>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_tfs.siteExchangeTypePickListReference</valueType>
    </variable>
    <variable name="siteATermination" type="leaf">
      <audit>true</audit>
      <column>SITE_A_TERMINATION</column>
      <propertyElement type="elfld">
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisableSiteATerminationPerm</variablePath>
          </variablePathList>
        </editable>
        <label>Site A Termination</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatorySiteATerminationPerm</variablePath>
          </variablePathList>
        </optional>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_common.string100</valueType>
    </variable>
    <variable name="siteASwitchType" type="leaf">
      <audit>true</audit>
      <column>SITE_A_SWITCH_TYPE</column>
      <propertyElement type="elslct">
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisableSiteASwitchTypePerm</variablePath>
          </variablePathList>
        </editable>
        <label>Site A Switch Type</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatorySiteASwitchTypePerm</variablePath>
          </variablePathList>
        </optional>
        <sorted>false</sorted>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_tfs.switchTypePickListReference</valueType>
    </variable>
    <variable name="siteZName" type="leaf">
      <audit>true</audit>
      <column>SITE_Z_NAME</column>
      <propertyElement type="elref">
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisableSiteZNamePerm</variablePath>
          </variablePathList>
        </editable>
        <label>Site Z Name</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatorySiteZNamePerm</variablePath>
          </variablePathList>
        </optional>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_granite.siteReference</valueType>
    </variable>
    <variable name="siteZIF" type="leaf">
      <audit>true</audit>
      <column>SITE_Z_IF</column>
      <propertyElement type="elref">
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisableSiteZIFPerm</variablePath>
          </variablePathList>
        </editable>
        <label>Site Z Interface</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatorySiteZIFPerm</variablePath>
          </variablePathList>
        </optional>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_tfs.siteInterfacePickListReference</valueType>
    </variable>
    <variable name="siteZJVC" type="leaf">
      <audit>true</audit>
      <column>SITE_Z_JVC</column>
      <propertyElement type="elref">
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisableSiteZJVCPerm</variablePath>
          </variablePathList>
        </editable>
        <label>Site A JV Code</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatorySiteZJVCPerm</variablePath>
          </variablePathList>
        </optional>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_common.string100</valueType>
    </variable>
    <variable name="siteZExchangeType" type="leaf">
      <audit>true</audit>
      <column>SITE_Z_EXCHANGETYPE</column>
      <propertyElement type="elslct">
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisableSiteZExchangeTypePerm</variablePath>
          </variablePathList>
        </editable>
        <label>Site Z Exchange Type</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatorySiteZExchangeTypePerm</variablePath>
          </variablePathList>
        </optional>
        <sorted>false</sorted>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_tfs.siteExchangeTypePickListReference</valueType>
    </variable>
    <variable name="siteZTermination" type="leaf">
      <audit>true</audit>
      <column>SITE_Z_TERMINATION</column>
      <propertyElement type="elfld">
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisableSiteZTerminationPerm</variablePath>
          </variablePathList>
        </editable>
        <label>Site Z Termination</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatorySiteATerminationPerm</variablePath>
          </variablePathList>
        </optional>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_common.string100</valueType>
    </variable>
    <variable name="siteZSwitchType" type="leaf">
      <audit>true</audit>
      <column>SITE_Z_SWITCH_TYPE</column>
      <propertyElement type="elslct">
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisableSiteZSwitchTypePerm</variablePath>
          </variablePathList>
        </editable>
        <label>Site Z Switch Type</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatorySiteZSwitchTypePerm</variablePath>
          </variablePathList>
        </optional>
        <sorted>false</sorted>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_tfs.switchTypePickListReference</valueType>
    </variable>
    <variable name="region" type="leaf">
      <audit>true</audit>
      <column>REGION</column>
      <propertyElement type="elfld">
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisableRegionPerm</variablePath>
          </variablePathList>
        </editable>
        <label>Region</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatoryRegionPerm</variablePath>
          </variablePathList>
        </optional>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_common.string3</valueType>
    </variable>
    <variable name="district" type="leaf">
      <audit>true</audit>
      <column>DISTRICT</column>
      <propertyElement type="elfld">
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisableDistrictPerm</variablePath>
          </variablePathList>
        </editable>
        <label>District</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatoryDistrictPerm</variablePath>
          </variablePathList>
        </optional>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_common.string100</valueType>
    </variable>
    <variable name="plannedIssueDate" type="leaf">
      <audit>true</audit>
      <column>PLANNED_ISSUE_DATE</column>
      <propertyElement type="eldatetime">
        <displayFormat>yyyy/MM/dd HH:mm:ss</displayFormat>
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisablePlannedIssueDatePerm</variablePath>
          </variablePathList>
        </editable>
        <label>Planned Issue Date</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatoryPlannedIssueDatePerm</variablePath>
          </variablePathList>
        </optional>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_common.tfsDateTime</valueType>
    </variable>
    <variable name="creationDate" type="leaf">
      <audit>true</audit>
      <column>CREATION_DATE</column>
      <propertyElement type="eldatetime">
        <displayFormat>yyyy/MM/dd HH:mm:ss</displayFormat>
        <editable type="varPath">
          <variablePathList>
            <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
          </variablePathList>
        </editable>
        <label>Creation Date</label>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_common.tfsDateTime</valueType>
    </variable>
    <variable name="plannedRFSDate" type="leaf">
      <audit>true</audit>
      <column>PLANNED_RFS_DATE</column>
      <propertyElement type="eldatetime">
        <displayFormat>yyyy/MM/dd HH:mm:ss</displayFormat>
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisablePlannedRFSDatePerm</variablePath>
          </variablePathList>
        </editable>
        <label>Planned RFS Date</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatoryPlannedRFSDatePerm</variablePath>
          </variablePathList>
        </optional>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_common.tfsDateTime</valueType>
    </variable>
    <variable name="deptCreatedBy" type="leaf">
      <audit>true</audit>
      <column>DEPT_CREATED_BY</column>
      <propertyElement type="elfld">
        <editable type="varPath">
          <variablePathList>
            <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
          </variablePathList>
        </editable>
        <label>Department - Created By</label>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_common.string128</valueType>
    </variable>
    <variable name="priority" type="leaf">
      <audit>true</audit>
      <column>PRIORITY</column>
      <propertyElement type="elfld">
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisablePriorityPerm</variablePath>
          </variablePathList>
        </editable>
        <label>Priority</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatoryPriorityPerm</variablePath>
          </variablePathList>
        </optional>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_tfs.priorityPickList</valueType>
    </variable>
    <variable name="reasonForIssue" type="leaf">
      <audit>true</audit>
      <column>REASON_FOR_ISSUE</column>
      <propertyElement type="elslct">
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisableReasonForIssuePerm</variablePath>
          </variablePathList>
        </editable>
        <label>Reason For Issue</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatoryReasonForIssuePerm</variablePath>
          </variablePathList>
        </optional>
        <sorted>false</sorted>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_tfs.reasonForIssuePickListReference</valueType>
    </variable>
    <variable name="businessUnit_Requester" type="leaf">
      <audit>true</audit>
      <column>BU_REQUESTER</column>
      <propertyElement type="elfld">
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisableBusinessUnit_RequesterPerm</variablePath>
          </variablePathList>
        </editable>
        <label>Business Unit Requester</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatoryBusinessUnit_RequesterPerm</variablePath>
          </variablePathList>
        </optional>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_common.string128</valueType>
    </variable>
    <variable name="customerName" type="leaf">
      <audit>true</audit>
      <column>CUSTOMER_NAME</column>
      <propertyElement type="elref">
        <editable type="varPath">
          <variablePathList>
            <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
          </variablePathList>
        </editable>
        <label>Customer Name</label>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_tfs.customerPickListReference</valueType>
    </variable>
    <variable name="groupRequester" type="leaf">
      <audit>true</audit>
      <column>GROUP_REQUESTER</column>
      <propertyElement type="elfld">
        <editable type="varPath">
          <variablePathList>
            <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
          </variablePathList>
        </editable>
        <label>Group Requester</label>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_common.string128</valueType>
    </variable>
    <variable name="icmsNumber" type="leaf">
      <audit>true</audit>
      <column>ICMS_NUMBER</column>
      <propertyElement type="elfld">
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisableICMSNumberPerm</variablePath>
          </variablePathList>
        </editable>
        <label>ICMS Number</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatoryICMSNumberPerm</variablePath>
          </variablePathList>
        </optional>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_common.string100</valueType>
    </variable>
    <variable name="hajjCommittment" type="leaf">
      <audit>true</audit>
      <column>HAJJ_COMMITTMENT</column>
      <propertyElement type="elslct">
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisableHajjCommittmentPerm</variablePath>
          </variablePathList>
        </editable>
        <label>Hajj Committment</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatoryHajjCommittmentPerm</variablePath>
          </variablePathList>
        </optional>
        <sorted>false</sorted>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_tfs.hajjCommittmentPickListReference</valueType>
    </variable>
    <variable name="prnId" type="leaf">
      <audit>true</audit>
      <column>PRN_ID</column>
      <propertyElement type="elfld">
        <editable type="varPath">
          <variablePathList>
            <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
          </variablePathList>
        </editable>
        <label>PRN ID</label>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_cwf.docId</valueType>
    </variable>
    <variable name="requirementType" type="leaf">
      <audit>true</audit>
      <column>REQUIREMENT_TYPE</column>
      <propertyElement type="elslct">
        <editable type="varPath">
          <variablePathList>
            <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
          </variablePathList>
        </editable>
        <label>Requirement Type</label>
        <sorted>false</sorted>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_tfs.requirementTypePickListReference</valueType>
    </variable>
    <variable name="existing" type="leaf">
      <flags enum-type="metadataFlag">CONSTANT_VALUE</flags>
      <audit>true</audit>
      <column>EXISTING</column>
      <propertyElement type="elfld">
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisableExistingPerm</variablePath>
          </variablePathList>
        </editable>
        <label>Existing</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatoryExistingPerm</variablePath>
          </variablePathList>
        </optional>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_common.integer3</valueType>
    </variable>
    <variable name="required" type="leaf">
      <audit>true</audit>
      <column>REQUIRED</column>
      <propertyElement type="elfld">
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_isRequiredEditable</variablePath>
          </variablePathList>
        </editable>
        <label>Required</label>
      </propertyElement>
      <table>STC_TFR</table>
      <typeErrCode>AE0021</typeErrCode>
      <valueType>dtype_common.integer2</valueType>
    </variable>
    <variable name="forecasted" type="leaf">
      <audit>true</audit>
      <column>FORECASTED</column>
      <propertyElement type="elfld">
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisableForecastedPerm</variablePath>
          </variablePathList>
        </editable>
        <label>Forecasted</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatoryForecastedPerm</variablePath>
          </variablePathList>
        </optional>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_common.integer2</valueType>
    </variable>
    <variable name="faRejectionCode" type="leaf">
      <audit>true</audit>
      <column>FA_REJECTION_CODE</column>
      <propertyElement type="elslct">
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisableFARejectionCodePerm</variablePath>
          </variablePathList>
        </editable>
        <label>FA Rejection Code</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatoryFARejectionCodePerm</variablePath>
          </variablePathList>
        </optional>
        <sorted>false</sorted>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_tfs.faRejectionCodePickListReference</valueType>
    </variable>
    <variable name="pendingReason" type="leaf">
      <audit>true</audit>
      <column>PENDING_REASON</column>
      <propertyElement type="elslct">
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisablePendingReasonPerm</variablePath>
          </variablePathList>
        </editable>
        <label>Pending Reason</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatoryPendingReasonPerm</variablePath>
          </variablePathList>
        </optional>
        <sorted>false</sorted>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_tfs.pendingReasonPickListReference</valueType>
    </variable>
    <variable name="peSlot" type="leaf">
      <audit>true</audit>
      <column>PE_SLOT</column>
      <propertyElement type="elfld">
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisablePESlotPerm</variablePath>
          </variablePathList>
        </editable>
        <label>PE Slot</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatoryPESlotPerm</variablePath>
          </variablePathList>
        </optional>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_common.string30</valueType>
    </variable>
    <variable name="pePort" type="leaf">
      <audit>true</audit>
      <column>PE_PORT</column>
      <propertyElement type="elfld">
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisablePEPortPerm</variablePath>
          </variablePathList>
        </editable>
        <label>PE Port</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatoryPEPortPerm</variablePath>
          </variablePathList>
        </optional>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_common.string30</valueType>
    </variable>
    <variable name="peODF" type="leaf">
      <audit>true</audit>
      <column>PE_ODF</column>
      <propertyElement type="elfld">
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisablePEODFPerm</variablePath>
          </variablePathList>
        </editable>
        <label>PE ODF</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatoryPEODFPerm</variablePath>
          </variablePathList>
        </optional>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_common.string100</valueType>
    </variable>
    <variable name="connectionTFRId" type="leaf">
      <audit>true</audit>
      <column>CONNECTION_TFR_ID</column>
      <propertyElement type="elfld">
        <editable type="varPath">
          <variablePathList>
            <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
          </variablePathList>
        </editable>
        <label>Connection TFR ID</label>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_cwf.docId</valueType>
    </variable>
    <variable name="disconnectedTFRId" type="leaf">
      <audit>true</audit>
      <column>DISCONNECTED_TFR_ID</column>
      <propertyElement type="elfld">
        <editable type="varPath">
          <variablePathList>
            <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
          </variablePathList>
        </editable>
        <label>Disconnected TFR ID</label>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_cwf.docId</valueType>
    </variable>
    <variable name="createdBy" type="leaf">
      <audit>true</audit>
      <column>CREATED_BY</column>
      <propertyElement type="elref">
        <editable type="varPath">
          <variablePathList>
            <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
          </variablePathList>
        </editable>
        <editableVk>false</editableVk>
        <label>Created By</label>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_up_priv.userReference</valueType>
    </variable>
    <variable name="cwoType" type="leaf">
      <audit>true</audit>
      <column>CWO_TYPE</column>
      <propertyElement type="elslct">
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisableCWOTypePerm</variablePath>
          </variablePathList>
        </editable>
        <label>CWO Type</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatoryCWOTypePerm</variablePath>
          </variablePathList>
        </optional>
        <sorted>false</sorted>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_tfs.cwoTypePickListReference</valueType>
    </variable>
    <variable name="tfrType" type="leaf">
      <audit>true</audit>
      <column>TFR_TYPE</column>
      <propertyElement type="elslct">
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisableTFRTypePerm</variablePath>
          </variablePathList>
        </editable>
        <label>TFR Type</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatoryTFRTypePerm</variablePath>
          </variablePathList>
        </optional>
        <sorted>false</sorted>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_tfs.tfrTypePickListReference</valueType>
    </variable>
    <variable name="currentUserId" type="leaf">
      <audit>true</audit>
      <column>CURRENT_USERID</column>
      <propertyElement type="elref">
        <editable type="varPath">
          <variablePathList>
            <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
          </variablePathList>
        </editable>
        <editableVk>false</editableVk>
        <label>Current User</label>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_up_priv.userReference</valueType>
    </variable>
    <variable name="project" type="leaf">
      <audit>true</audit>
      <column>PROJECT</column>
      <propertyElement type="elslct">
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisableProjectPerm</variablePath>
          </variablePathList>
        </editable>
        <label>Project</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatoryProjectPerm</variablePath>
          </variablePathList>
        </optional>
        <sorted>false</sorted>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_tfs.projectPickListReference</valueType>
    </variable>
    <variable name="routingDetails" type="leaf">
      <audit>true</audit>
      <column>ROUTING_DETAILS</column>
      <propertyElement type="eltxtArea">
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisableRoutingDetailsPerm</variablePath>
          </variablePathList>
        </editable>
        <label>Routing Details</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatoryRoutingDetailsPerm</variablePath>
          </variablePathList>
        </optional>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_common.string4000</valueType>
    </variable>
    <variable name="mappingStatus" type="leaf">
      <audit>true</audit>
      <column>MAPPING_STATUS</column>
      <propertyElement type="elslct">
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisableMappingStatusPerm</variablePath>
          </variablePathList>
        </editable>
        <label>Mapping Status</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatoryMappingStatusPerm</variablePath>
          </variablePathList>
        </optional>
        <sorted>false</sorted>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_tfs.tfrMappingStatusPickListReference</valueType>
    </variable>
    <variable name="customerAddress" type="leaf">
      <audit>true</audit>
      <column>CUSTOMER_ADDRESS</column>
      <propertyElement type="eltxtArea">
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisableCustomerAddressPerm</variablePath>
          </variablePathList>
        </editable>
        <label>Customer Address</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatoryCustomerAddressPerm</variablePath>
          </variablePathList>
        </optional>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_common.string400</valueType>
    </variable>
    <variable name="orderNumber" type="leaf">
      <audit>true</audit>
      <column>ORDER_NUMBER</column>
      <propertyElement type="elfld">
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisableOrderNumberPerm</variablePath>
          </variablePathList>
        </editable>
        <label>Order Number</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatoryOrderNumberPerm</variablePath>
          </variablePathList>
        </optional>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_common.string100</valueType>
    </variable>
    <variable name="circuitNumber" type="leaf">
      <audit>true</audit>
      <column>CIRCUIT_NUMBER</column>
      <propertyElement type="elfld">
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisableCircuitNumberPerm</variablePath>
          </variablePathList>
        </editable>
        <label>Circuit Number</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatoryCircuitNumberPerm</variablePath>
          </variablePathList>
        </optional>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_common.string100</valueType>
    </variable>
    <variable name="gsmCellId" type="leaf">
      <audit>true</audit>
      <column>GSM_CELL_ID</column>
      <propertyElement type="elfld">
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisableGSMCellIdPerm</variablePath>
          </variablePathList>
        </editable>
        <label>GSM Cell Id</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatoryGSMCellIdPerm</variablePath>
          </variablePathList>
        </optional>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_common.string100</valueType>
    </variable>
    <variable name="msanSiteId" type="leaf">
      <audit>true</audit>
      <column>MSAN_SITE_ID</column>
      <propertyElement type="elfld">
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisableMSANCellIdPerm</variablePath>
          </variablePathList>
        </editable>
        <label>MSAN Site No</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatoryMSANCellIdPerm</variablePath>
          </variablePathList>
        </optional>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_common.string100</valueType>
    </variable>
    <variable name="rejectionCode" type="leaf">
      <audit>true</audit>
      <column>REJECTION_CODE</column>
      <propertyElement type="elslct">
        <editable type="varPath">
          <variablePathList>
            <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
          </variablePathList>
        </editable>
        <label>Rejection Code</label>
        <sorted>false</sorted>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_tfs.tfrRejectionCodePickListReference</valueType>
    </variable>
    <variable name="faCompletionDate" type="leaf">
      <audit>true</audit>
      <column>FA_COMPLETION_DATE</column>
      <propertyElement type="eldatetime">
        <displayFormat>yyyy/MM/dd HH:mm:ss</displayFormat>
        <editable type="varPath">
          <variablePathList>
            <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
          </variablePathList>
        </editable>
        <label>FA Completion Date</label>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_common.tfsDateTime</valueType>
    </variable>
    <variable name="customerExpectedDate" type="leaf">
      <audit>true</audit>
      <column>CUSTOMER_EXPD_DATE</column>
      <propertyElement type="eldatetime">
        <displayFormat>yyyy/MM/dd HH:mm:ss</displayFormat>
        <editable type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_readOnlyAndRevisableCustomerExpectedDatePerm</variablePath>
          </variablePathList>
        </editable>
        <label>Customer Expected Date</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>doc_tfs.tfr/permMethod_mandatoryCustomerExpectedDatePerm</variablePath>
          </variablePathList>
        </optional>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_common.tfsDateTime</valueType>
    </variable>
    <variable name="niNumber" type="leaf">
      <audit>true</audit>
      <column>NI_NUMBER</column>
      <propertyElement type="elfld">
        <editable type="varPath">
          <variablePathList>
            <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
          </variablePathList>
        </editable>
        <label>NI Number</label>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_common.string9</valueType>
    </variable>
    <variable name="tfrYear" type="leaf">
      <audit>true</audit>
      <column>TFRYEAR</column>
      <propertyElement type="elfld">
        <editable type="varPath">
          <variablePathList>
            <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
          </variablePathList>
        </editable>
        <label>Year</label>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_common.string4</valueType>
    </variable>
    <variable name="tfrMonth" type="leaf">
      <audit>true</audit>
      <column>TFRMONTH</column>
      <propertyElement type="elfld">
        <editable type="varPath">
          <variablePathList>
            <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
          </variablePathList>
        </editable>
        <label>Month</label>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_common.string2</valueType>
    </variable>
    <variable name="cwDocStamp" type="leaf">
      <column>CWDOCSTAMP</column>
      <propertyElement type="elfld">
        <editable type="varPath">
          <variablePathList>
            <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
          </variablePathList>
        </editable>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_cwf.cwDocStamp</valueType>
    </variable>
    <variable name="cwOrderCreationDate" type="leaf">
      <column>CWORDERCREATIONDATE</column>
      <propertyElement type="eldatetime">
        <editable type="varPath">
          <variablePathList>
            <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
          </variablePathList>
        </editable>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_cwf.cwOrderCreationDate</valueType>
    </variable>
    <variable name="cwOrderId" type="leaf">
      <column>CWORDERID</column>
      <propertyElement type="elfld">
        <editable type="varPath">
          <variablePathList>
            <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
          </variablePathList>
        </editable>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_cwf.cwOrderId</valueType>
    </variable>
    <variable name="cwParentId" type="leaf">
      <column>CWPARENTID</column>
      <propertyElement type="elfld">
        <editable type="varPath">
          <variablePathList>
            <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
          </variablePathList>
        </editable>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_cwf.cwParentId</valueType>
    </variable>
    <variable name="lastUpdatedDate" type="leaf">
      <column>LASTUPDATEDDATE</column>
      <propertyElement type="eldatetime">
        <editable type="varPath">
          <variablePathList>
            <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
          </variablePathList>
        </editable>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_cwf.lastUpdatedDate</valueType>
    </variable>
    <variable name="updatedBy" type="leaf">
      <column>UPDATEDBY</column>
      <propertyElement type="elfld">
        <editable type="varPath">
          <variablePathList>
            <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
          </variablePathList>
        </editable>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_cwf.updatedBy</valueType>
    </variable>
    <variable name="revision" type="leaf">
      <column>REVISION</column>
      <propertyElement type="elfld">
        <editable type="varPath">
          <variablePathList>
            <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
          </variablePathList>
        </editable>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_com.conceptwave.system.Integer</valueType>
    </variable>
    <variable name="cancelledDate" type="leaf">
      <column>CANCELLED_DATE</column>
      <propertyElement type="eldatetime">
        <displayFormat>yyyy/MM/dd HH:mm:ss</displayFormat>
        <editable type="varPath">
          <variablePathList>
            <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
          </variablePathList>
        </editable>
        <label>Cancelled Date</label>
      </propertyElement>
      <table>STC_TFR</table>
      <valueType>dtype_common.tfsDateTime</valueType>
    </variable>
    <variable name="currentUserDepartment" type="leaf">
      <column>CURRENT_USER_DEPARTMENT</column>
      <table>STC_TFR</table>
      <valueType>dtype_common.string100</valueType>
    </variable>
  </variableList>
  <methodList>
    <method name="isRequiredInvalid" type="crule">
      <code>AE0021</code>
      <message>Required value is invalid.</message>
      <path>doc_tfs.tfr/leaf_required</path>
      <severity>error</severity>
      <type>validator</type>
      <valueType>dtype_com.conceptwave.system.Boolean</valueType>
      <script><![CDATA[
        if( document.disconnectedTFRId ){
            if( +document.required < 1 || +document.required > +document.existing ){
                return true;
            }
        }

        if( document.required < 0 ){
            return true;
        }

        return false;
      ]]></script>
    </method>
    <method name="isExistingInvalid" type="crule">
      <message>Existing is invalid.</message>
      <path>doc_tfs.tfr/leaf_existing</path>
      <severity>error</severity>
      <type>validator</type>
      <valueType>dtype_com.conceptwave.system.Boolean</valueType>
      <script><![CDATA[
        // exising has to be > 0
        if( document.existing < 0 ){
            return true;
        }

        return false;
      ]]></script>
    </method>
    <method name="cwOnDocInit" type="action">
      <system>true</system>
      <script><![CDATA[
        this.cw$super_cwOnDocInit();

        this.tfrStatus = configuration.getExternalNameForStatusByInternalName("NEW", "TFR");

        this.createdBy = workflow.getUserForOrder(this.order.id, "0", "OrderInitiator");

        this.creationDate = new Date();
        this.tfrYear = Calendar.formatDate(this.creationDate, "yyyy");
        this.tfrMonth = Calendar.formatDate(this.creationDate, "MM");

        this.deptCreatedBy = up_priv.getDepartmentByUserId(this.createdBy);

        this.currentUserId = this.createdBy;
        this.existing = 0;
        this.revision = 1;

        this.niNumber = common.getNextSequenceValue("STC_NI_NUMBER_SEQ", "ORDER");

        debugPrintln("TFR = " + this.toXML());
      ]]></script>
    </method>
    <method name="cwOnDocVisualKey" type="action">
      <system>true</system>
      <valueType>dtype_com.conceptwave.system.String</valueType>
      <script><![CDATA[return "TFR " + this.tfrNumber  + " [" + this.tfrStatus + "]";]]></script>
    </method>
    <method name="mandatorySiteANamePerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "siteAName");]]></script>
    </method>
    <method name="mandatorySiteAIFPerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "siteAIF");]]></script>
    </method>
    <method name="mandatorySiteAJVCPerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "siteAJVC");]]></script>
    </method>
    <method name="mandatorySiteZNamePerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "siteZName");]]></script>
    </method>
    <method name="mandatorySiteZIFPerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "siteZIF");]]></script>
    </method>
    <method name="mandatorySiteZJVCPerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "siteZJVC");]]></script>
    </method>
    <method name="mandatoryPESlotPerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "peSlot");]]></script>
    </method>
    <method name="mandatoryPEPortPerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "pePort");]]></script>
    </method>
    <method name="mandatoryPEODFPerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "peODF");]]></script>
    </method>
    <method name="mandatoryGSMCellIdPerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "gsmCellId");]]></script>
    </method>
    <method name="mandatoryMSANCellIdPerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "msanCellId");]]></script>
    </method>
    <method name="mandatorySiteAExchangeTypePerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "siteAExchangeType");]]></script>
    </method>
    <method name="mandatorySiteATerminationPerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "siteATermination");]]></script>
    </method>
    <method name="mandatorySiteASwitchTypePerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "siteASwitchType");]]></script>
    </method>
    <method name="mandatorySiteZExchangeTypePerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "siteZExchangeType");]]></script>
    </method>
    <method name="mandatorySiteZTerminationPerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "siteZTermination");]]></script>
    </method>
    <method name="mandatorySiteZSwitchTypePerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "siteZSwitchType");]]></script>
    </method>
    <method name="mandatoryRegionPerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "region");]]></script>
    </method>
    <method name="mandatoryDistrictPerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "district");]]></script>
    </method>
    <method name="mandatoryPlannedIssueDatePerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "plannedIssueDate");]]></script>
    </method>
    <method name="mandatoryPlannedRFSDatePerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "plannedRFSDate");]]></script>
    </method>
    <method name="mandatoryPriorityPerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "priority");]]></script>
    </method>
    <method name="mandatoryReasonForIssuePerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "reasonForIssue");]]></script>
    </method>
    <method name="mandatoryBusinessUnit_RequesterPerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "businessUnit_Requester");]]></script>
    </method>
    <method name="mandatoryICMSNumberPerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "icmsNumber");]]></script>
    </method>
    <method name="mandatoryHajjCommittmentPerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "hajjCommittment");]]></script>
    </method>
    <method name="mandatoryExistingPerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "existing");]]></script>
    </method>
    <method name="readOnlyAndRevisableSiteANamePerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        var isNotDisconnect = !Boolean(this.disconnectedTFRId); // need to forbid editing the field in case the document is Disconnect TFR

        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        var index = this.tfrNumber.search("/");
        if( index > 0){
            isEditable = false;
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }
        return isEditable&&isNotDisconnect;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisableSiteAIFPerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        var isNotDisconnect = !Boolean(this.disconnectedTFRId); // need to hide the field in case the document is Disconnect TFR
        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }
        return isEditable&&isNotDisconnect;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisableSiteAJVCPerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        var isNotDisconnect = !Boolean(this.disconnectedTFRId); // need to hide the field in case the document is Disconnect TFR
        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }
        return isEditable&&isNotDisconnect;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisableSiteZNamePerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        var isNotDisconnect = !Boolean(this.disconnectedTFRId); // need to hide the field in case the document is Disconnect TFR

        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }

        var index = this.tfrNumber.search("/");
        if( index > 0){
            isEditable = false;
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }
        return isEditable&&isNotDisconnect;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisableSiteZIFPerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        var isNotDisconnect = !Boolean(this.disconnectedTFRId); // need to hide the field in case the document is Disconnect TFR
        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }
        return isEditable&&isNotDisconnect;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisableSiteZJVCPerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        var isNotDisconnect = !Boolean(this.disconnectedTFRId); // need to hide the field in case the document is Disconnect TFR
        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }
        return isEditable&&isNotDisconnect;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisablePESlotPerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        var isNotDisconnect = !Boolean(this.disconnectedTFRId); // need to hide the field in case the document is Disconnect TFR
        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }
        return isEditable&&isNotDisconnect;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisablePEPortPerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        var isNotDisconnect = !Boolean(this.disconnectedTFRId); // need to hide the field in case the document is Disconnect TFR
        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }
        return isEditable&&isNotDisconnect;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisablePEODFPerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        var isNotDisconnect = !Boolean(this.disconnectedTFRId); // need to hide the field in case the document is Disconnect TFR
        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }
        return isEditable&&isNotDisconnect;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisableGSMCellIdPerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        var isNotDisconnect = !Boolean(this.disconnectedTFRId); // need to hide the field in case the document is Disconnect TFR
        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }
        return isEditable&&isNotDisconnect;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisableMSANCellIdPerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        var isNotDisconnect = !Boolean(this.disconnectedTFRId); // need to hide the field in case the document is Disconnect TFR
        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }
        return isEditable&&isNotDisconnect;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisableSiteAExchangeTypePerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        var isNotDisconnect = !Boolean(this.disconnectedTFRId); // need to hide the field in case the document is Disconnect TFR
        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }
        return isEditable&&isNotDisconnect;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisableSiteATerminationPerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        var isNotDisconnect = !Boolean(this.disconnectedTFRId); // need to hide the field in case the document is Disconnect TFR
        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }
        return isEditable&&isNotDisconnect;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisableSiteASwitchTypePerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        var isNotDisconnect = !Boolean(this.disconnectedTFRId); // need to hide the field in case the document is Disconnect TFR
        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }
        return isEditable&&isNotDisconnect;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisableSiteZExchangeTypePerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        var isNotDisconnect = !Boolean(this.disconnectedTFRId); // need to hide the field in case the document is Disconnect TFR
        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }
        return isEditable&&isNotDisconnect;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisableSiteZTerminationPerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        var isNotDisconnect = !Boolean(this.disconnectedTFRId); // need to hide the field in case the document is Disconnect TFR
        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }
        return isEditable&&isNotDisconnect;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisableSiteZSwitchTypePerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        var isNotDisconnect = !Boolean(this.disconnectedTFRId); // need to hide the field in case the document is Disconnect TFR
        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }
        return isEditable&&isNotDisconnect;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisableRegionPerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        var isNotDisconnect = !Boolean(this.disconnectedTFRId); // need to hide the field in case the document is Disconnect TFR
        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }
        return isEditable&&isNotDisconnect;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisableDistrictPerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        var isNotDisconnect = !Boolean(this.disconnectedTFRId); // need to hide the field in case the document is Disconnect TFR
        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }
        return isEditable&&isNotDisconnect;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisablePlannedIssueDatePerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }
        return isEditable;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisablePlannedRFSDatePerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }
        return isEditable;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisablePriorityPerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        var isNotDisconnect = !Boolean(this.disconnectedTFRId); // need to hide the field in case the document is Disconnect TFR
        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }
        return isEditable&&isNotDisconnect;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisableReasonForIssuePerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        var isNotDisconnect = !Boolean(this.disconnectedTFRId); // need to hide the field in case the document is Disconnect TFR
        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }
        return isEditable&&isNotDisconnect;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisableBusinessUnit_RequesterPerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        var isNotDisconnect = !Boolean(this.disconnectedTFRId); // need to hide the field in case the document is Disconnect TFR
        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }
        return isEditable&&isNotDisconnect;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisableICMSNumberPerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        var isNotDisconnect = !Boolean(this.disconnectedTFRId); // need to hide the field in case the document is Disconnect TFR
        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }
        return isEditable&&isNotDisconnect;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisableHajjCommittmentPerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        var isNotDisconnect = !Boolean(this.disconnectedTFRId); // need to hide the field in case the document is Disconnect TFR
        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }
        return isEditable&&isNotDisconnect;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisableExistingPerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        var isRehomed = false;

        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }

        // provide additional logic for disconnect tfr
        var isDisconnectEditable = true;
        // existing attribute has to be read only in case of Rehomed Disconnected TFR
        if( this.disconnectedTFRId ) // if current tfr is Disconnect TFR
        {
            isRehomed = tfs.isDisconnectedTFRRehomed(this.tfrId); // check if it has been rehomed
            isDisconnectEditable = isRehomed?false:true; // if current TFR is Rehomed Disconnect TFR - forbid edit, else allow
            // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! need to uncomment line 18 before commit
            //isDisconnectEditable = true;
        }

        return isEditable&&isDisconnectEditable;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisableForecastedPerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        var isNotDisconnect = !Boolean(this.disconnectedTFRId); // need to hide the field in case the document is Disconnect TFR
        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }
        return isEditable&&isNotDisconnect;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisableFARejectionCodePerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        var isNotDisconnect = !Boolean(this.disconnectedTFRId); // need to hide the field in case the document is Disconnect TFR
        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }
        return isEditable&&isNotDisconnect;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisablePendingReasonPerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        var isNotDisconnect = !Boolean(this.disconnectedTFRId); // need to hide the field in case the document is Disconnect TFR
        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }
        return isEditable&&isNotDisconnect;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisableCWOTypePerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        var isNotDisconnect = !Boolean(this.disconnectedTFRId); // need to hide the field in case the document is Disconnect TFR
        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }
        return isEditable&&isNotDisconnect;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisableTFRTypePerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        var isNotDisconnect = !Boolean(this.disconnectedTFRId); // need to hide the field in case the document is Disconnect TFR
        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }
        return isEditable&&isNotDisconnect;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisableProjectPerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        var isNotDisconnect = !Boolean(this.disconnectedTFRId); // need to hide the field in case the document is Disconnect TFR
        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }
        return isEditable&&isNotDisconnect;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisableRoutingDetailsPerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        var isNotDisconnect = !Boolean(this.disconnectedTFRId); // need to hide the field in case the document is Disconnect TFR
        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }
        return isEditable&&isNotDisconnect;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisableMappingStatusPerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        var isNotDisconnect = !Boolean(this.disconnectedTFRId); // need to hide the field in case the document is Disconnect TFR
        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }
        return isEditable&&isNotDisconnect;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisableCustomerAddressPerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        var isNotDisconnect = !Boolean(this.disconnectedTFRId); // need to hide the field in case the document is Disconnect TFR
        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }
        return isEditable&&isNotDisconnect;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisableOrderNumberPerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        var isNotDisconnect = !Boolean(this.disconnectedTFRId); // need to hide the field in case the document is Disconnect TFR
        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }
        return isEditable&&isNotDisconnect;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisableCircuitNumberPerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        var isNotDisconnect = !Boolean(this.disconnectedTFRId); // need to hide the field in case the document is Disconnect TFR
        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }
        return isEditable&&isNotDisconnect;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisableCustomerExpectedDatePerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);
        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }
        return isEditable;
      ]]></script>
    </method>
    <method name="readOnlyAndRevisablePerm" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesList>
        <privileges type="ppriv">
          <noOtherTasks>true</noOtherTasks>
          <participantsList>
            <participants type="ppart">
              <operationsList>
                <operations>iface_workflow.orderInitiatorTeamIF/oper_prepareToReviseTFR</operations>
              </operationsList>
              <participant>part_workflow.installOrderInitiatorParticipant</participant>
            </participants>
          </participantsList>
          <privilege>STC_IOrdInitPriv</privilege>
          <task>true</task>
        </privileges>
      </privilegesList>
      <privilegesType>SOME</privilegesType>
      <script>return $psCondition;</script>
    </method>
    <method name="mandatoryForecastedPerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "forecasted");]]></script>
    </method>
    <method name="mandatoryFARejectionCodePerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "faRejectionCode");]]></script>
    </method>
    <method name="mandatoryPendingReasonPerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "pendingReason");]]></script>
    </method>
    <method name="mandatoryCWOTypePerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "cwoType");]]></script>
    </method>
    <method name="mandatoryTFRTypePerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "tfrType");]]></script>
    </method>
    <method name="mandatoryProjectPerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "project");]]></script>
    </method>
    <method name="mandatoryRoutingDetailsPerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "routingDetails");]]></script>
    </method>
    <method name="mandatoryMappingStatusPerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "mappingStatus");]]></script>
    </method>
    <method name="mandatoryCustomerAddressPerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "customerAddress");]]></script>
    </method>
    <method name="mandatoryOrderNumberPerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "orderNumber");]]></script>
    </method>
    <method name="mandatoryCircuitNumberPerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "circuitNumber");]]></script>
    </method>
    <method name="mandatoryCustomerExpectedDatePerm" type="permMethod">
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[return configuration.isFieldOptional("TFR", "customerExpectedDate");]]></script>
    </method>
    <method name="generateTFRNumber" type="uimthd">
      <script><![CDATA[
        /****
          this script should compute and set:
          - District: using the siteA
          - Region: using the SiteA
          - tfrNumber: using Region, year(last 2 digits), month
        ****/
        var cityInfo = tfs.getCityInfoForSite(this.siteAName);

        // acquire lock to avoid duplicated TFR Numbers
        tfs.acquireLockForTFRGenerationNumber();

        this.district = cityInfo.districtName;
        this.region = cityInfo.regionCode;

        var tfrNumberInitialValue = this.region + "-" + this.tfrYear.substring(2) + this.tfrMonth;
        var nextVal = tfs.getNextValueForTFR(tfrNumberInitialValue);
        this.tfrNumber = tfrNumberInitialValue + nextVal;
        debugPrintln("Generated TFRNumber is: " + this.tfrNumber);
        debugPrintln("TFR in generateTFRNumber = " + this.toXML());

        this.save();

        // release lock
        tfs.releaseLockForTFRGenerationNumber();
      ]]></script>
    </method>
    <method name="isRequiredEditable" type="permMethod">
      <parameterList>
        <parameter name="fieldName" type="rifp">
          <type>dtype_com.conceptwave.system.String</type>
        </parameter>
      </parameterList>
      <privilegesType>NEVER</privilegesType>
      <script><![CDATA[
        var CANCELLED_STATUS = configuration.getExternalNameForStatusByInternalName("CANCELLED", "TFR");
        var COMPLETED_STATUS = configuration.getExternalNameForStatusByInternalName("COMPLETED", "TFR");
        var isRehomed = false;
        // forbid edit field in case TFR is completed or cacelled
        if( this.tfrStatus && (this.tfrStatus == CANCELLED_STATUS || this.tfrStatus == COMPLETED_STATUS) ){
            return false;
        }
        // provide additional logic for disconnect tfr
        var isDisconnectEditable = true;
        // existing attribute has to be read only in case of Rehomed Disconnected TFR
        if( this.disconnectedTFRId ) // if current tfr is Disconnect TFR
        {
            isRehomed = tfs.isDisconnectedTFRRehomed(this.tfrId); // check if it has been rehomed
            isDisconnectEditable = isRehomed?false:true; // if current TFR is Rehomed Disconnect TFR - forbid edit, else allow
        };

        var isEditable = this.editablePerm($psCondition);
        var isRevised = this.readOnlyAndRevisablePerm($psCondition);

        if(isEditable){
            isEditable = !configuration.isReadonlyForUser("TFR",fieldName,UserProfile.userId());
        }
        if(isRevised){
            isEditable = configuration.isFieldRevisable("TFR", fieldName);
        }

        return isEditable&&isDisconnectEditable;
      ]]></script>
    </method>
    <method name="editablePerm" type="permMethod">
      <privilegesList>
        <privileges type="ppriv">
          <participantsList>
            <participants type="ppart">
              <operationsList>
                <operations>iface_workflow.orderInitiatorTeamIF/oper_prepareToSubmitPRNR</operations>
                <operations>iface_workflow.orderInitiatorTeamIF/oper_receiveRejection</operations>
                <operations>iface_workflow.orderInitiatorTeamIF/oper_prepareToSubmitTFR</operations>
                <operations>iface_workflow.orderInitiatorTeamIF/oper_prepareToReviseTFR</operations>
                <operations>iface_workflow.orderInitiatorTeamIF/oper_createAndSubmitDisconnectTFR</operations>
              </operationsList>
              <participant>part_workflow.installOrderInitiatorParticipant</participant>
            </participants>
          </participantsList>
          <privilege>STC_IOrdInitPriv</privilege>
          <task>true</task>
        </privileges>
      </privilegesList>
      <privilegesType>SOME</privilegesType>
      <script><![CDATA[
        if(this.tfrStatus && this.tfrStatus == "CANCELLED"){
            return false;
        }
        if(this.tfrStatus && this.tfrStatus == "COMPLETED"){
            return false;
        }
        return $psCondition;
      ]]></script>
    </method>
  </methodList>
  <UserInterface name="UserInterface" type="ui">
    <extends>doc_com.conceptwave.system.Document/ui_UserInterface</extends>
    <variableList>
      <variable name="findOrderRemarksUI" type="leaf">
        <valueType>findDoc_tfs.findRemarksForOrder/ui_UserInterface</valueType>
      </variable>
      <variable name="findAllTFRCustomAttributesUI" type="leaf">
        <valueType>findSql_tfs.findAllTFRCustomAttributes/ui_UserInterface</valueType>
      </variable>
      <variable name="currentDepartment" type="leaf">
        <valueType>dtype_common.string512</valueType>
      </variable>
      <variable name="model" type="uivar">
        <label>model</label>
        <valueType>doc_tfs.tfr</valueType>
      </variable>
      <variable name="prnName" type="leaf">
        <valueType>dtype_cwf.docId</valueType>
      </variable>
      <variable name="prnStatus" type="leaf">
        <valueType>dtype_common.string100</valueType>
      </variable>
      <variable name="total" type="leaf">
        <valueType>dtype_common.integer3</valueType>
      </variable>
      <variable name="connectionTFR" type="leaf">
        <valueType>dtype_common.string100</valueType>
      </variable>
      <variable name="disconnectedTFR" type="leaf">
        <valueType>dtype_common.string100</valueType>
      </variable>
    </variableList>
    <vformList>
      <vform name="Forms" type="frmui">
        <extends>doc_com.conceptwave.system.Document/ui_UserInterface/frmui_Forms</extends>
        <overlayList>
          <overlay name="Default" type="exov">
            <base>ui_com.conceptwave.system.DocumentUserInterface/frmui_Forms/exov_Default</base>
            <extends>ui_com.conceptwave.system.DocumentUserInterface/frmui_Forms/exov_Default</extends>
            <label>Default</label>
            <overrideList>
              <override name="defaultFormGrid_vCentering" type="elvltstck">
                <height>100%</height>
                <membersMargin>5</membersMargin>
                <width>100%</width>
                <elementList>
                  <element name="tfrHeader" type="elhdr">
                    <label>Transmission Facility Request (TFR) Details</label>
                    <showValidation>true</showValidation>
                  </element>
                  <element name="tfrTabset" type="eltset">
                    <elementList>
                      <element name="generalDataTabFrame" type="eltab">
                        <formReference type="varPath">
                          <variablePathList>
                            <variablePath>doc_tfs.tfr/ui_UserInterface/frmui_Forms/vform_tfrDetails</variablePath>
                          </variablePathList>
                        </formReference>
                        <label>TFR Details</label>
                      </element>
                      <element name="customAttributesTabFrame" type="eltab">
                        <formReference type="varPath">
                          <variablePathList>
                            <variablePath>doc_tfs.prn/ui_UserInterface/frmui_Forms/vform_customAttributesTab</variablePath>
                          </variablePathList>
                        </formReference>
                        <label>Custom Attributes</label>
                        <visible type="varPath">
                          <variablePathList>
                            <variablePath>doc_tfs.prn/ui_UserInterface/permMethod_isStored</variablePath>
                          </variablePathList>
                        </visible>
                      </element>
                      <element name="auditTrailForRemarksTabFrame" type="eltab">
                        <formReference type="varPath">
                          <variablePathList>
                            <variablePath>doc_tfs.tfr/ui_UserInterface/frmui_Forms/vform_auditTrailForRemarksTab</variablePath>
                          </variablePathList>
                        </formReference>
                        <label>Audit Trail For Remarks</label>
                        <visible type="varPath">
                          <variablePathList>
                            <variablePath>doc_tfs.tfr/ui_UserInterface/permMethod_isStored</variablePath>
                          </variablePathList>
                        </visible>
                      </element>
                    </elementList>
                  </element>
                </elementList>
              </override>
            </overrideList>
          </overlay>
          <overlay name="generalDetailsFrame" type="vform">
            <label>generalDetailsFrame</label>
            <root name="VerticalLayout" type="elvlt">
              <elementList>
                <element name="tfrGeneralInfo" type="elhdr">
                  <label>TFR General Details</label>
                  <showValidation>true</showValidation>
                </element>
                <element name="generalInfoGrid" type="elgrd">
                  <colWidths>115px,185px,115px,185px,115px,185px</colWidths>
                  <labelOrientation>left</labelOrientation>
                  <numOfCols>6</numOfCols>
                  <style>fittedSimpleBorder</style>
                  <width>1000px</width>
                  <elementList>
                    <element name="tfrId" type="elfld">
                      <label>TFR Id.</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_tfrId</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="tfrNumber" type="elfld">
                      <label>TFR Number</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_tfrNumber</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="tfrStatus" type="elfld">
                      <label>Status</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_tfrStatus</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="creationDate" type="eldatetime">
                      <label>Creation Date</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_creationDate</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="plannedRFSDate" type="eldatetime">
                      <label>Planned Ready For Service Date</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_plannedRFSDate</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="plannedIssueDate" type="eldatetime">
                      <label>Planned Issue Date</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_plannedIssueDate</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="customerExpectedDate" type="eldatetime">
                      <label>Customer Expected Date</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_customerExpectedDate</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="faCompletionDate" type="eldatetime">
                      <label>FA Completion Date</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_faCompletionDate</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="cancelledDate" type="eldatetime">
                      <label>Cancelled Date</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_cancelledDate</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="RowSpacer" type="elrsp">
                      <height>0px</height>
                      <rowSpan>0px</rowSpan>
                    </element>
                    <element name="createdBy" type="elref">
                      <dataLength>30</dataLength>
                      <label>Created By</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_createdBy</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="groupRequester" type="elfld">
                      <label>Group Requester</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_groupRequester</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="deptCreatedBy" type="elfld">
                      <label>Department - Created By</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_deptCreatedBy</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="businessUnit_Requester" type="elfld">
                      <label>Business Unit Requester</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_businessUnit_Requester</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="currentUserId" type="elref">
                      <label>Current User</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.prn/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.prn/leaf_currentUserId</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="currentUserDepartment" type="elfld">
                      <editable type="varPath">
                        <variablePathList>
                          <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
                        </variablePathList>
                      </editable>
                      <label>Current Department</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_currentUserDepartment</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="updatedBy" type="elfld">
                      <label>Updated by</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_updatedBy</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="lastUpdatedDate" type="eldatetime">
                      <label>Last Updated Date</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_lastUpdatedDate</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="revision" type="elfld">
                      <label>Revision</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_revision</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="RowSpacer1" type="elrsp">
                      <height>0px</height>
                      <rowSpan>0px</rowSpan>
                    </element>
                    <element name="cwoType" type="elslct">
                      <label>CWO Type</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_cwoType</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="tfrType" type="elslct">
                      <label>TFR Type</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_tfrType</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="niNumber" type="elfld">
                      <label>NI Number</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_niNumber</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="mappingStatus" type="elslct">
                      <label>Mapping Status</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_mappingStatus</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="prnName" type="elfld">
                      <editable type="varPath">
                        <variablePathList>
                          <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
                        </variablePathList>
                      </editable>
                      <label>PRN Name</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/leaf_prnName</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="prnStatus" type="elfld">
                      <editable type="varPath">
                        <variablePathList>
                          <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
                        </variablePathList>
                      </editable>
                      <label>PRN Status</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/leaf_prnStatus</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="connectionTFR" type="elfld">
                      <editable type="varPath">
                        <variablePathList>
                          <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
                        </variablePathList>
                      </editable>
                      <label>Connection TFR</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/leaf_connectionTFR</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="disconnectedTFR" type="elfld">
                      <editable type="varPath">
                        <variablePathList>
                          <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
                        </variablePathList>
                      </editable>
                      <label>Disconnected TFR</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/leaf_disconnectedTFR</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                  </elementList>
                </element>
              </elementList>
            </root>
          </overlay>
          <overlay name="customerDetailsFrame" type="vform">
            <label>customerDetailsFrame</label>
            <root name="VerticalLayout" type="elvlt">
              <elementList>
                <element name="tfrCustomerData" type="elhdr">
                  <label>TFR Customer Data</label>
                  <showValidation>true</showValidation>
                </element>
                <element name="customerDataGrid" type="elgrd">
                  <colWidths>115px,185px,115px,185px,115px,185px</colWidths>
                  <labelOrientation>left</labelOrientation>
                  <numOfCols>6</numOfCols>
                  <style>fittedSimpleBorder</style>
                  <width>1000px</width>
                  <elementList>
                    <element name="customerName" type="elslct">
                      <dataLength>30</dataLength>
                      <label>Customer Name</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_customerName</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="customerAddress" type="eltxtArea">
                      <columnSpan>3</columnSpan>
                      <height>40px</height>
                      <label>Customer Address</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_customerAddress</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="project" type="elslct">
                      <label>Project</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_project</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="region" type="elfld">
                      <editable type="varPath">
                        <variablePathList>
                          <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
                        </variablePathList>
                      </editable>
                      <label>Region</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_region</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="district" type="elfld">
                      <editable type="varPath">
                        <variablePathList>
                          <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
                        </variablePathList>
                      </editable>
                      <label>District</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_district</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="RowSpacer" type="elrsp">
                      <height>5px</height>
                      <rowSpan>5px</rowSpan>
                    </element>
                    <element name="GroupFrom" type="elgroup">
                      <label>From:</label>
                      <width>1000px</width>
                      <elementList>
                        <element name="siteAName" type="elref">
                          <label>Site Name</label>
                          <variable type="varPath">
                            <variablePathList>
                              <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                              <variablePath>doc_tfs.tfr/leaf_siteAName</variablePath>
                            </variablePathList>
                          </variable>
                        </element>
                        <element name="siteAIF" type="elslct">
                          <label>Interface</label>
                          <variable type="varPath">
                            <variablePathList>
                              <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                              <variablePath>doc_tfs.tfr/leaf_siteAIF</variablePath>
                            </variablePathList>
                          </variable>
                        </element>
                        <element name="siteAJVC" type="elfld">
                          <label>JV Code</label>
                          <variable type="varPath">
                            <variablePathList>
                              <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                              <variablePath>doc_tfs.tfr/leaf_siteAJVC</variablePath>
                            </variablePathList>
                          </variable>
                        </element>
                        <element name="siteATermination" type="elfld">
                          <label>Termination</label>
                          <variable type="varPath">
                            <variablePathList>
                              <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                              <variablePath>doc_tfs.tfr/leaf_siteATermination</variablePath>
                            </variablePathList>
                          </variable>
                        </element>
                        <element name="siteAExchangeType" type="elslct">
                          <label>Exchange Type</label>
                          <variable type="varPath">
                            <variablePathList>
                              <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                              <variablePath>doc_tfs.tfr/leaf_siteAExchangeType</variablePath>
                            </variablePathList>
                          </variable>
                        </element>
                        <element name="siteASwitchType" type="elslct">
                          <label>Switch Type</label>
                          <variable type="varPath">
                            <variablePathList>
                              <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                              <variablePath>doc_tfs.tfr/leaf_siteASwitchType</variablePath>
                            </variablePathList>
                          </variable>
                        </element>
                      </elementList>
                    </element>
                    <element name="RowSpacer1" type="elrsp">
                      <height>5px</height>
                      <rowSpan>5px</rowSpan>
                    </element>
                    <element name="GroupTo" type="elgroup">
                      <label>To:</label>
                      <width>1000px</width>
                      <elementList>
                        <element name="siteZName" type="elref">
                          <label>Site Name</label>
                          <variable type="varPath">
                            <variablePathList>
                              <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                              <variablePath>doc_tfs.tfr/leaf_siteZName</variablePath>
                            </variablePathList>
                          </variable>
                        </element>
                        <element name="siteZIF" type="elslct">
                          <label>Interface</label>
                          <variable type="varPath">
                            <variablePathList>
                              <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                              <variablePath>doc_tfs.tfr/leaf_siteZIF</variablePath>
                            </variablePathList>
                          </variable>
                        </element>
                        <element name="siteZJVC" type="elfld">
                          <label>JV Code</label>
                          <variable type="varPath">
                            <variablePathList>
                              <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                              <variablePath>doc_tfs.tfr/leaf_siteZJVC</variablePath>
                            </variablePathList>
                          </variable>
                        </element>
                        <element name="siteZTermination" type="elfld">
                          <label>Termination</label>
                          <variable type="varPath">
                            <variablePathList>
                              <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                              <variablePath>doc_tfs.tfr/leaf_siteZTermination</variablePath>
                            </variablePathList>
                          </variable>
                        </element>
                        <element name="siteZExchangeType" type="elslct">
                          <label>Exchange Type</label>
                          <variable type="varPath">
                            <variablePathList>
                              <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                              <variablePath>doc_tfs.tfr/leaf_siteZExchangeType</variablePath>
                            </variablePathList>
                          </variable>
                        </element>
                        <element name="siteZSwitchType" type="elslct">
                          <label>Switch Type</label>
                          <variable type="varPath">
                            <variablePathList>
                              <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                              <variablePath>doc_tfs.tfr/leaf_siteZSwitchType</variablePath>
                            </variablePathList>
                          </variable>
                        </element>
                      </elementList>
                    </element>
                  </elementList>
                </element>
              </elementList>
            </root>
          </overlay>
          <overlay name="provisioningDetailsFrame" type="vform">
            <label>provisioningDetailsFrame</label>
            <root name="VerticalLayout" type="elvlt">
              <elementList>
                <element name="tfrProvDetailInfo" type="elhdr">
                  <label>TFR Provisioning Details</label>
                  <showValidation>true</showValidation>
                </element>
                <element name="tfrProvDetailInfoGrid" type="elgrd">
                  <colWidths>115px,185px,115px,185px,115px,185px</colWidths>
                  <fillSpace>false</fillSpace>
                  <labelOrientation>left</labelOrientation>
                  <numOfCols>6</numOfCols>
                  <style>fittedSimpleBorder</style>
                  <useDefaultHeight>true</useDefaultHeight>
                  <width>1000px</width>
                  <elementList>
                    <element name="requirementType" type="elslct">
                      <label>Requirement Type</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_requirementType</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="total" type="elfld">
                      <editable type="varPath">
                        <variablePathList>
                          <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
                        </variablePathList>
                      </editable>
                      <label>Total</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/leaf_total</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="required" type="elfld">
                      <label>Required</label>
                      <onChangeMethod type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uimthd_computeTotal</variablePath>
                        </variablePathList>
                      </onChangeMethod>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_required</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="existing" type="elfld">
                      <label>Existing</label>
                      <onChangeMethod type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uimthd_computeTotal</variablePath>
                        </variablePathList>
                      </onChangeMethod>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_existing</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="forecasted" type="elfld">
                      <label>Forecasted</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_forecasted</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="priority" type="elslct">
                      <label>Priority</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_priority</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="peODF" type="elfld">
                      <label>PE ODF</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_peODF</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="peSlot" type="elfld">
                      <label>PE Slot</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_peSlot</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="pePort" type="elfld">
                      <label>PE Port</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_pePort</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="orderNumber" type="elfld">
                      <label>Order Number</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_orderNumber</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="circuitNumber" type="elfld">
                      <label>Circuit Number</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_circuitNumber</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="icmsNumber" type="elfld">
                      <label>ICMS Number</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_icmsNumber</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="hajjCommittment" type="elslct">
                      <label>Hajj Committment</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_hajjCommittment</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="reasonForIssue" type="elslct">
                      <label>Reason For Issue</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_reasonForIssue</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="faRejectionCode" type="elslct">
                      <label>FA Rejection Code</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_faRejectionCode</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="pendingReason" type="elslct">
                      <label>Pending Reason</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_pendingReason</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="routingDetails" type="eltxtArea">
                      <columnSpan>3</columnSpan>
                      <height>40px</height>
                      <label>Routing Details</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_routingDetails</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="gsmCellId" type="elfld">
                      <label>GSM Cell Id</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_gsmCellId</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="msanSiteId" type="elfld">
                      <label>MSAN Site Id</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_msanSiteId</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="rejectionCode" type="elslct">
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_tfs.tfr/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_tfs.tfr/leaf_rejectionCode</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                  </elementList>
                </element>
              </elementList>
            </root>
          </overlay>
          <overlay name="Menu" type="exov">
            <base>doc_com.conceptwave.system.Document/ui_UserInterface/frmui_Forms/exov_Menu</base>
            <extends>doc_com.conceptwave.system.Document/ui_UserInterface/frmui_Forms/exov_Menu</extends>
            <label>Menu</label>
            <overrideList>
              <override name="hl1" type="elhlt">
                <alignment>left,center</alignment>
                <membersMargin>20</membersMargin>
                <elementList>
                  <element name="cwfSave" type="elmnu">
                    <menuAccel type="mAccelP"/>
                    <clickMethod type="varPath">
                      <variablePathList>
                        <variablePath>ui_com.conceptwave.system.DocumentUserInterface/usrActionMethod_save</variablePath>
                      </variablePathList>
                    </clickMethod>
                    <icon>/cwf/MenuIconSave.gif</icon>
                    <label>Save</label>
                    <showDown>true</showDown>
                    <tooltip>Save</tooltip>
                  </element>
                  <element name="tfrMenuItem" type="elmnu">
                    <label>Utilities</label>
                    <showDown>true</showDown>
                    <showMenuDropDown>true</showMenuDropDown>
                    <showRollOver>true</showRollOver>
                    <elementList>
                      <element name="newRemarksMenuItem" type="elmnu">
                        <clickMethod type="varPath">
                          <variablePathList>
                            <variablePath>doc_tfs.tfr/ui_UserInterface/usrActionMethod_addNewRemark</variablePath>
                          </variablePathList>
                        </clickMethod>
                        <icon>/cwf/data_add.png</icon>
                        <label>Add New Remark</label>
                        <visible type="varPath">
                          <variablePathList>
                            <variablePath>doc_tfs.tfr/ui_UserInterface/permMethod_addNewRemarksView</variablePath>
                          </variablePathList>
                        </visible>
                      </element>
                      <element name="Separator" type="elsep">
                        <visible type="varPath">
                          <variablePathList>
                            <variablePath>doc_tfs.tfr/ui_UserInterface/permMethod_addNewRemarksView</variablePath>
                          </variablePathList>
                        </visible>
                      </element>
                      <element name="auditTrailMenuItem" type="elmnu">
                        <clickMethod type="varPath">
                          <variablePathList>
                            <variablePath>doc_tfs.tfr/ui_UserInterface/usrActionMethod_showAuditTrail</variablePath>
                          </variablePathList>
                        </clickMethod>
                        <label>Show Audit Trail</label>
                      </element>
                      <element name="trackingMenuItem" type="elmnu">
                        <clickMethod type="varPath">
                          <variablePathList>
                            <variablePath>doc_tfs.tfr/ui_UserInterface/usrActionMethod_showTracking</variablePath>
                          </variablePathList>
                        </clickMethod>
                        <icon>/cwf/element_find.png</icon>
                        <label>Show TFR Tracking</label>
                      </element>
                      <element name="showPRNsMenuItem" type="elmnu">
                        <clickMethod type="varPath">
                          <variablePathList>
                            <variablePath>doc_tfs.tfr/ui_UserInterface/usrActionMethod_showPRNs</variablePath>
                          </variablePathList>
                        </clickMethod>
                        <icon>/cwf/export.gif</icon>
                        <label>Show Related PRN</label>
                      </element>
                      <element name="showBIsMenuItem" type="elmnu">
                        <clickMethod type="varPath">
                          <variablePathList>
                            <variablePath>doc_tfs.tfr/ui_UserInterface/usrActionMethod_showBIs</variablePath>
                          </variablePathList>
                        </clickMethod>
                        <icon>/cwf/export.gif</icon>
                        <label>Show Related BIs</label>
                      </element>
                      <element name="showConnectionTFRMenuItem" type="elmnu">
                        <clickMethod type="varPath">
                          <variablePathList>
                            <variablePath>doc_tfs.tfr/ui_UserInterface/usrActionMethod_showConnectionTFR</variablePath>
                          </variablePathList>
                        </clickMethod>
                        <icon>/cwf/export.gif</icon>
                        <label>Show Connection TFR</label>
                        <visible type="varPath">
                          <variablePathList>
                            <variablePath>doc_tfs.tfr/ui_UserInterface/permMethod_showConnectionTFRMenu</variablePath>
                          </variablePathList>
                        </visible>
                      </element>
                      <element name="showDisconnectedTFRMenuItem" type="elmnu">
                        <clickMethod type="varPath">
                          <variablePathList>
                            <variablePath>doc_tfs.tfr/ui_UserInterface/usrActionMethod_showDisconnectedTFR</variablePath>
                          </variablePathList>
                        </clickMethod>
                        <icon>/cwf/export.gif</icon>
                        <label>Show Disconnected TFR</label>
                        <visible type="varPath">
                          <variablePathList>
                            <variablePath>doc_tfs.tfr/ui_UserInterface/permMethod_showDisconnectedTFRMenu</variablePath>
                          </variablePathList>
                        </visible>
                      </element>
                      <element name="showTasks" type="elmnu">
                        <clickMethod type="varPath">
                          <variablePathList>
                            <variablePath>doc_tfs.tfr/ui_UserInterface/usrActionMethod_showRelatedTasks</variablePath>
                          </variablePathList>
                        </clickMethod>
                        <icon>/cwf/export.gif</icon>
                        <label>Show Related Tasks</label>
                      </element>
                      <element name="showPreviousRevision" type="elmnu">
                        <clickMethod type="varPath">
                          <variablePathList>
                            <variablePath>doc_tfs.tfr/ui_UserInterface/usrActionMethod_showPreviousRevision</variablePath>
                          </variablePathList>
                        </clickMethod>
                        <icon>/cwf/export.gif</icon>
                        <label>Show Previous Revision</label>
                      </element>
                      <element name="showRejectionProcessActivities" type="elmnu">
                        <clickMethod type="varPath">
                          <variablePathList>
                            <variablePath>doc_tfs.tfr/ui_UserInterface/usrActionMethod_showRejectionProcessSteps</variablePath>
                          </variablePathList>
                        </clickMethod>
                        <icon>/cwf/export.gif</icon>
                        <label>Show Rejection Process Steps</label>
                        <visible type="varPath">
                          <variablePathList>
                            <variablePath>doc_tfs.tfr/ui_UserInterface/permMethod_isRejectionProcessStepsVisible</variablePath>
                          </variablePathList>
                        </visible>
                      </element>
                    </elementList>
                  </element>
                  <element name="cancelTFR" type="elmnu">
                    <clickMethod type="varPath">
                      <variablePathList>
                        <variablePath>doc_tfs.tfr/ui_UserInterface/usrActionMethod_cancelTFR</variablePath>
                      </variablePathList>
                    </clickMethod>
                    <label>Cancel TFR</label>
                    <visible type="varPath">
                      <variablePathList>
                        <variablePath>doc_tfs.tfr/ui_UserInterface/permMethod_cancelIsVisible</variablePath>
                      </variablePathList>
                    </visible>
                  </element>
                  <element name="disconnectTFRMenuItem" type="elmnu">
                    <clickMethod type="varPath">
                      <variablePathList>
                        <variablePath>doc_tfs.tfr/ui_UserInterface/usrActionMethod_disconnectTFR</variablePath>
                      </variablePathList>
                    </clickMethod>
                    <label>Disconnect TFR</label>
                    <visible type="varPath">
                      <variablePathList>
                        <variablePath>doc_tfs.tfr/ui_UserInterface/permMethod_disconnectTFRIsVisible</variablePath>
                      </variablePathList>
                    </visible>
                  </element>
                  <element name="rehomeTFRMenuItem" type="elmnu">
                    <clickMethod type="varPath">
                      <variablePathList>
                        <variablePath>doc_tfs.tfr/ui_UserInterface/usrActionMethod_rehomeTFR</variablePath>
                      </variablePathList>
                    </clickMethod>
                    <label>Rehome TFR</label>
                    <visible type="varPath">
                      <variablePathList>
                        <variablePath>doc_tfs.tfr/ui_UserInterface/permMethod_rehomeTFRIsVisible</variablePath>
                      </variablePathList>
                    </visible>
                  </element>
                  <element name="cancelDisconnectTFRMenuItem" type="elmnu">
                    <clickMethod type="varPath">
                      <variablePathList>
                        <variablePath>doc_tfs.tfr/ui_UserInterface/usrActionMethod_cancelDisconnectTFR</variablePath>
                      </variablePathList>
                    </clickMethod>
                    <label>Cancel Disconnect TFR</label>
                    <visible type="varPath">
                      <variablePathList>
                        <variablePath>doc_tfs.tfr/ui_UserInterface/permMethod_cancelDisconnecTFRIsVisible</variablePath>
                      </variablePathList>
                    </visible>
                  </element>
                  <element name="changeTFRMenuItem" type="elmnu">
                    <clickMethod type="varPath">
                      <variablePathList>
                        <variablePath>doc_tfs.tfr/ui_UserInterface/usrActionMethod_changeTFR</variablePath>
                      </variablePathList>
                    </clickMethod>
                    <label>Change TFR</label>
                    <visible type="varPath">
                      <variablePathList>
                        <variablePath>doc_tfs.tfr/ui_UserInterface/permMethod_chTFRISVisable</variablePath>
                      </variablePathList>
                    </visible>
                  </element>
                  <element name="linkToBIMenuItem" type="elmnu">
                    <clickMethod type="varPath">
                      <variablePathList>
                        <variablePath>doc_tfs.tfr/ui_UserInterface/usrActionMethod_showBIToLink</variablePath>
                      </variablePathList>
                    </clickMethod>
                    <label>Link To Existing BI(s)</label>
                    <visible type="varPath">
                      <variablePathList>
                        <variablePath>doc_tfs.tfr/ui_UserInterface/permMethod_biTeamPrivilege</variablePath>
                      </variablePathList>
                    </visible>
                  </element>
                  <element name="createNewBIMenuItem" type="elmnu">
                    <clickMethod type="varPath">
                      <variablePathList>
                        <variablePath>doc_tfs.tfr/ui_UserInterface/usrActionMethod_createNewBI</variablePath>
                      </variablePathList>
                    </clickMethod>
                    <icon>/cwf/MenuIconAdd.gif</icon>
                    <label>Create New BI</label>
                    <visible type="varPath">
                      <variablePathList>
                        <variablePath>doc_tfs.tfr/ui_UserInterface/permMethod_biTeamPrivilege</variablePath>
                      </variablePathList>
                    </visible>
                  </element>
                </elementList>
              </override>
            </overrideList>
          </overlay>
          <overlay name="tfrDetails" type="vform">
            <label>tfrDetails</label>
            <root name="defaultFormGrid_vCentering" type="elvltstck">
              <height>100%</height>
              <membersMargin>5</membersMargin>
              <width>100%</width>
              <elementList>
                <element name="generalDetailsFormFrame" type="elovf">
                  <formReference type="varPath">
                    <variablePathList>
                      <variablePath>doc_tfs.prn/ui_UserInterface/frmui_Forms/vform_generalDetailsFrame</variablePath>
                    </variablePathList>
                  </formReference>
                </element>
                <element name="LayoutSpacer1" type="ellsp">
                  <height>20px</height>
                </element>
                <element name="customerDetailsFormFrame" type="elovf">
                  <formReference type="varPath">
                    <variablePathList>
                      <variablePath>doc_tfs.prn/ui_UserInterface/frmui_Forms/vform_customerDetailsFrame</variablePath>
                    </variablePathList>
                  </formReference>
                </element>
                <element name="LayoutSpacer2" type="ellsp">
                  <height>20px</height>
                </element>
                <element name="provisioningDetailsFormFrame" type="elovf">
                  <formReference type="varPath">
                    <variablePathList>
                      <variablePath>doc_tfs.prn/ui_UserInterface/frmui_Forms/vform_provisioningDetailsFrame</variablePath>
                    </variablePathList>
                  </formReference>
                </element>
              </elementList>
            </root>
          </overlay>
          <overlay name="customAttributesTab" type="vform">
            <label>customAttributesTab</label>
            <root name="customAttributesVerticalLayout" type="elvlt">
              <fillSpace>false</fillSpace>
              <height>100%</height>
              <useDefaultHeight>true</useDefaultHeight>
              <width>1100px</width>
              <elementList>
                <element name="customAttributesHeader" type="elhdr">
                  <height>30px</height>
                  <label>Custom Attributes for TFR</label>
                </element>
                <element name="customAttributesFormFrame" type="elovf">
                  <formReference type="varPath">
                    <variablePathList>
                      <variablePath>doc_tfs.tfr/ui_UserInterface/leaf_findAllTFRCustomAttributesUI</variablePath>
                      <variablePath>findSql_tfs.findAllTFRCustomAttributes/ui_UserInterface/frmui_Forms/vform_showInParent</variablePath>
                    </variablePathList>
                  </formReference>
                  <height>90%</height>
                  <variable type="varPath">
                    <variablePathList>
                      <variablePath>doc_tfs.tfr/ui_UserInterface/leaf_findAllTFRCustomAttributesUI</variablePath>
                    </variablePathList>
                  </variable>
                </element>
              </elementList>
            </root>
          </overlay>
          <overlay name="auditTrailForRemarksTab" type="vform">
            <label>auditTrailForRemarksTab</label>
            <root name="auditTrailForRemarksVerticalLayout" type="elvlt">
              <fillSpace>false</fillSpace>
              <height>100%</height>
              <useDefaultHeight>true</useDefaultHeight>
              <width>1100px</width>
              <elementList>
                <element name="auditTrailForRemarksHeader" type="elhdr">
                  <height>30px</height>
                  <label>View All Remarks For Order</label>
                </element>
                <element name="auditTrailForRemarksFormFrame" type="elovf">
                  <formReference type="varPath">
                    <variablePathList>
                      <variablePath>doc_tfs.tfr/ui_UserInterface/leaf_findOrderRemarksUI</variablePath>
                      <variablePath>findDoc_tfs.findRemarksForOrder/ui_UserInterface/frmui_Forms/exov_Default</variablePath>
                    </variablePathList>
                  </formReference>
                  <height>90%</height>
                  <variable type="varPath">
                    <variablePathList>
                      <variablePath>doc_tfs.tfr/ui_UserInterface/leaf_findOrderRemarksUI</variablePath>
                    </variablePathList>
                  </variable>
                </element>
              </elementList>
            </root>
          </overlay>
        </overlayList>
      </vform>
    </vformList>
    <methodList>
      <method name="onInit" type="action">
        <valueType>nmeta_com.conceptwave.system.Object</valueType>
        <script><![CDATA[
          var res = this.cw$super_onInit();

          this.findOrderRemarksUI = new tfs.findRemarksForOrder.UserInterface(null, this);
          this.findOrderRemarksUI.search.model.cwDocID = this.model.orderId;
          this.findOrderRemarksUI.model.search();

          this.findAllTFRCustomAttributesUI = new tfs.findAllTFRCustomAttributes.UserInterface(null, this);
          this.findAllTFRCustomAttributesUI.search.model.objectId = this.model.id;
          this.findAllTFRCustomAttributesUI.model.search();

          if(this.model.prnId != null) {
              var prnFinder = new Finder("tfs.findPRN");
              prnFinder.searchDocument.prnId = this.model.prnId;
              var listPRNFound = prnFinder.search();
              if(listPRNFound != null && listPRNFound.length > 0) {
                  this.prnName = listPRNFound[0].prnName;
                  this.prnStatus = listPRNFound[0].prnStatus;
              }
          }

          this.computeTotal();

          //find connection TFR number
          if( this.model.connectionTFRId ){
              var connectionTFR = Document.readDoc("tfs.tfr", this.model.connectionTFRId);
              this.connectionTFR = connectionTFR.tfrNumber; // set connection tfr number
          }

          // get disconnected TFR number
          if( this.model.disconnectedTFRId ){
              var disconnectedTFR = Document.readDoc("tfs.tfr",this.model.disconnectedTFRId);
              this.disconnectedTFR = disconnectedTFR.tfrNumber; // set disconnected tfr number
          }

          return res;
        ]]></script>
      </method>
      <method name="showAuditTrail" type="usrActionMethod">
        <dialogHeight>768</dialogHeight>
        <dialogWidth>1024</dialogWidth>
        <showInPopup>true</showInPopup>
        <script><![CDATA[
          var finderAuditTrail = new Finder("common.findAuditTrailForDocumentWithUDAs");
          finderAuditTrail.searchDocument.docId = this.model.id;
          finderAuditTrail.searchDocument.likeDocId = '%' + this.model.id + '%';
          finderAuditTrail.search();

          return finderAuditTrail;
        ]]></script>
      </method>
      <method name="addNewRemark" type="usrActionMethod">
        <dialogHeight>260</dialogHeight>
        <dialogWidth>680</dialogWidth>
        <showInPopup>true</showInPopup>
        <script><![CDATA[
          var orderRemarks = new Document("tfs.STC_OBJECT_REMARKS");
          orderRemarks.objectId = this.model.tfrId;
          orderRemarks.objectName = this.model.tfrNumber;
          orderRemarks.orderId = this.model.orderId;
          orderRemarks.objectType = 'TFR';
          orderRemarks.creationDate = new Date();
          orderRemarks.userId = Global.getUserId();

          return orderRemarks;
        ]]></script>
      </method>
      <method name="addNewRemarksView" type="permMethod">
        <privilegesList>
          <privileges type="ppriv">
            <privilege>STC_ASPriv</privilege>
          </privileges>
          <privileges type="ppriv">
            <privilege>STC_ASBuiltPriv</privilege>
          </privileges>
          <privileges type="ppriv">
            <privilege>STC_BBTransPriv</privilege>
          </privileges>
          <privileges type="ppriv">
            <privilege>STC_FATxPriv</privilege>
          </privileges>
          <privileges type="ppriv">
            <privilege>STC_FacilityDes</privilege>
          </privileges>
          <privileges type="ppriv">
            <privilege>STC_FNIPriv</privilege>
          </privileges>
          <privileges type="ppriv">
            <privilege>STC_IOrdInitPriv</privilege>
          </privileges>
          <privileges type="ppriv">
            <privilege>STC_IntegPriv</privilege>
          </privileges>
          <privileges type="ppriv">
            <privilege>STC_NetwDesPriv</privilege>
          </privileges>
          <privileges type="ppriv">
            <privilege>STC_QualityPriv</privilege>
          </privileges>
          <privileges type="ppriv">
            <privilege>STC_SitePriv</privilege>
          </privileges>
          <privileges type="ppriv">
            <privilege>STC_SwchActvPriv</privilege>
          </privileges>
          <privileges type="ppriv">
            <privilege>STC_TFAModSqPriv</privilege>
          </privileges>
          <privileges type="ppriv">
            <privilege>STC_TFAPriv</privilege>
          </privileges>
          <privileges type="ppriv">
            <privilege>STC_TransMapPriv</privilege>
          </privileges>
          <privileges type="ppriv">
            <privilege>STC_VerificPriv</privilege>
          </privileges>
          <privileges type="ppriv">
            <privilege>STC_XCPriv</privilege>
          </privileges>
          <privileges type="ppriv">
            <privilege>CWAdminApp</privilege>
          </privileges>
          <privileges type="ppriv">
            <privilege>cwt_wzConfig</privilege>
          </privileges>
          <privileges type="ppriv">
            <privilege>WLAdmin</privilege>
          </privileges>
        </privilegesList>
        <privilegesType>SOME</privilegesType>
        <script><![CDATA[
          var COMPLETED_STATUS = configuration.getExternalNameForStatusByInternalName("COMPLETED", "TFR");
          var CANCELLED_STATUS = configuration.getExternalNameForStatusByInternalName("CANCELLED","TFR");

          if(this.model.tfrStatus == COMPLETED_STATUS || this.model.tfrStatus == CANCELLED_STATUS){
              return false;
          }

          return $psCondition;
        ]]></script>
      </method>
      <method name="isStored" type="permMethod">
        <script>return this.model.isStored;</script>
      </method>
      <method name="save" type="usrActionMethod">
        <allowInvalidObject>true</allowInvalidObject>
        <validate>true</validate>
        <script><![CDATA[
          this.cw$super_save();

          if(this.findAllTFRCustomAttributesUI.model.list != null && this.findAllTFRCustomAttributesUI.model.list.length > 0) {
              for(var i=0; i<this.findAllTFRCustomAttributesUI.model.list.length; i++) {
                  var customAttr = this.findAllTFRCustomAttributesUI.model.list[i];
                  if(customAttr.customAttrType == "Hyperlink") {
                      customAttr.attributeValue = tfs.computeHyperlinkValue("TFR", this.model.tfrId, customAttr.customAttributeId);
                      tfs.storeCustomAttribute(this.model.tfrId, customAttr.customAttributeId, customAttr.attributeValue, "TFR");
                  }
              }
          }

          this.findAllTFRCustomAttributesUI.search.model.objectId = this.model.id;
          this.findAllTFRCustomAttributesUI.model.search();

          this.findOrderRemarksUI.model.search();
        ]]></script>
      </method>
      <method name="showTracking" type="usrActionMethod">
        <dialogHeight>600</dialogHeight>
        <dialogObject>ui_com.conceptwave.system.Dialog</dialogObject>
        <dialogWidth>1000</dialogWidth>
        <showInPopup>true</showInPopup>
        <script><![CDATA[
          var trackingFinder = new Finder("workflow.trackingFinder");
          trackingFinder.searchDocument.objectId = this.model.id;
          trackingFinder.searchDocument.objectType = "TFR";
          trackingFinder.search();

          return trackingFinder;
        ]]></script>
      </method>
      <method name="showPRNs" type="usrActionMethod">
        <dialogHeight>768</dialogHeight>
        <dialogWidth>1024</dialogWidth>
        <showInPopup>true</showInPopup>
        <script><![CDATA[
          if(this.model.prnId == null) {
              Global.throwException("AE0010", ["PRN", "TFR"]);
          }

          var prnFinder = new Finder("tfs.findPRNByTFRId");
          prnFinder.searchDocument.cwDocID = this.model.id;
          var resultList = prnFinder.search();

          var prnFound = null;

          if(resultList != null && resultList.length > 0) {
              prnFound = resultList[0];
          }

          return prnFound;
        ]]></script>
      </method>
      <method name="showConnectionTFR" type="usrActionMethod">
        <dialogHeight>768</dialogHeight>
        <dialogWidth>1024</dialogWidth>
        <showInPopup>true</showInPopup>
        <script><![CDATA[
          if(this.model.connectionTFRId == null) {
              Global.throwException("AE0010", ["Connection TFR", "TFR"]);
          }

          var tfrFinder = new Finder("tfs.findTFR");
          tfrFinder.searchDocument.tfrId = this.model.connectionTFRId;
          var resultList = tfrFinder.search();

          var tfrFound = null;

          if(resultList != null && resultList.length > 0) {
              tfrFound = resultList[0];
          }
          else {
              Global.throwException("AE0008", ["Connection TFR", "TFR"]);
          }

          return tfrFound;
        ]]></script>
      </method>
      <method name="showDisconnectedTFR" type="usrActionMethod">
        <dialogHeight>768</dialogHeight>
        <dialogWidth>1024</dialogWidth>
        <showInPopup>true</showInPopup>
        <script><![CDATA[
          if(this.model.disconnectedTFRId == null) {
              Global.throwException("AE0010", ["Disconnected TFR", "TFR"]);
          }

          var tfrFinder = new Finder("tfs.findTFR");
          tfrFinder.searchDocument.tfrId = this.model.disconnectedTFRId;
          var resultList = tfrFinder.search();

          var tfrFound = null;

          if(resultList != null && resultList.length > 0) {
              tfrFound = resultList[0];
          }
          else {
              Global.throwException("AE0008", ["Disconnected TFR", "TFR"]);
          }

          return tfrFound;
        ]]></script>
      </method>
      <method name="showConnectionTFRMenu" type="permMethod">
        <script>return (this.model.connectionTFRId != null);</script>
      </method>
      <method name="showDisconnectedTFRMenu" type="permMethod">
        <script>return (this.model.disconnectedTFRId != null);</script>
      </method>
      <method name="showBIs" type="usrActionMethod">
        <dialogHeight>768</dialogHeight>
        <dialogWidth>1024</dialogWidth>
        <showInPopup>true</showInPopup>
        <script><![CDATA[
          var biFinder = new Finder("tfs.findBIForPRNOrTFR");
          biFinder.searchDocument.sourceTFRId = this.model.tfrId;
          biFinder.search();

          return biFinder;
        ]]></script>
      </method>
      <method name="biOrderInitiatorPrivilege" type="permMethod">
        <privilegesList>
          <privileges type="ppriv">
            <privilege>STC_FacilityDes</privilege>
          </privileges>
          <privileges type="ppriv">
            <privilege>STC_XCPriv</privilege>
          </privileges>
        </privilegesList>
        <privilegesType>SOME</privilegesType>
        <script>return $psCondition;</script>
      </method>
      <method name="cancelTFR" type="usrActionMethod">
        <confirmation>doc_tfs.tfr/ui_UserInterface/uimthd_cancelConfirmation</confirmation>
        <dialogHeight>768</dialogHeight>
        <dialogWidth>1024</dialogWidth>
        <showInPopup>true</showInPopup>
        <script><![CDATA[
          debugPrintln("Running Cancel Install from TFR. Order Id:"+this.model.cwOrderId)

          var qualityUserForOrder = workflow.getUserForOrder(this.model.cwOrderId, "0", "Quality"); // check if TFR aleready assigned to Quality team
          debugPrintln("Order.id:" + this.model.cwOrderId + "; orderItemId:" + 0 + "; quality user for order:" + qualityUserForOrder);
          if(qualityUserForOrder){ // if Quality user already asigned to TFR, skip order cancelling
              Global.throwException("AE0019");
          }

          var resList = workflow.findRunningProcessesByType(this.model.cwOrderId, "workflow.cancelInstallOrderProcess");
          if(resList && resList.length > 0){
            Global.throwException("AE0018");
          }

          workflow.setUserInUsersForOrder(this.model.cwOrderId, "0", "OrderInitiator", Global.getUserId());
          var processId = Process.startProcess("workflow.cancelInstallOrderProcess", this.model.cwOrderId);

          Global.showUserMessage("Cancel process started successfully");
          debugPrintln(workflow.getLogHeaderForProcess(processId) + "From TFR: Started Cancel Process for " + this.model.tfrNumber);
        ]]></script>
      </method>
      <method name="cancelIsVisible" type="permMethod">
        <privilegesList>
          <privileges type="ppriv">
            <privilege>STC_IOrdInitPriv</privilege>
          </privileges>
        </privilegesList>
        <privilegesType>SOME</privilegesType>
        <script><![CDATA[
          // allow Cancel Install only for Install Order Initiator
          // hide Cancel in case of Disconnect TFR
          // hide Cancel in case of NO running install or change procesess for this TFR

          var qualityUserForOrder = workflow.getUserForOrder(this.model.cwOrderId, "0", "Quality"); // check if TFR aleready assigned to Quality team
          debugPrintln("Order.id:" + this.model.cwOrderId + "; orderItemId:" + 0 + "; quality user for order:" + qualityUserForOrder);
          if(qualityUserForOrder){ // if Quality user already asigned to TFR, skip order cancelling
              return false;
          }

          var runningInstall = workflow.findRunningProcessesByType(this.model.cwOrderId, "workflow.installOrderProcess");
          var runningChange = workflow.findRunningProcessesByType(this.model.cwOrderId, "workflow.changeOrderProcess");

          return $psCondition && (this.model.disconnectedTFRId == null) && ( Boolean(runningInstall.length) || Boolean(runningChange.length) );
        ]]></script>
      </method>
      <method name="triggerOnExisting" type="usrActionMethod">
        <script><![CDATA[
          var elementName = Global.getCurrentElementActionCulprit();
          this.total = this.model.required + this.model.existing;
        ]]></script>
      </method>
      <method name="computeTotal" type="uimthd">
        <script><![CDATA[
          if( this.model.disconnectedTFRId ){ // if current document is Disconnect TFR
              // compute TOTAL as difference beetween existing and required
              this.total = this.model.existing - this.model.required;
          }
          else{
              this.total = this.model.required + this.model.existing;
          }
        ]]></script>
      </method>
      <method name="disconnectTFR" type="usrActionMethod">
        <confirmation>doc_tfs.tfr/ui_UserInterface/uimthd_disconnectTFRConfirmation</confirmation>
        <validate>true</validate>
        <script><![CDATA[
          debugPrintln("Disconnect TFR requested:"+this.model.tfrId);
          debugPrintln("Disconnect action validation started.");

          var COMPLETED_STATUS = configuration.getExternalNameForStatusByInternalName("COMPLETED", "TFR");
          var CANCELLED_STATUS = configuration.getExternalNameForStatusByInternalName("CANCELLED","TFR");
          var CANCELLED_STATUS_PRNR = configuration.getExternalNameForStatusByInternalName("CANCELLED","PRNR");

          // ------------------- Start validation ------------------------

          // check if TFR is completed and active
          if( this.model.tfrStatus != COMPLETED_STATUS ){
              debugPrintln("TFR has to be complete, active, not cancelled and not Disconnect. Disconnect is impossible.");
              Global.throwException("AE0020", ["TFR has to be complete and active. Disconnect is impossible."]);
          }
          debugPrintln("TFR completed and active.");

          // verify that there aren’t TFRs in which the attribute “DISCONNECTED TFR” is set with the id of the current TFR
          var discFinder = new Finder("tfs.findTFRWithDisconnectedTFRIdByTFRId");
          discFinder.searchDocument.tfrId = this.model.tfrId;
          var resultList = discFinder.search();

          // if there are such TFRs
          // these should have internal status = “CANCELLED”; if not, the user cannot execute the action
          if( resultList.length ){ // if there is already disconnected TFRs
              debugPrintln( "Found " + resultList.length + " already disconnected TFRs. Checking internal statuses..." );
              for( var i=0; i < resultList.length; i++ ){ // check internal statuses
                  var currentTFR = resultList[i];
                  debugPrintln("TFR status:"+currentTFR.tfrStatus);
                  if( currentTFR.tfrStatus != CANCELLED_STATUS ){ // if found TFR is not in "CANCELLED" status
                      debugPrintln("Non-cancelled Disconnect TFR exists. Disconnect is impossible.");
                      Global.throwException("AE0020", ["Non-cancelled Disconnect TFR exists. Disconnect is impossible."]); // throw an exception and break execution
                  }
              }
          }
          debugPrintln("TFR is not disconnected or Disconnect order has been cancelled.");

          // check there are no rehoming processes running for current TFR
          // for this verify that there aren’t TFRs in which the attribute “CONNECTION TFR” is set with the id of the current TFR
          var conFinder = new Finder("tfs.findTFRWithConnectionTFRIdByTFRId");
          conFinder.searchDocument.tfrId = this.model.tfrId;
          var resultList = conFinder.search();

          if( resultList.length ){ // if there are TFRs with connection_tfr_id attribute equals to current tfr id
               // found TFR has to be completed or cancelled
              for( var i=0; i < resultList.length; i++){
                  var currentRehomeTFR = resultList[i];
                  if( currentRehomeTFR.tfrStatus == CANCELLED_STATUS ){ // if found TFR is cancelled, proceed with validation
                      debugPrintln("Cancelled Rehome TFR found:"+currentRehomeTFR.tfrId+". Proceed with validation.");
                  }
                  else if( currentRehomeTFR.tfrStatus == COMPLETED_STATUS ){ // if found TFR has status completed
                      // additional check required
                      // need to verify that found rehome TFR has been already successfully rehomed
                      // in this case, found TFR will be the older one and operation could be performed for current TFR
                      // in case Disconnect TFR was cancelled or is still executing, rehome could not be requested for such TFR
                      // To verify this it is needed to check if it has been disconnected successfully
                      var isDisconnected = tfs.isTFRDisconnected(currentRehomeTFR.tfrId); // check if found TFR was disconnected successfully
                      if( !isDisconnected ){ // if not, forbid the execution
                          debugPrintln("Non-cancelled, non-disconnected rehome revision of current TFR exist. Newer tfr id:"+currentRehomeTFR.connectionTFRId+". Disconnect is impossible.");
                          Global.throwException("AE0020", ["Non-cancelled, non-disconnected rehome revision of current TFR exist. Revision id:"+currentRehomeTFR.connectionTFRId+". Disconnect is impossible"]); // throw an exception and break execution
                      }
                      // if is disconnected proceed with validation

                  }
                  else {// if found TFR is not cancelled and not completed
                      debugPrintln("Rehome TFR exist. Rehome is impossible.");
                      Global.throwException("AE0020", ["Rehome TFR exists. Rehome is impossible."]); // throw an exception and break execution
                  }
              }
          }
          debugPrintln("TFR is not rehomed.");

          // check if there are no change processes running or completed for it
          // If change process has been started for tfr, its id stored in start PRNR document in changedTFRId attribute
          // to pass validation need to confirm that there is no prnr with id value of current TFR at changedTFRId attr
          // or if such one exists it is not cancelled

          var prnrFinder = new Finder("tfs.findPRNRByChangeTFRId");
          prnrFinder.searchDocument.cwDocID = this.model.tfrId;
          var resultList = prnrFinder.search();
          debugPrintln(resultList.length+" Change PRNRs found.");

          for(var i=0; i<resultList.length; i++){
              var currentPRNR = resultList[i];
              if( currentPRNR.prnrStatus != CANCELLED_STATUS_PRNR ){
                  debugPrintln("Non-Cancelled Change PRNR found. Disconnect is impossible.");
                  Global.throwException("AE0020", ["Non-Cancelled Change PRNR found. Disconnect is impossible."]); // break execution, and warn user
              }
              else{
                  debugPrintln("Cancelled Change PRNR found. Continue validation.");
              }
          }

          // if change was started with current tfr order id
          // do additional check
          var changeProcessList = workflow.findProcessesByType(this.model.cwOrderId, "workflow.changeOrderProcess"); // search change process with current order id
          debugPrintln(changeProcessList.length+" Change process found for order:"+this.model.cwOrderId);

          if( changeProcessList.length ){ // if change process was found
              // check if this processes was cancelled
              for(var i=0; i<changeProcessList.length; i++){
                  var currentProcess = Process.getProcessInfo(changeProcessList[i]);
                  for( var j=0; j<resultList.length; j++){
                      var currentPRNR = resultList[j];
                      var changedTFR = Document.readDoc("tfs.tfr", currentPRNR.changedTFRId);
                      if( changedTFR.cwOrderId == currentProcess.processOrder.id ){ // if current change PRNR was started for TFR with the same order as found Change process
                          if( currentPRNR.prnrStatus != CANCELLED_STATUS_PRNR ){ // and if current prnr is not cancelled
                                 debugPrintln("Running or Completed Change process found. Disconnect is impossible.");
                                 Global.throwException("AE0020", ["Running or Completed Change process found. Disconnect is impossible."]); // break execution, and warn user
                          }
                          else{ // if change process for current PRNR was cancelled
                              debugPrintln("Cancelled Change PRNR found. Continue validation."); // continue validation
                          }
                      }
                  }
              }
          }

          debugPrintln("No Cahnge Order process is runninng or completed.");

          // check if there are no rehoming processes running for it
          if( this.model.connectionTFRId ) { // if Rehome has been started for this process
              // check if this process is still running
              var rehomeTFR = Document.readDoc("tfs.tfr", this.model.connectionTFRId);
              var resultList = workflow.findRunningProcessesByType(rehomeTFR.cwOrderId, "workflow.rehomingOrderProcess");

              if ( resultList.length ){
                  debugPrintln("Running Rehome process found. Disconnect is impossible.");
                  Global.throwException("AE0020", ["Running Rehome process found. Disconnect is impossible."]); // break execution, and warn user
              }
          }
          debugPrintln("No Rehoming process running. Disconnect action validation done.");

          // --------------------- End validation ----------------------------------


          /*****
          var sem = theAVM.getSemaphore("TFRNumberLock");
          if(!sem){
           sem = theAVM.setSemaphore("TFRNumberLock",0);
          }
          while( sem > 0){
            sem = theAVM.getSemaphore("TFRNumberLock");
          }
          theAVM.setSemaphore("TFRNumberLock",0,1);

          ****/

          var disconnectOrder = new Order("tfs.tfsOrder");


          var tfrToDisconnect = Document.readDoc("tfs.tfr", this.model.tfrId);
          tfrToDisconnect.mapTo(disconnectOrder, "tfs.mapTFRtoDisconnectTFROrder"); // map current TFR to disconnect tfsOrder
          disconnectOrder.tfrDocument.disconnectedTFRId = this.model.tfrId;
          disconnectOrder.tfrDocument.tfrStatus = configuration.getExternalNameForStatusByInternalName("SUBMIT", "TFR");
          disconnectOrder.tfrDocument.creationDate = new Date();
          disconnectOrder.tfrDocument.tfrYear = Calendar.formatDate(disconnectOrder.tfrDocument.creationDate, "yyyy");
          disconnectOrder.tfrDocument.tfrMonth = Calendar.formatDate(disconnectOrder.tfrDocument.creationDate, "MM");
          disconnectOrder.tfrDocument.existing = tfrToDisconnect.existing + tfrToDisconnect.required;
          disconnectOrder.tfrDocument.generateTFRNumber();
          disconnectOrder.save();

          workflow.setUserInUsersForOrder(disconnectOrder.id, "0", "OrderInitiator", Global.getUserId()); // set current user for disconnect process
          disconnectOrder.tfrDocument.createdBy = workflow.getUserForOrder(disconnectOrder.id, "0", "OrderInitiator"); // set created by
          disconnectOrder.save();

          // theAVM.setSemaphore("TFRNumberLock",1,0);

          var disconnectProcessId = Process.startProcess("workflow.disconnectOrderProcess", disconnectOrder.id);

          Global.showUserMessage("Disconnect process started successfully");

          debugPrintln("Disconnect order started. Process Id:" + disconnectProcessId);
        ]]></script>
      </method>
      <method name="disconnectTFRIsVisible" type="permMethod">
        <privilegesList>
          <privileges type="ppriv">
            <privilege>STC_IOrdInitPriv</privilege>
          </privileges>
        </privilegesList>
        <privilegesType>SOME</privilegesType>
        <script><![CDATA[
          // hide disconnect action for Disconnect TFR
          var COMPLETED_STATUS = configuration.getExternalNameForStatusByInternalName("COMPLETED", "TFR");
          var CANCELLED_STATUS = configuration.getExternalNameForStatusByInternalName("CANCELLED","TFR");
          var CANCELLED_STATUS_PRNR = configuration.getExternalNameForStatusByInternalName("CANCELLED","PRNR");

          if( this.model.tfrStatus != COMPLETED_STATUS ){
              return false;
          }


          // ------------------- Start validation ------------------------

          // verify that there aren’t TFRs in which the attribute “DISCONNECTED TFR” is set with the id of the current TFR
          var discFinder = new Finder("tfs.findTFRWithDisconnectedTFRIdByTFRId");
          discFinder.searchDocument.tfrId = this.model.tfrId;
          var resultList = discFinder.search();

          // if there are such TFRs
          // these should have internal status = “CANCELLED”; if not, the user cannot execute the action
          if( resultList.length ){ // if there is already disconnected TFRs
              debugPrintln( "Found " + resultList.length + " already disconnected TFRs. Checking internal statuses..." );
              for( var i=0; i < resultList.length; i++ ){ // check internal statuses
                  var currentTFR = resultList[i];
                  debugPrintln("TFR status:"+currentTFR.tfrStatus);
                  if( currentTFR.tfrStatus != CANCELLED_STATUS ){ // if found TFR is not in "CANCELLED" status
                      debugPrintln("Non-cancelled Disconnect TFR exists. Disconnect is impossible.");
                      return false;
                  }
              }
          }
          debugPrintln("TFR is not disconnected or Disconnect order has been cancelled.");

          // check there are no rehoming processes running for current TFR
          // for this verify that there aren’t TFRs in which the attribute “CONNECTION TFR” is set with the id of the current TFR
          var conFinder = new Finder("tfs.findTFRWithConnectionTFRIdByTFRId");
          conFinder.searchDocument.tfrId = this.model.tfrId;
          var resultList = conFinder.search();

          if( resultList.length ){ // if there are TFRs with connection_tfr_id attribute equals to current tfr id
               // found TFR has to be completed or cancelled
              for( var i=0; i < resultList.length; i++){
                  var currentRehomeTFR = resultList[i];
                  if( currentRehomeTFR.tfrStatus == CANCELLED_STATUS ){ // if found TFR is cancelled, proceed with validation
                      debugPrintln("Cancelled Rehome TFR found:"+currentRehomeTFR.tfrId+". Proceed with validation.");
                  }
                  else if( currentRehomeTFR.tfrStatus == COMPLETED_STATUS ){ // if found TFR has status completed
                      // additional check required
                      // need to verify that found rehome TFR has been already successfully rehomed
                      // in this case, found TFR will be the older one and operation could be performed for current TFR
                      // in case Disconnect TFR was cancelled or is still executing, rehome could not be requested for such TFR
                      // To verify this it is needed to check if it has been disconnected successfully
                      var isDisconnected = tfs.isTFRDisconnected(currentRehomeTFR.tfrId); // check if found TFR was disconnected successfully
                      if( !isDisconnected ){ // if not, forbid the execution
                          debugPrintln("Non-cancelled, non-disconnected rehome revision of current TFR exist. Newer tfr id:"+currentRehomeTFR.connectionTFRId+". Disconnect is impossible.");
                          return false;
                      }
                      // if is disconnected proceed with validation

                  }
                  else {// if found TFR is not cancelled and not completed
                      debugPrintln("Rehome TFR exist. Rehome is impossible.");
                      return false;
                  }
              }
          }
          debugPrintln("TFR is not rehomed.");

          // check if there are no change processes running or completed for it
          // If change process has been started for tfr, its id stored in start PRNR document in changedTFRId attribute
          // to pass validation need to confirm that there is no prnr with id value of current TFR at changedTFRId attr
          // or if such one exists it is not cancelled

          var prnrFinder = new Finder("tfs.findPRNRByChangeTFRId");
          prnrFinder.searchDocument.cwDocID = this.model.tfrId;
          var resultList = prnrFinder.search();
          debugPrintln(resultList.length+" Change PRNRs found.");

          for(var i=0; i<resultList.length; i++){
              var currentPRNR = resultList[i];
              if( currentPRNR.prnrStatus != CANCELLED_STATUS_PRNR ){
                  debugPrintln("Non-Cancelled Change PRNR found. Disconnect is impossible.");
                  return false;
              }
              else{
                  debugPrintln("Cancelled Change PRNR found. Continue validation.");
              }
          }

          // if change was started with current tfr order id
          // do additional check
          var changeProcessList = workflow.findProcessesByType(this.model.cwOrderId, "workflow.changeOrderProcess"); // search change process with current order id
          debugPrintln(changeProcessList.length+" Change process found for order:"+this.model.cwOrderId);

          if( changeProcessList.length ){ // if change process was found
              // check if this processes was cancelled
              for(var i=0; i<changeProcessList.length; i++){
                  var currentProcess = Process.getProcessInfo(changeProcessList[i]);
                  for( var j=0; j<resultList.length; j++){
                      var currentPRNR = resultList[j];
                      var changedTFR = Document.readDoc("tfs.tfr", currentPRNR.changedTFRId);
                      if( changedTFR.cwOrderId == currentProcess.processOrder.id ){ // if current change PRNR was started for TFR with the same order as found Change process
                          if( currentPRNR.prnrStatus != CANCELLED_STATUS_PRNR ){ // and if current prnr is not cancelled
                                 debugPrintln("Running or Completed Change process found. Disconnect is impossible.");
                                return false;
                          }
                          else{ // if change process for current PRNR was cancelled
                              debugPrintln("Cancelled Change PRNR found. Continue validation."); // continue validation
                          }
                      }
                  }
              }
          }

          debugPrintln("No Cahnge Order process is runninng or completed.");

          // check if there are no rehoming processes running for it
          if( this.model.connectionTFRId ) { // if Rehome has been started for this process
              // check if this process is still running
              var rehomeTFR = Document.readDoc("tfs.tfr", this.model.connectionTFRId);
              var resultList = workflow.findRunningProcessesByType(rehomeTFR.cwOrderId, "workflow.rehomingOrderProcess");

              if ( resultList.length ){
                  debugPrintln("Running Rehome process found. Disconnect is impossible.");
                  return false;
              }
          }
          debugPrintln("No Rehoming process running. Disconnect action validation done.");

          return $psCondition && this.model.disconnectedTFRId == null;
        ]]></script>
      </method>
      <method name="rehomeTFR" type="usrActionMethod">
        <confirmation>doc_tfs.tfr/ui_UserInterface/uimthd_rehomeTFRConfirmation</confirmation>
        <validate>true</validate>
        <script><![CDATA[
          debugPrintln("Rehome TFR("+ this.model.tfrId +") requested.");
          debugPrintln("Rehome action validation started.");

          var COMPLETED_STATUS = configuration.getExternalNameForStatusByInternalName("COMPLETED", "TFR");
          var CANCELLED_STATUS = configuration.getExternalNameForStatusByInternalName("CANCELLED","TFR");
          var CANCELLED_STATUS_PRNR = configuration.getExternalNameForStatusByInternalName("CANCELLED","PRNR");

          // --------------------- Validation start --------------------------------------
          // check that TFR is completed and active and has not been cancelled
          if( this.model.tfrStatus != COMPLETED_STATUS ){
              debugPrintln("TFR has to be completed and active. Rehome is impossible.");
              Global.throwException("AE0020", ["TFR has to be completed and active. Rehome is impossible."]);
          }
          debugPrintln("TFR completed and active.");

          // check if TFR is not disconnected
          // verify that there aren’t TFRs in which the attribute “DISCONNECTED_TFR_ID” is set with the id of the current TFR
          var discFinder = new Finder("tfs.findTFRWithDisconnectedTFRIdByTFRId");
          discFinder.searchDocument.tfrId = this.model.tfrId;
          var resultList = discFinder.search();

          // if there are such TFRs
          // these should have internal status = “CANCELLED”; if not, the user cannot execute the action
          // Assumed that this check also verifies that there is no runninng Disconnect processes for this TFR
          // In case it is runnning, the status will be different from CANCELLED so validation will no pass
          if( resultList.length ){ // if there is already disconnected TFRs
              debugPrintln( "Found " + resultList.length + " already disconnected TFR's. Check internal statuses..." );
              for( var i=0; i < resultList.length; i++ ){ // check internal statuses
                  var currentTFR = resultList[i];
                  debugPrintln("TFR status:"+currentTFR.tfrStatus);
                  if( currentTFR.tfrStatus != CANCELLED_STATUS ){ // if found TFR is not in "CANCELLED" status
                      debugPrintln("Non-Cancelled Disconnect TFR exists. Rehome is impossible.");
                      Global.throwException("AE0020", ["Non-Cancelled Disconnect TFR exists. Rehome is impossible."]); // throw an exception and break execution
                  }
              }
          }
          debugPrintln("TFR is not disconnected or Disconnect order has been cancelled.");

          // check there are no rehoming processes running for current TFR
          // for this verify that there aren’t TFRs in which the attribute “CONNECTION TFR” is set with the id of the current TFR
          var conFinder = new Finder("tfs.findTFRWithConnectionTFRIdByTFRId");
          conFinder.searchDocument.tfrId = this.model.tfrId;
          var resultList = conFinder.search();

          if( resultList.length ){ // if there are TFRs with connection_tfr_id attribute equals to current tfr id
               // found TFR has to be completed or cancelled
              for( var i=0; i < resultList.length; i++){
                  var currentRehomeTFR = resultList[i];
                  if( currentRehomeTFR.tfrStatus == CANCELLED_STATUS ){ // if found TFR is cancelled, proceed with validation
                      debugPrintln("Cancelled Rehome TFR found:"+currentRehomeTFR.tfrId+". Proceed with validation.");
                  }
                  else if( currentRehomeTFR.tfrStatus == COMPLETED_STATUS ){ // if found TFR has status completed
                      // additional check required
                      // need to verify that found rehome TFR has been already successfully rehomed
                      // in this case, found TFR will be the older one and operation could be performed for current TFR
                      // in case Disconnect TFR was cancelled or is still executing, rehome could not be requested for such TFR
                      // To verify this it is needed to check if it has been disconnected successfully
                      var isDisconnected = tfs.isTFRDisconnected(currentRehomeTFR.tfrId); // check if found TFR was disconnected successfully
                      if( !isDisconnected ){ // if not, forbid the execution
                          debugPrintln("Non-cancelled, non-disconnected rehome revision of current TFR exist. Newer tfr id:"+currentRehomeTFR.connectionTFRId+". Rehome is impossible.");
                          Global.throwException("AE0020", ["Non-cancelled, non-disconnected rehome revision of current TFR exist. Revision id:"+currentRehomeTFR.connectionTFRId+". Rehome is impossible"]); // throw an exception and break execution
                      }
                      // if is disconnected proceed with validation

                  }
                  else {// if found TFR is not cancelled and not completed
                      debugPrintln("Rehome TFR exist. Rehome is impossible.");
                      Global.throwException("AE0020", ["Rehome TFR exists. Rehome is impossible."]); // throw an exception and break execution
                  }
              }
          }
          debugPrintln("TFR is not rehomed.");

          // check if there are no change processes running or completed for it
          // If change process has been started for tfr, its id stored in start PRNR document in changedTFRId attribute
          // to pass validation need to confirm that there is no prnr with id value of current TFR at changedTFRId attr

          var prnrFinder = new Finder("tfs.findPRNRByChangeTFRId");
          prnrFinder.searchDocument.cwDocID = this.model.tfrId;
          var resultList = prnrFinder.search();
          debugPrintln(resultList.length+" Change PRNRs found.");

          for(var i=0; i<resultList.length; i++){
              var currentPRNR = resultList[i];
              if( currentPRNR.prnrStatus != CANCELLED_STATUS_PRNR ){
                  debugPrintln("Non-Cancelled Change PRNR found. Disconnect is impossible.");
                  Global.throwException("AE0020", ["Non-Cancelled Change PRNR found. Disconnect is impossible."]); // break execution, and warn user
              }
              else{
                  debugPrintln("Cancelled Change PRNR found. Continue validation.");
              }
          }

          // if change was started with current tfr order id
          // do additional check
          var changeProcessList = workflow.findProcessesByType(this.model.cwOrderId, "workflow.changeOrderProcess"); // search change process with current order id
          debugPrintln(changeProcessList.length+" Change process found for order:"+this.model.cwOrderId);

          if( changeProcessList.length ){ // if change process was found
              // check if this processes was cancelled
              for(var i=0; i<changeProcessList.length; i++){
                  var currentProcess = Process.getProcessInfo(changeProcessList[i]);
                  for( var j=0; j<resultList.length; j++){
                      var currentPRNR = resultList[j];
                      var changedTFR = Document.readDoc("tfs.tfr", currentPRNR.changedTFRId);
                      if( changedTFR.cwOrderId == currentProcess.processOrder.id ){ // if current change PRNR was started for TFR with the same order as found Change process
                          if( currentPRNR.prnrStatus != CANCELLED_STATUS_PRNR ){ // and if current prnr is not cancelled
                                 debugPrintln("Running or Completed Change process found. Disconnect is impossible.");
                                 Global.throwException("AE0020", ["Running or Completed Change process found. Disconnect is impossible."]); // break execution, and warn user
                          }
                          else{ // if change process for current PRNR was cancelled
                              debugPrintln("Cancelled Change PRNR found. Continue validation."); // continue validation
                          }
                      }
                  }
              }
          }

          debugPrintln("No Cahnge Order process is runninng. Rehome validation done.");

          //--------------------- Validation end -------------------------------

          var currentOrder = Order.getOrderById(this.model.cwOrderId);
          // reset changedTFRId field for PRNR if exists
          if( currentOrder.prnrDocument ){
              currentOrder.prnrDocument.changedTFRId = null;
          }
          currentOrder.tfrDocument.currentUserId = Global.getUserId();
          currentOrder.tfrDocument.currentUserDepartment = up_priv.getDepartmentByUserId(Global.getUserId());
          currentOrder.save();
          debugPrintln("Current TFR user:"+currentOrder.tfrDocument.currentUserId);
          var processId = Process.startProcess("workflow.rehomingOrderProcess", currentOrder.id);

          Global.showUserMessage("Rehome process started successfully");

          debugPrintln("Rehoming order process started. Process Id:" + processId);
        ]]></script>
      </method>
      <method name="rehomeTFRIsVisible" type="permMethod">
        <privilegesList>
          <privileges type="ppriv">
            <privilege>STC_IOrdInitPriv</privilege>
          </privileges>
        </privilegesList>
        <privilegesType>SOME</privilegesType>
        <script><![CDATA[
          var COMPLETED_STATUS = configuration.getExternalNameForStatusByInternalName("COMPLETED", "TFR");
          var CANCELLED_STATUS = configuration.getExternalNameForStatusByInternalName("CANCELLED","TFR");
          var CANCELLED_STATUS_PRNR = configuration.getExternalNameForStatusByInternalName("CANCELLED","PRNR");

          // --------------------- Validation start --------------------------------------
          // check that TFR is completed and active and has not been cancelled
          if( this.model.tfrStatus != COMPLETED_STATUS ){
              return false;
          }

          // check if TFR is not disconnected
          // verify that there aren’t TFRs in which the attribute “DISCONNECTED_TFR_ID” is set with the id of the current TFR
          var discFinder = new Finder("tfs.findTFRWithDisconnectedTFRIdByTFRId");
          discFinder.searchDocument.tfrId = this.model.tfrId;
          var resultList = discFinder.search();

          // if there are such TFRs
          // these should have internal status = “CANCELLED”; if not, the user cannot execute the action
          // Assumed that this check also verifies that there is no runninng Disconnect processes for this TFR
          // In case it is runnning, the status will be different from CANCELLED so validation will no pass
          if( resultList.length ){ // if there is already disconnected TFRs
              debugPrintln( "Found " + resultList.length + " already disconnected TFR's. Check internal statuses..." );
              for( var i=0; i < resultList.length; i++ ){ // check internal statuses
                  var currentTFR = resultList[i];
                  debugPrintln("TFR status:"+currentTFR.tfrStatus);
                  if( currentTFR.tfrStatus != CANCELLED_STATUS ){ // if found TFR is not in "CANCELLED" status
                      debugPrintln("Non-Cancelled Disconnect TFR exists. Rehome is impossible.");
                      return false;
                  }
              }
          }
          debugPrintln("TFR is not disconnected or Disconnect order has been cancelled.");

          // check there are no rehoming processes running for current TFR
          // for this verify that there aren’t TFRs in which the attribute “CONNECTION TFR” is set with the id of the current TFR
          var conFinder = new Finder("tfs.findTFRWithConnectionTFRIdByTFRId");
          conFinder.searchDocument.tfrId = this.model.tfrId;
          var resultList = conFinder.search();

          if( resultList.length ){ // if there are TFRs with connection_tfr_id attribute equals to current tfr id
               // found TFR has to be completed or cancelled
              for( var i=0; i < resultList.length; i++){
                  var currentRehomeTFR = resultList[i];
                  if( currentRehomeTFR.tfrStatus == CANCELLED_STATUS ){ // if found TFR is cancelled, proceed with validation
                      debugPrintln("Cancelled Rehome TFR found:"+currentRehomeTFR.tfrId+". Proceed with validation.");
                  }
                  else if( currentRehomeTFR.tfrStatus == COMPLETED_STATUS ){ // if found TFR has status completed
                      // additional check required
                      // need to verify that found rehome TFR has been already successfully rehomed
                      // in this case, found TFR will be the older one and operation could be performed for current TFR
                      // in case Disconnect TFR was cancelled or is still executing, rehome could not be requested for such TFR
                      // To verify this it is needed to check if it has been disconnected successfully
                      var isDisconnected = tfs.isTFRDisconnected(currentRehomeTFR.tfrId); // check if found TFR was disconnected successfully
                      if( !isDisconnected ){ // if not, forbid the execution
                          debugPrintln("Non-cancelled, non-disconnected rehome revision of current TFR exist. Newer tfr id:"+currentRehomeTFR.connectionTFRId+". Rehome is impossible.");
                         return false;
                      }
                      // if is disconnected proceed with validation

                  }
                  else {// if found TFR is not cancelled and not completed
                      debugPrintln("Rehome TFR exist. Rehome is impossible.");
                      return false;
                  }
              }
          }
          debugPrintln("TFR is not rehomed.");

          // check if there are no change processes running or completed for it
          // If change process has been started for tfr, its id stored in start PRNR document in changedTFRId attribute
          // to pass validation need to confirm that there is no prnr with id value of current TFR at changedTFRId attr

          var prnrFinder = new Finder("tfs.findPRNRByChangeTFRId");
          prnrFinder.searchDocument.cwDocID = this.model.tfrId;
          var resultList = prnrFinder.search();
          debugPrintln(resultList.length+" Change PRNRs found.");

          for(var i=0; i<resultList.length; i++){
              var currentPRNR = resultList[i];
              if( currentPRNR.prnrStatus != CANCELLED_STATUS_PRNR ){
                  debugPrintln("Non-Cancelled Change PRNR found. Disconnect is impossible.");
                  return false;
              }
              else{
                  debugPrintln("Cancelled Change PRNR found. Continue validation.");
              }
          }

          // if change was started with current tfr order id
          // do additional check
          var changeProcessList = workflow.findProcessesByType(this.model.cwOrderId, "workflow.changeOrderProcess"); // search change process with current order id
          debugPrintln(changeProcessList.length+" Change process found for order:"+this.model.cwOrderId);

          if( changeProcessList.length ){ // if change process was found
              // check if this processes was cancelled
              for(var i=0; i<changeProcessList.length; i++){
                  var currentProcess = Process.getProcessInfo(changeProcessList[i]);
                  for( var j=0; j<resultList.length; j++){
                      var currentPRNR = resultList[j];
                      var changedTFR = Document.readDoc("tfs.tfr", currentPRNR.changedTFRId);
                      if( changedTFR.cwOrderId == currentProcess.processOrder.id ){ // if current change PRNR was started for TFR with the same order as found Change process
                          if( currentPRNR.prnrStatus != CANCELLED_STATUS_PRNR ){ // and if current prnr is not cancelled
                                 debugPrintln("Running or Completed Change process found. Disconnect is impossible.");
                                 return false;
                          }
                          else{ // if change process for current PRNR was cancelled
                              debugPrintln("Cancelled Change PRNR found. Continue validation."); // continue validation
                          }
                      }
                  }
              }
          }

          debugPrintln("No Cahnge Order process is runninng. Rehome validation done.");

          //--------------------- Validation end -------------------------------



          // hide button for Disconnect TFR
          return $psCondition && this.model.disconnectedTFRId == null;
        ]]></script>
      </method>
      <method name="cancelDisconnecTFRIsVisible" type="permMethod">
        <privilegesList>
          <privileges type="ppriv">
            <privilege>STC_IOrdInitPriv</privilege>
          </privileges>
        </privilegesList>
        <privilegesType>SOME</privilegesType>
        <script><![CDATA[
          if(this.model.disconnectedTFRId == null){ // if current TFR is not disconnect
              return false; // hide the button
          }

          var runningDisconnect = workflow.findRunningProcessesByType(this.model.cwOrderId, "workflow.disconnectOrderProcess");

          // if there is no running Disconnect process for order
          if( !Boolean(runningDisconnect.length) ){
              return false; // hide cancell disconnect
          }

          // cancel disconnect could not be requested for Disconnect started from Rehome process
          var isRehomed = tfs.isDisconnectedTFRRehomed(this.model.tfrId);
          if(isRehomed){ // check if current tfr is from Rehome Disconnect TFR
              return false; // hide operation
          }


          var resList = workflow.findRunningProcessesByType(this.model.cwOrderId, "workflow.cancelDisconnectOrderProcess");
          if(resList && resList.length > 0){
              return false;
          }

          // Cancel can be requested only before TFR is in charge to Quality Team
          var qualityUserForOrder = workflow.getUserForOrder(this.model.cwOrderId, "0", "Quality"); // check if TFR aleready assigned to Quality team
          debugPrintln("Order.id:" + this.model.cwOrderId + "; orderItemId:" + 0 + "; quality user for order:" + qualityUserForOrder);
          if(qualityUserForOrder){ // if Quality user already asigned to TFR, skip order cancelling
              return false;
          }


          return $psCondition;
          //return $psCondition && (this.model.disconnectedTFRId!=null);
          //return ($psCondition && (this.model.disconnectedTFRId!=null) && (this.model.tfrStatus != COMPLETE_STATUS) && (this.model.tfrStatus != CANCELLED_STATUS) );
        ]]></script>
      </method>
      <method name="cancelDisconnectTFR" type="usrActionMethod">
        <confirmation>doc_tfs.tfr/ui_UserInterface/uimthd_cancelDisconnectConfirmation</confirmation>
        <validate>true</validate>
        <script><![CDATA[
          // start Cancel Disconnect TFR Process
          debugPrintln("Cancel Disconnect order requested...");

          var resList = workflow.findRunningProcessesByType(this.model.cwOrderId, "workflow.cancelDisconnectOrderProcess");
          if(resList && resList.length > 0){
            Global.throwException("AE0023");
          }
          debugPrintln("No Cancell Disconnect process are running.");

          // Cancel can be requested only before TFR is in charge to Quality Team
          var qualityUserForOrder = workflow.getUserForOrder(this.model.cwOrderId, "0", "Quality"); // check if TFR aleready assigned to Quality team
          debugPrintln("Order.id:" + this.model.cwOrderId + "; orderItemId:" + 0 + "; quality user for order:" + qualityUserForOrder);
          if(qualityUserForOrder){ // if Quality user already asigned to TFR, skip order cancelling
              Global.throwException("AE0019");
          }
          debugPrintln("TFR is not in charge to Quality team.");

          var procId = Process.startProcess("workflow.cancelDisconnectOrderProcess", this.model.cwOrderId);

          Global.showUserMessage("Cancel Disconnect process started successfully");

          debugPrintln("Cancell Disconnect Order process started with id:"+procId);
        ]]></script>
      </method>
      <method name="changeTFR" type="usrActionMethod">
        <confirmation>doc_tfs.tfr/ui_UserInterface/uimthd_changeConfirmation</confirmation>
        <script><![CDATA[
          debugPrintln("Change TFR request started!");

          workflow.setUserInUsersForOrder(this.model.cwOrderId, "0", "OrderInitiator", Global.getUserId()); // set current user for change process

          //pending or completed, not cancelled, not disconnected, not rehomed
          var statusComplete = configuration.getExternalNameForStatusByInternalName("COMPLETED", "TFR");
          var statusCancelled = configuration.getExternalNameForStatusByInternalName("CANCELLED", "TFR");
          var statusRehomed = configuration.getExternalNameForStatusByInternalName("REHOMED", "TFR");
          var statusDisconnected = configuration.getExternalNameForStatusByInternalName("DISCONNECTED", "TFR");
          var statusAutoAccepted = configuration.getExternalNameForStatusByInternalName("AUTOMATICALLY ACCEPTED", "TFR");

          var changeOrder = Order.getOrderById(this.model.cwOrderId);

          var tfr = Document.readDoc("tfs.tfr", this.model.tfrId);
          var prn = Document.readDoc("tfs.prn", this.model.prnId);
          if(!prn){
              prn = Document.readDoc("tfs.prn", tfr.prnId);
          }
          var prnr = Document.readDoc("tfs.prnr", prn.prnrId);

          if(tfr.tfrStatus == statusDisconnected || tfr.tfrStatus == statusRehomed || tfr.tfrStatus == statusCancelled){
              Global.throwException("AE0021", "Change is impossible for TFR in "+tfr.tfrStatus+" status");
          }

          // check if TFR is not disconnected
          // verify that there are no TFRs in which the attribute “DISCONNECTED TFR” is set with the id of the current TFR
          var discFinder = new Finder("tfs.findTFRWithDisconnectedTFRIdByTFRId");
          discFinder.searchDocument.tfrId = this.model.tfrId;
          var resultList = discFinder.search();

          // if there are such TFRs
          // these should have internal status = “CANCELLED”; if not, the user cannot execute the action
          // Assumed that this check also verifies that there is no runninng Disconnect processes for this TFR
          // In case it is runnning, the status will be different from CANCELLED so validation will no pass
          if( resultList.length ){ // if there is already disconnected TFRs
              debugPrintln( "Found " + resultList.length + " already disconnected TFR's. Check internal statuses..." );
              for( var i=0; i < resultList.length; i++ ){ // check internal statuses
                  var currentTFR = resultList[i];
                  debugPrintln("TFR status:"+currentTFR.tfrStatus);
                  if( currentTFR.tfrStatus != configuration.getExternalNameForStatusByInternalName("CANCELLED","TFR") ){ // if found TFR is not in "CANCELLED" status
                      Global.throwException("AE0020", ["Non cancelled Disconnected TFR exists. Change is impossible."]); // throw an exception and break execution
                      //debugPrintln("Non cancelled Disconnected TFR exists. Rehome is impossible.");
                  }
              }
          }
          debugPrintln("TFR is not disconnected or Disconnect order has been cancelled.");

          if(tfr && tfr.connectionTFRId && tfr.disconnectedTFRId){
              Global.throwException("AE0021", "Change is impossible for TFR in "+statusRehomed+" status");
          }


          /**
           *
           * Identify the way how to start change process
           */

          if(!tfr.revision){
              tfr.revision = 1;
          }

          //Fix TFR number if needed
          var rev = tfs.findLastChangeRevision(tfr);
          var revPRNR = tfs.findLastChangeRevisionPRNR(prnr);

          if(tfr.revision < rev){
              debugPrintln("Revision mismatch : Current:"+tfr.revision+" Found: "+rev);
              tfr.revision = rev;
          }

          if(revPRNR > tfr.revision){
              tfr.revision = revPRNR;
          };

          tfr.save();

          if((tfr.tfrStatus == statusComplete) || (tfr.tfrStatus == statusAutoAccepted)){
              if(!tfs.isChangeAvailable(tfr)){
                  Global.throwException("AE0021", "Can not start change process");
                  return;
              }
              changeOrder = new Order('tfs.tfsOrder');
              workflow.setUserInUsersForOrder(changeOrder.id, "0", "OrderInitiator", Global.getUserId());
              var  prnrDocument = prnr.copyDocument(false, false);
              prnrDocument.cwOnDocInit(); // This will get a new ID for the document and set status to NEW
              prnrDocument.prnrName = workflow.getNewRevisionName(prnr.prnrName, tfr.revision + 1);
              prnrDocument.changedTFRId = tfr.tfrId;
              changeOrder.prnrDocument = prnrDocument;

          }
          else {
              //workflow.setUserInUsersForOrder(changeOrder.id, "0", "Control", workflow.getUserForOrder(changeOrder.id, "0", "Control"));
              //var newChangeOrder = changeOrder.copyOrder(false,false); //Older variant
              var newChangeOrder = new Order('tfs.tfsOrder');
              newChangeOrder.prnrDocument = prnr.copyDocument(false, false);
              newChangeOrder.prnDocument = prn.copyDocument(false, false);
              newChangeOrder.tfrDocument = tfr.copyDocument(false, false);
              //workflow.setUserInUsersForOrder(changeOrder.id, "0", "OrderInitiator", workflow.getUserForOrder(changeOrder.id, "0", "OrderInitiator"));
              newChangeOrder.createOrderItemByPath("tasks");
              workflow.setUserInUsersForOrder(newChangeOrder.id, "0", "OrderInitiator", workflow.getUserForOrder(changeOrder.id, "0", "OrderInitiator"));

              //Next revision
              //tfr.revision += 1;
              newChangeOrder.tfrDocument.revision = tfr.revision + 1;

              newChangeOrder.prnrDocument.prnrName = workflow.getNewRevisionName(newChangeOrder.prnrDocument.prnrName, newChangeOrder.tfrDocument.revision);
              newChangeOrder.prnDocument.prnName = workflow.getNewRevisionName(newChangeOrder.prnDocument.prnName, newChangeOrder.tfrDocument.revision);
              newChangeOrder.tfrDocument.tfrNumber = workflow.getNewRevisionName(newChangeOrder.tfrDocument.tfrNumber, newChangeOrder.tfrDocument.revision);
              newChangeOrder.tfrDocument.faCompletionDate = null; // reset fa completion date for change order TFR document

              newChangeOrder.save();
              //Re-couple documents in cloned order
              newChangeOrder.tfrDocument.prnId = newChangeOrder.prnDocument.id;
              newChangeOrder.prnDocument.prnrId = newChangeOrder.prnrDocument.id;
              newChangeOrder.prnDocument.tfrId = newChangeOrder.tfrDocument.id;

              //Calculate total newChangeOrder.tfrDocument
              newChangeOrder.tfrDocument.existing = tfr.existing + tfr.required;

              //Save documents before linking them, otherwise db constraints could cause an error
              newChangeOrder.prnrDocument.save();
              newChangeOrder.prnDocument.save();
              newChangeOrder.tfrDocument.save();



              newChangeOrder.prnDocument.releasedDate = null;
              newChangeOrder.prnrDocument.changedTFRId = tfr.tfrId;

              //Set statuses for all the documents for previous order to AUTO ACCEPTED
              var prnrStatus = configuration.getExternalNameForStatusByInternalName("AUTOMATICALLY ACCEPTED", "PRNR");
              var prnStatus = configuration.getExternalNameForStatusByInternalName("AUTOMATICALLY ACCEPTED", "PRN");
              changeOrder.prnrDocument.prnrStatus = prnrStatus;
              changeOrder.prnDocument.prnStatus = prnStatus;
              changeOrder.tfrDocument.tfrStatus = statusAutoAccepted;
              changeOrder.save();

              // Replace working order with new one
              changeOrder = newChangeOrder;
          }


          changeOrder.save();

          debugPrintln("Starting new change process: "+changeOrder.id);
          var changeProcessId = Process.startProcess("workflow.changeOrderProcess", changeOrder.id);
          debugPrintln("Change process:"+ changeProcessId +" started for order: "+changeOrder.id);

          Global.showUserMessage("Change process started successfully");
        ]]></script>
      </method>
      <method name="changeConfirmation" type="uimthd">
        <script><![CDATA[
          var cList = workflow.findRunningProcessesByType(this.model.cwOrderId, "workflow.changeOrderProcess");
          var iList = workflow.findRunningProcessesByType(this.model.cwOrderId, "workflow.installOrderProcess");
          var message = "";

          if(iList && iList.length > 0){
            message = message + iList.length +" Install process(es) already running;\n";
          }
          if(cList && cList.length > 0){
            message = message + cList.length +" Change process(es) already running\n";
          }

          return Global.translateText("AW0007",null, message);
        ]]></script>
      </method>
      <method name="completedTFRChange" type="permMethod">
        <privilegesList>
          <privileges type="ppriv">
            <privilege>STC_IOrdInitPriv</privilege>
          </privileges>
        </privilegesList>
        <privilegesType>SOME</privilegesType>
        <script><![CDATA[
          var statusComplete = configuration.getExternalNameForStatusByInternalName("COMPLETED", "TFR");
          var isNotDisconnect = !Boolean(this.model.disconnectedTFRId); // shoud be hidden for disconnect TFR

          if($psCondition && this.model.tfrStatus == statusComplete && isNotDisconnect ){
          //if($psCondition && isNotDisconnect ){ // hide button in case condiion is not satisfied and tfr is disconnected
              return true;
          }

          return false;
        ]]></script>
      </method>
      <method name="disconnectTFRConfirmation" type="uimthd">
        <script><![CDATA[return Global.translateText("AW0008");]]></script>
      </method>
      <method name="rehomeTFRConfirmation" type="uimthd">
        <script><![CDATA[return Global.translateText("AW0009");]]></script>
      </method>
      <method name="cancelDisconnectConfirmation" type="uimthd">
        <script><![CDATA[return Global.translateText("AW0010");]]></script>
      </method>
      <method name="cancelConfirmation" type="uimthd">
        <script><![CDATA[
          //return Global.translateText("AW0011");
          return Global.translateText("AW0011",null, "TFR");
        ]]></script>
      </method>
      <method name="showRelatedTasks" type="usrActionMethod">
        <dialogHeight>768</dialogHeight>
        <dialogWidth>1024</dialogWidth>
        <showInPopup>true</showInPopup>
        <script><![CDATA[
          var tfrTaskFinder = new Finder("tfs.findAllTasks");
          tfrTaskFinder.searchDocument.tfrNumber = this.model.tfrNumber;
          tfrTaskFinder.search();

          return tfrTaskFinder;
        ]]></script>
      </method>
      <method name="showPreviousRevision" type="usrActionMethod">
        <dialogHeight>768</dialogHeight>
        <dialogWidth>1024</dialogWidth>
        <showInPopup>true</showInPopup>
        <script><![CDATA[
          if(this.model.id == null) {
              Global.throwException("AE0010", ["PRN", "TFR"]);
          }
          var prn =  Document.readDoc("tfs.prn", this.model.prnId);
          var prnr =  Document.readDoc("tfs.prnr", prn.prnrId);
          var tfr = Document.readDoc("tfs.tfr", prnr.changedTFRId);

          return tfr;
        ]]></script>
      </method>
      <method name="onCWOReportTFRChange" type="permMethod">
        <privilegesList>
          <privileges type="ppriv">
            <noOtherTasks>true</noOtherTasks>
            <participantsList>
              <participants type="ppart">
                <operationsList>
                  <operations>iface_workflow.orderInitiatorTeamIF/oper_reviewCWOReport</operations>
                </operationsList>
                <participant>part_workflow.installOrderInitiatorParticipant</participant>
              </participants>
            </participantsList>
            <privilege>STC_IOrdInitPriv</privilege>
            <task>true</task>
          </privileges>
        </privilegesList>
        <privilegesType>SOME</privilegesType>
        <script>return $psCondition</script>
      </method>
      <method name="chTFRISVisable" type="permMethod">
        <privilegesList>
          <privileges type="ppriv">
            <noOtherTasks>true</noOtherTasks>
            <participantsList>
              <participants type="ppart">
                <operationsList>
                  <operations>iface_workflow.orderInitiatorTeamIF/oper_reviewCWOReport</operations>
                </operationsList>
                <participant>part_workflow.installOrderInitiatorParticipant</participant>
              </participants>
            </participantsList>
            <privilege>STC_IOrdInitPriv</privilege>
          </privileges>
        </privilegesList>
        <privilegesType>SOME</privilegesType>
        <script><![CDATA[
          //pending or completed, not cancelled, not disconnected, not rehomed
          var statusComplete = configuration.getExternalNameForStatusByInternalName("COMPLETED", "TFR");
          var statusCancelled = configuration.getExternalNameForStatusByInternalName("CANCELLED", "TFR");
          var statusRehomed = configuration.getExternalNameForStatusByInternalName("REHOMED", "TFR");
          var statusDisconnected = configuration.getExternalNameForStatusByInternalName("DISCONNECTED", "TFR");
          var statusAutoAccepted = configuration.getExternalNameForStatusByInternalName("AUTOMATICALLY ACCEPTED", "TFR");

          var changeOrder = Order.getOrderById(this.model.cwOrderId);

          var tfr = Document.readDoc("tfs.tfr", this.model.tfrId);

          if(tfr.tfrStatus == statusDisconnected || tfr.tfrStatus == statusRehomed || tfr.tfrStatus == statusCancelled){
              return false;
          }

          // check if TFR is not disconnected
          // verify that there are no TFRs in which the attribute “DISCONNECTED TFR” is set with the id of the current TFR
          var discFinder = new Finder("tfs.findTFRWithDisconnectedTFRIdByTFRId");
          discFinder.searchDocument.tfrId = this.model.tfrId;
          var resultList = discFinder.search();

          // if there are such TFRs
          // these should have internal status = “CANCELLED”; if not, the user cannot execute the action
          // Assumed that this check also verifies that there is no runninng Disconnect processes for this TFR
          // In case it is runnning, the status will be different from CANCELLED so validation will no pass
          if( resultList.length ){ // if there is already disconnected TFRs
              debugPrintln( "Found " + resultList.length + " already disconnected TFR's. Check internal statuses..." );
              for( var i=0; i < resultList.length; i++ ){ // check internal statuses
                  var currentTFR = resultList[i];
                  debugPrintln("TFR status:"+currentTFR.tfrStatus);
                  if( currentTFR.tfrStatus != configuration.getExternalNameForStatusByInternalName("CANCELLED","TFR") ){ // if found TFR is not in "CANCELLED" status
                     return false;
                  }
              }
          }
          debugPrintln("TFR is not disconnected or Disconnect order has been cancelled.");

          if(tfr && tfr.connectionTFRId && tfr.disconnectedTFRId){
              return false;
          }


          if((tfr.tfrStatus == statusComplete) || (tfr.tfrStatus == statusAutoAccepted)){
              try{
                  if(!tfs.isChangeAvailable(tfr)){
                      return false;
                  }
              } catch(err) {
                  return false;
              }
          }

          var isNotDisconnect = !Boolean(this.model.disconnectedTFRId); // shoud be hidden for disconnect TFR
          if(this.onCWOReportTFRChange($psCondition) && isNotDisconnect){
              return true
          }
          if($psCondition && this.model.tfrStatus == statusComplete && isNotDisconnect ){
              return true;
          }

          return false;
        ]]></script>
      </method>
      <method name="showRejectionProcessSteps" type="usrActionMethod">
        <dialogHeight>768</dialogHeight>
        <dialogWidth>1024</dialogWidth>
        <showInPopup>true</showInPopup>
        <script><![CDATA[
          var rejectionProcessDataFinder = new Finder("tfs.rejectionProcessDataFinder");
          rejectionProcessDataFinder.searchDocument.tfrId = this.model.id;
          var rejectionProcessDataFound = rejectionProcessDataFinder.search();

          var activitiesFinder = null;

          if(rejectionProcessDataFound != null && rejectionProcessDataFound.length > 0) {
              activitiesFinder = new Finder("workflow.rejectionProcessActivityForGUIFinder");
              activitiesFinder.searchDocument.cwDocID = rejectionProcessDataFound[0].processId;
              activitiesFinder.search();
          }

          return activitiesFinder;
        ]]></script>
      </method>
      <method name="isRejectionProcessStepsVisible" type="permMethod">
        <privilegesList>
          <privileges type="ppriv">
            <privilege>STC_IOrdInitPriv</privilege>
          </privileges>
          <privileges type="ppriv">
            <privilege>STC_IntegPriv</privilege>
          </privileges>
        </privilegesList>
        <privilegesType>SOME</privilegesType>
        <script><![CDATA[
          var visible = false;

          var rejectionProcessDataFinder = new Finder("tfs.rejectionProcessDataFinder");
          rejectionProcessDataFinder.searchDocument.tfrId = this.model.id;
          var rejectionProcessDataFound = rejectionProcessDataFinder.search();

          if(rejectionProcessDataFound != null && rejectionProcessDataFound.length > 0) {
              visible = true;
          }

          return visible;
        ]]></script>
      </method>
      <method name="biTeamPrivilege" type="permMethod">
        <privilegesList>
          <privileges type="ppriv">
            <participantsList>
              <participants type="ppart">
                <operationsList>
                  <operations>iface_workflow.biTeamIF/oper_prepareToCompleteBIMgmt</operations>
                </operationsList>
                <participant>part_workflow.biTeamParticipant</participant>
              </participants>
            </participantsList>
            <privilege>STC_BIPriv</privilege>
            <task>true</task>
          </privileges>
        </privilegesList>
        <privilegesType>SOME</privilegesType>
        <script>return $psCondition;</script>
      </method>
      <method name="showBIToLink" type="usrActionMethod">
        <dialogHeight>768</dialogHeight>
        <dialogWidth>1024</dialogWidth>
        <showInPopup>true</showInPopup>
        <validate>true</validate>
        <script><![CDATA[
          var finder = new Finder("tfs.findOpenBIToLinkToPRN_TFR");
          finder.searchDocument.biStatus = configuration.getExternalNameForStatusByInternalName("COMPLETED", "BI");
          finder.searchDocument.tfrId = this.model.tfrId;
          finder.search();

          return finder;
        ]]></script>
      </method>
      <method name="createNewBI" type="usrActionMethod">
        <dialogHeight>768</dialogHeight>
        <dialogObject>ui_tfs.dialogWithCloseControl</dialogObject>
        <dialogWidth>1024</dialogWidth>
        <showInPopup>true</showInPopup>
        <validate>true</validate>
        <script><![CDATA[
          var biDocument = tfs.createNewBIOrder(null, this.model.tfrId, Global.getUserId());

          return biDocument;
        ]]></script>
      </method>
    </methodList>
  </UserInterface>
</document>